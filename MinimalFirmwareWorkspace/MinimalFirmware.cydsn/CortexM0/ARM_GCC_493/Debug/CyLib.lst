ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 006CDC02 		.word	48000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 80BB0000 		.word	48000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 30       		.byte	48
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000C05D 		.word	1572864000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103 002e 0000     		.section	.text.CySysClkImoStart,"ax",%progbits
 104              		.align	2
 105              		.global	CySysClkImoStart
 106              		.code	16
 107              		.thumb_func
 108              		.type	CySysClkImoStart, %function
 109              	CySysClkImoStart:
 110              	.LFB2:
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 3


 111              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:.\Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:.\Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:.\Generated_Source\PSoC4/CyLib.c **** *
  11:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:.\Generated_Source\PSoC4/CyLib.c **** *
  46:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:.\Generated_Source\PSoC4/CyLib.c **** *
  49:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 4


  57:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:.\Generated_Source\PSoC4/CyLib.c **** 
  84:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:.\Generated_Source\PSoC4/CyLib.c **** 
  89:.\Generated_Source\PSoC4/CyLib.c **** 
  90:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:.\Generated_Source\PSoC4/CyLib.c **** *
  94:.\Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:.\Generated_Source\PSoC4/CyLib.c **** *
  96:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:.\Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:.\Generated_Source\PSoC4/CyLib.c **** *
 100:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:.\Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:.\Generated_Source\PSoC4/CyLib.c **** *
 103:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:.\Generated_Source\PSoC4/CyLib.c **** {
 112              		.loc 1 105 0
 113              		.cfi_startproc
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 5


 106:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 120              		.loc 1 106 0
 121 0004 044B     		ldr	r3, .L2
 122 0006 044A     		ldr	r2, .L2
 123 0008 1268     		ldr	r2, [r2]
 124 000a 8021     		mov	r1, #128
 125 000c 0906     		lsl	r1, r1, #24
 126 000e 0A43     		orr	r2, r1
 127 0010 1A60     		str	r2, [r3]
 107:.\Generated_Source\PSoC4/CyLib.c **** 
 108:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:.\Generated_Source\PSoC4/CyLib.c **** 
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** }
 128              		.loc 1 121 0
 129 0012 BD46     		mov	sp, r7
 130              		@ sp needed
 131 0014 80BD     		pop	{r7, pc}
 132              	.L3:
 133 0016 C046     		.align	2
 134              	.L2:
 135 0018 08010B40 		.word	1074462984
 136              		.cfi_endproc
 137              	.LFE2:
 138              		.size	CySysClkImoStart, .-CySysClkImoStart
 139              		.section	.text.CySysClkImoStop,"ax",%progbits
 140              		.align	2
 141              		.global	CySysClkImoStop
 142              		.code	16
 143              		.thumb_func
 144              		.type	CySysClkImoStop, %function
 145              	CySysClkImoStop:
 146              	.LFB3:
 122:.\Generated_Source\PSoC4/CyLib.c **** 
 123:.\Generated_Source\PSoC4/CyLib.c **** 
 124:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:.\Generated_Source\PSoC4/CyLib.c **** *
 128:.\Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:.\Generated_Source\PSoC4/CyLib.c **** *
 130:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:.\Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:.\Generated_Source\PSoC4/CyLib.c **** *
 133:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 6


 136:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:.\Generated_Source\PSoC4/CyLib.c **** {
 147              		.loc 1 137 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
 138:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:.\Generated_Source\PSoC4/CyLib.c **** 
 142:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:.\Generated_Source\PSoC4/CyLib.c **** 
 146:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 155              		.loc 1 146 0
 156 0004 034B     		ldr	r3, .L5
 157 0006 034A     		ldr	r2, .L5
 158 0008 1268     		ldr	r2, [r2]
 159 000a 5200     		lsl	r2, r2, #1
 160 000c 5208     		lsr	r2, r2, #1
 161 000e 1A60     		str	r2, [r3]
 147:.\Generated_Source\PSoC4/CyLib.c **** }
 162              		.loc 1 147 0
 163 0010 BD46     		mov	sp, r7
 164              		@ sp needed
 165 0012 80BD     		pop	{r7, pc}
 166              	.L6:
 167              		.align	2
 168              	.L5:
 169 0014 08010B40 		.word	1074462984
 170              		.cfi_endproc
 171              	.LFE3:
 172              		.size	CySysClkImoStop, .-CySysClkImoStop
 173              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 174              		.align	2
 175              		.global	CySysClkWriteHfclkDirect
 176              		.code	16
 177              		.thumb_func
 178              		.type	CySysClkWriteHfclkDirect, %function
 179              	CySysClkWriteHfclkDirect:
 180              	.LFB4:
 148:.\Generated_Source\PSoC4/CyLib.c **** 
 149:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:.\Generated_Source\PSoC4/CyLib.c **** 
 151:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:.\Generated_Source\PSoC4/CyLib.c ****     *
 155:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:.\Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:.\Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 7


 159:.\Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:.\Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:.\Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:.\Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:.\Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:.\Generated_Source\PSoC4/CyLib.c ****     *
 165:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:.\Generated_Source\PSoC4/CyLib.c ****     *
 171:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:.\Generated_Source\PSoC4/CyLib.c ****     {
 174:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:.\Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:.\Generated_Source\PSoC4/CyLib.c **** 
 178:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:.\Generated_Source\PSoC4/CyLib.c ****         {
 186:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:.\Generated_Source\PSoC4/CyLib.c **** 
 188:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:.\Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:.\Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:.\Generated_Source\PSoC4/CyLib.c ****                 {
 200:.\Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:.\Generated_Source\PSoC4/CyLib.c ****                     {
 202:.\Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:.\Generated_Source\PSoC4/CyLib.c ****                         break;
 204:.\Generated_Source\PSoC4/CyLib.c ****                     }
 205:.\Generated_Source\PSoC4/CyLib.c ****                 }
 206:.\Generated_Source\PSoC4/CyLib.c ****             #else
 207:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 208:.\Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:.\Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:.\Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:.\Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:.\Generated_Source\PSoC4/CyLib.c ****                 #else
 214:.\Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 8


 216:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:.\Generated_Source\PSoC4/CyLib.c **** 
 218:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:.\Generated_Source\PSoC4/CyLib.c **** 
 220:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:.\Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****                 {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:.\Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****                 }
 227:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:.\Generated_Source\PSoC4/CyLib.c **** 
 229:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:.\Generated_Source\PSoC4/CyLib.c **** 
 234:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:.\Generated_Source\PSoC4/CyLib.c **** 
 237:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:.\Generated_Source\PSoC4/CyLib.c **** 
 240:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:.\Generated_Source\PSoC4/CyLib.c ****             {
 243:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:.\Generated_Source\PSoC4/CyLib.c ****             }
 245:.\Generated_Source\PSoC4/CyLib.c ****             else
 246:.\Generated_Source\PSoC4/CyLib.c ****             {
 247:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:.\Generated_Source\PSoC4/CyLib.c **** 
 250:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:.\Generated_Source\PSoC4/CyLib.c **** 
 253:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:.\Generated_Source\PSoC4/CyLib.c ****             }
 255:.\Generated_Source\PSoC4/CyLib.c **** 
 256:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 257:.\Generated_Source\PSoC4/CyLib.c **** 
 258:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 259:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 262:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:.\Generated_Source\PSoC4/CyLib.c **** 
 264:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 265:.\Generated_Source\PSoC4/CyLib.c ****         }
 266:.\Generated_Source\PSoC4/CyLib.c ****     }
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c **** 
 269:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 9


 273:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:.\Generated_Source\PSoC4/CyLib.c ****     *
 278:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:.\Generated_Source\PSoC4/CyLib.c ****     *
 281:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:.\Generated_Source\PSoC4/CyLib.c ****     {
 284:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285:.\Generated_Source\PSoC4/CyLib.c ****     }
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c **** 
 288:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:.\Generated_Source\PSoC4/CyLib.c ****     *
 292:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:.\Generated_Source\PSoC4/CyLib.c ****     *
 300:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:.\Generated_Source\PSoC4/CyLib.c ****     {
 303:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 304:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 305:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:.\Generated_Source\PSoC4/CyLib.c ****     }
 307:.\Generated_Source\PSoC4/CyLib.c **** 
 308:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:.\Generated_Source\PSoC4/CyLib.c **** 
 310:.\Generated_Source\PSoC4/CyLib.c **** 
 311:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:.\Generated_Source\PSoC4/CyLib.c ****     *
 317:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:.\Generated_Source\PSoC4/CyLib.c ****     *
 319:.\Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:.\Generated_Source\PSoC4/CyLib.c ****     *
 321:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 322:.\Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:.\Generated_Source\PSoC4/CyLib.c ****     *
 324:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 10


 330:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:.\Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:.\Generated_Source\PSoC4/CyLib.c **** 
 343:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:.\Generated_Source\PSoC4/CyLib.c ****     }
 345:.\Generated_Source\PSoC4/CyLib.c **** 
 346:.\Generated_Source\PSoC4/CyLib.c **** 
 347:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:.\Generated_Source\PSoC4/CyLib.c ****     *
 351:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:.\Generated_Source\PSoC4/CyLib.c ****     *
 353:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:.\Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:.\Generated_Source\PSoC4/CyLib.c ****     *
 356:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:.\Generated_Source\PSoC4/CyLib.c ****     *
 359:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:.\Generated_Source\PSoC4/CyLib.c ****     {
 362:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:.\Generated_Source\PSoC4/CyLib.c **** 
 364:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:.\Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:.\Generated_Source\PSoC4/CyLib.c ****     }
 370:.\Generated_Source\PSoC4/CyLib.c **** 
 371:.\Generated_Source\PSoC4/CyLib.c **** 
 372:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:.\Generated_Source\PSoC4/CyLib.c ****     *
 376:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:.\Generated_Source\PSoC4/CyLib.c ****     *
 378:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 379:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:.\Generated_Source\PSoC4/CyLib.c ****     *
 381:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:.\Generated_Source\PSoC4/CyLib.c ****     *
 384:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 11


 387:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:.\Generated_Source\PSoC4/CyLib.c ****     }
 391:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:.\Generated_Source\PSoC4/CyLib.c **** 
 393:.\Generated_Source\PSoC4/CyLib.c **** 
 394:.\Generated_Source\PSoC4/CyLib.c **** 
 395:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:.\Generated_Source\PSoC4/CyLib.c **** *
 399:.\Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:.\Generated_Source\PSoC4/CyLib.c **** *
 401:.\Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:.\Generated_Source\PSoC4/CyLib.c **** *
 403:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:.\Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:.\Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:.\Generated_Source\PSoC4/CyLib.c **** *
 407:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:.\Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:.\Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:.\Generated_Source\PSoC4/CyLib.c **** *
 414:.\Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:.\Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:.\Generated_Source\PSoC4/CyLib.c **** *
 417:.\Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:.\Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:.\Generated_Source\PSoC4/CyLib.c **** *
 425:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:.\Generated_Source\PSoC4/CyLib.c **** {
 181              		.loc 1 427 0
 182              		.cfi_startproc
 183 0000 90B5     		push	{r4, r7, lr}
 184              		.cfi_def_cfa_offset 12
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 85B0     		sub	sp, sp, #20
 189              		.cfi_def_cfa_offset 32
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 428:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:.\Generated_Source\PSoC4/CyLib.c **** 
 431:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 12


 193              		.loc 1 431 0
 194 0008 0F23     		mov	r3, #15
 195 000a FC18     		add	r4, r7, r3
 196 000c FFF7FEFF 		bl	CyEnterCriticalSection
 197 0010 031C     		mov	r3, r0
 198 0012 2370     		strb	r3, [r4]
 432:.\Generated_Source\PSoC4/CyLib.c **** 
 433:.\Generated_Source\PSoC4/CyLib.c **** 
 434:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 199              		.loc 1 434 0
 200 0014 0B4B     		ldr	r3, .L8
 201 0016 1B68     		ldr	r3, [r3]
 202 0018 0722     		mov	r2, #7
 203 001a 9343     		bic	r3, r2
 204 001c BB60     		str	r3, [r7, #8]
 435:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:.\Generated_Source\PSoC4/CyLib.c **** 
 437:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:.\Generated_Source\PSoC4/CyLib.c ****     {
 440:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:.\Generated_Source\PSoC4/CyLib.c ****     }
 442:.\Generated_Source\PSoC4/CyLib.c ****     else
 443:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:.\Generated_Source\PSoC4/CyLib.c ****     {
 445:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 205              		.loc 1 445 0
 206 001e 7B68     		ldr	r3, [r7, #4]
 207 0020 0722     		mov	r2, #7
 208 0022 1340     		and	r3, r2
 209 0024 BA68     		ldr	r2, [r7, #8]
 210 0026 1343     		orr	r3, r2
 211 0028 BB60     		str	r3, [r7, #8]
 446:.\Generated_Source\PSoC4/CyLib.c ****     }
 447:.\Generated_Source\PSoC4/CyLib.c **** 
 448:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 212              		.loc 1 448 0
 213 002a 064B     		ldr	r3, .L8
 214 002c BA68     		ldr	r2, [r7, #8]
 215 002e 1A60     		str	r2, [r3]
 449:.\Generated_Source\PSoC4/CyLib.c **** 
 450:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 216              		.loc 1 450 0
 217 0030 0F23     		mov	r3, #15
 218 0032 FB18     		add	r3, r7, r3
 219 0034 1B78     		ldrb	r3, [r3]
 220 0036 181C     		mov	r0, r3
 221 0038 FFF7FEFF 		bl	CyExitCriticalSection
 451:.\Generated_Source\PSoC4/CyLib.c **** }
 222              		.loc 1 451 0
 223 003c BD46     		mov	sp, r7
 224 003e 05B0     		add	sp, sp, #20
 225              		@ sp needed
 226 0040 90BD     		pop	{r4, r7, pc}
 227              	.L9:
 228 0042 C046     		.align	2
 229              	.L8:
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 13


 230 0044 00010B40 		.word	1074462976
 231              		.cfi_endproc
 232              	.LFE4:
 233              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 234              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 235              		.align	2
 236              		.global	CySysClkGetSysclkSource
 237              		.code	16
 238              		.thumb_func
 239              		.type	CySysClkGetSysclkSource, %function
 240              	CySysClkGetSysclkSource:
 241              	.LFB5:
 452:.\Generated_Source\PSoC4/CyLib.c **** 
 453:.\Generated_Source\PSoC4/CyLib.c **** 
 454:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:.\Generated_Source\PSoC4/CyLib.c **** *
 458:.\Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:.\Generated_Source\PSoC4/CyLib.c **** *
 460:.\Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:.\Generated_Source\PSoC4/CyLib.c **** *
 462:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:.\Generated_Source\PSoC4/CyLib.c **** {
 242              		.loc 1 464 0
 243              		.cfi_startproc
 244 0000 90B5     		push	{r4, r7, lr}
 245              		.cfi_def_cfa_offset 12
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 83B0     		sub	sp, sp, #12
 250              		.cfi_def_cfa_offset 24
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 465:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:.\Generated_Source\PSoC4/CyLib.c **** 
 468:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 253              		.loc 1 468 0
 254 0006 FC1D     		add	r4, r7, #7
 255 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 256 000c 031C     		mov	r3, r0
 257 000e 2370     		strb	r3, [r4]
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:.\Generated_Source\PSoC4/CyLib.c ****     {
 473:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:.\Generated_Source\PSoC4/CyLib.c ****     }
 475:.\Generated_Source\PSoC4/CyLib.c ****     else
 476:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:.\Generated_Source\PSoC4/CyLib.c ****     {
 478:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 258              		.loc 1 478 0
 259 0010 074B     		ldr	r3, .L12
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 14


 260 0012 1B68     		ldr	r3, [r3]
 261 0014 0722     		mov	r2, #7
 262 0016 1340     		and	r3, r2
 263 0018 3B60     		str	r3, [r7]
 479:.\Generated_Source\PSoC4/CyLib.c ****     }
 480:.\Generated_Source\PSoC4/CyLib.c **** 
 481:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 264              		.loc 1 481 0
 265 001a FB1D     		add	r3, r7, #7
 266 001c 1B78     		ldrb	r3, [r3]
 267 001e 181C     		mov	r0, r3
 268 0020 FFF7FEFF 		bl	CyExitCriticalSection
 482:.\Generated_Source\PSoC4/CyLib.c **** 
 483:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 269              		.loc 1 483 0
 270 0024 3B68     		ldr	r3, [r7]
 484:.\Generated_Source\PSoC4/CyLib.c **** }
 271              		.loc 1 484 0
 272 0026 181C     		mov	r0, r3
 273 0028 BD46     		mov	sp, r7
 274 002a 03B0     		add	sp, sp, #12
 275              		@ sp needed
 276 002c 90BD     		pop	{r4, r7, pc}
 277              	.L13:
 278 002e C046     		.align	2
 279              	.L12:
 280 0030 00010B40 		.word	1074462976
 281              		.cfi_endproc
 282              	.LFE5:
 283              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 284              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 285              		.align	2
 286              		.global	CySysClkWriteSysclkDiv
 287              		.code	16
 288              		.thumb_func
 289              		.type	CySysClkWriteSysclkDiv, %function
 290              	CySysClkWriteSysclkDiv:
 291              	.LFB6:
 485:.\Generated_Source\PSoC4/CyLib.c **** 
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 490:.\Generated_Source\PSoC4/CyLib.c **** *
 491:.\Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:.\Generated_Source\PSoC4/CyLib.c **** *
 496:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:.\Generated_Source\PSoC4/CyLib.c **** *
 500:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 15


 504:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:.\Generated_Source\PSoC4/CyLib.c **** *
 507:.\Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:.\Generated_Source\PSoC4/CyLib.c **** *
 517:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:.\Generated_Source\PSoC4/CyLib.c **** {
 292              		.loc 1 519 0
 293              		.cfi_startproc
 294 0000 90B5     		push	{r4, r7, lr}
 295              		.cfi_def_cfa_offset 12
 296              		.cfi_offset 4, -12
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 85B0     		sub	sp, sp, #20
 300              		.cfi_def_cfa_offset 32
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
 520:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:.\Generated_Source\PSoC4/CyLib.c **** 
 522:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 304              		.loc 1 522 0
 305 0008 0F23     		mov	r3, #15
 306 000a FC18     		add	r4, r7, r3
 307 000c FFF7FEFF 		bl	CyEnterCriticalSection
 308 0010 031C     		mov	r3, r0
 309 0012 2370     		strb	r3, [r4]
 523:.\Generated_Source\PSoC4/CyLib.c **** 
 524:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 310              		.loc 1 524 0
 311 0014 094B     		ldr	r3, .L15
 312 0016 7A68     		ldr	r2, [r7, #4]
 313 0018 0721     		mov	r1, #7
 314 001a 0A40     		and	r2, r1
 315 001c D104     		lsl	r1, r2, #19
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 316              		.loc 1 526 0
 317 001e 074A     		ldr	r2, .L15
 318 0020 1268     		ldr	r2, [r2]
 319 0022 0748     		ldr	r0, .L15+4
 320 0024 0240     		and	r2, r0
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 321              		.loc 1 525 0
 322 0026 0A43     		orr	r2, r1
 524:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 323              		.loc 1 524 0
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 16


 324 0028 1A60     		str	r2, [r3]
 527:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 325              		.loc 1 529 0
 326 002a 0F23     		mov	r3, #15
 327 002c FB18     		add	r3, r7, r3
 328 002e 1B78     		ldrb	r3, [r3]
 329 0030 181C     		mov	r0, r3
 330 0032 FFF7FEFF 		bl	CyExitCriticalSection
 530:.\Generated_Source\PSoC4/CyLib.c **** }
 331              		.loc 1 530 0
 332 0036 BD46     		mov	sp, r7
 333 0038 05B0     		add	sp, sp, #20
 334              		@ sp needed
 335 003a 90BD     		pop	{r4, r7, pc}
 336              	.L16:
 337              		.align	2
 338              	.L15:
 339 003c 00010B40 		.word	1074462976
 340 0040 FFFFC7FF 		.word	-3670017
 341              		.cfi_endproc
 342              	.LFE6:
 343              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 344              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 345              		.align	2
 346              		.global	CySysClkWriteImoFreq
 347              		.code	16
 348              		.thumb_func
 349              		.type	CySysClkWriteImoFreq, %function
 350              	CySysClkWriteImoFreq:
 351              	.LFB7:
 531:.\Generated_Source\PSoC4/CyLib.c **** 
 532:.\Generated_Source\PSoC4/CyLib.c **** 
 533:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:.\Generated_Source\PSoC4/CyLib.c **** *
 537:.\Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:.\Generated_Source\PSoC4/CyLib.c **** *
 539:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:.\Generated_Source\PSoC4/CyLib.c **** *
 542:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 547:.\Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:.\Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:.\Generated_Source\PSoC4/CyLib.c **** *
 550:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:.\Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:.\Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:.\Generated_Source\PSoC4/CyLib.c **** *
 555:.\Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 17


 556:.\Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:.\Generated_Source\PSoC4/CyLib.c **** *
 558:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:.\Generated_Source\PSoC4/CyLib.c **** *
 565:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:.\Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:.\Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:.\Generated_Source\PSoC4/CyLib.c **** *
 569:.\Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:.\Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:.\Generated_Source\PSoC4/CyLib.c **** * 4.
 573:.\Generated_Source\PSoC4/CyLib.c **** *
 574:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:.\Generated_Source\PSoC4/CyLib.c ****     {
 352              		.loc 1 577 0
 353              		.cfi_startproc
 354 0000 90B5     		push	{r4, r7, lr}
 355              		.cfi_def_cfa_offset 12
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 7, -8
 358              		.cfi_offset 14, -4
 359 0002 8BB0     		sub	sp, sp, #44
 360              		.cfi_def_cfa_offset 56
 361 0004 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 363 0006 7860     		str	r0, [r7, #4]
 578:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:.\Generated_Source\PSoC4/CyLib.c ****         #else
 582:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:.\Generated_Source\PSoC4/CyLib.c **** 
 589:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:.\Generated_Source\PSoC4/CyLib.c **** 
 597:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:.\Generated_Source\PSoC4/CyLib.c **** 
 599:.\Generated_Source\PSoC4/CyLib.c **** 
 600:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 18


 364              		.loc 1 600 0
 365 0008 2723     		mov	r3, #39
 366 000a FC18     		add	r4, r7, r3
 367 000c FFF7FEFF 		bl	CyEnterCriticalSection
 368 0010 031C     		mov	r3, r0
 369 0012 2370     		strb	r3, [r4]
 601:.\Generated_Source\PSoC4/CyLib.c **** 
 602:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 604:.\Generated_Source\PSoC4/CyLib.c ****             {
 605:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:.\Generated_Source\PSoC4/CyLib.c ****             }
 608:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:.\Generated_Source\PSoC4/CyLib.c **** 
 610:.\Generated_Source\PSoC4/CyLib.c **** 
 611:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:.\Generated_Source\PSoC4/CyLib.c **** 
 613:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:.\Generated_Source\PSoC4/CyLib.c ****                 {
 616:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:.\Generated_Source\PSoC4/CyLib.c **** 
 618:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:.\Generated_Source\PSoC4/CyLib.c ****                 {
 620:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:.\Generated_Source\PSoC4/CyLib.c ****                 }
 623:.\Generated_Source\PSoC4/CyLib.c **** 
 624:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:.\Generated_Source\PSoC4/CyLib.c ****                 }
 626:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:.\Generated_Source\PSoC4/CyLib.c **** 
 628:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:.\Generated_Source\PSoC4/CyLib.c **** 
 630:.\Generated_Source\PSoC4/CyLib.c **** 
 631:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 370              		.loc 1 634 0
 371 0014 184B     		ldr	r3, .L18
 372 0016 1A68     		ldr	r2, [r3]
 373 0018 0C23     		mov	r3, #12
 374 001a FB18     		add	r3, r7, r3
 375 001c 1A60     		str	r2, [r3]
 635:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 376              		.loc 1 635 0
 377 001e 174B     		ldr	r3, .L18+4
 378 0020 1A68     		ldr	r2, [r3]
 379 0022 0C23     		mov	r3, #12
 380 0024 FB18     		add	r3, r7, r3
 381 0026 5A60     		str	r2, [r3, #4]
 636:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 382              		.loc 1 636 0
 383 0028 7B68     		ldr	r3, [r7, #4]
 384 002a 033B     		sub	r3, r3, #3
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 19


 385 002c 144A     		ldr	r2, .L18+8
 386 002e D35C     		ldrb	r3, [r2, r3]
 387 0030 1A1C     		mov	r2, r3
 388 0032 0C23     		mov	r3, #12
 389 0034 FB18     		add	r3, r7, r3
 390 0036 9A60     		str	r2, [r3, #8]
 637:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 391              		.loc 1 637 0
 392 0038 124B     		ldr	r3, .L18+12
 393 003a 1A68     		ldr	r2, [r3]
 394 003c 0C23     		mov	r3, #12
 395 003e FB18     		add	r3, r7, r3
 396 0040 DA60     		str	r2, [r3, #12]
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 397              		.loc 1 639 0
 398 0042 1C23     		mov	r3, #28
 399 0044 FB18     		add	r3, r7, r3
 400 0046 104A     		ldr	r2, .L18+16
 401 0048 1A60     		str	r2, [r3]
 640:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 402              		.loc 1 642 0
 403 004a 0C23     		mov	r3, #12
 404 004c FA18     		add	r2, r7, r3
 405 004e 1C23     		mov	r3, #28
 406 0050 FB18     		add	r3, r7, r3
 407 0052 5A60     		str	r2, [r3, #4]
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 408              		.loc 1 644 0
 409 0054 0D4B     		ldr	r3, .L18+20
 410 0056 1C22     		mov	r2, #28
 411 0058 BA18     		add	r2, r7, r2
 412 005a 1A60     		str	r2, [r3]
 645:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 413              		.loc 1 645 0
 414 005c 0C4B     		ldr	r3, .L18+24
 415 005e 0D4A     		ldr	r2, .L18+28
 416 0060 1A60     		str	r2, [r3]
 646:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 417              		.loc 1 646 0
 418 0062 0A4B     		ldr	r3, .L18+20
 419 0064 1B68     		ldr	r3, [r3]
 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:.\Generated_Source\PSoC4/CyLib.c **** 
 650:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:.\Generated_Source\PSoC4/CyLib.c ****         {
 652:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:.\Generated_Source\PSoC4/CyLib.c ****             {
 654:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:.\Generated_Source\PSoC4/CyLib.c ****             }
 657:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:.\Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 20


 659:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 661:.\Generated_Source\PSoC4/CyLib.c ****             }
 662:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:.\Generated_Source\PSoC4/CyLib.c ****             {
 664:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:.\Generated_Source\PSoC4/CyLib.c ****             }
 667:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:.\Generated_Source\PSoC4/CyLib.c ****             {
 669:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:.\Generated_Source\PSoC4/CyLib.c ****             }
 672:.\Generated_Source\PSoC4/CyLib.c ****             else
 673:.\Generated_Source\PSoC4/CyLib.c ****             {
 674:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:.\Generated_Source\PSoC4/CyLib.c ****             }
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c **** 
 682:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:.\Generated_Source\PSoC4/CyLib.c ****             *
 687:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:.\Generated_Source\PSoC4/CyLib.c **** 
 697:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:.\Generated_Source\PSoC4/CyLib.c **** 
 699:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c ****             else
 702:.\Generated_Source\PSoC4/CyLib.c ****             {
 703:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:.\Generated_Source\PSoC4/CyLib.c ****             }
 705:.\Generated_Source\PSoC4/CyLib.c **** 
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:.\Generated_Source\PSoC4/CyLib.c ****             *
 711:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 21


 716:.\Generated_Source\PSoC4/CyLib.c ****             {
 717:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 718:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:.\Generated_Source\PSoC4/CyLib.c ****             }
 721:.\Generated_Source\PSoC4/CyLib.c **** 
 722:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:.\Generated_Source\PSoC4/CyLib.c ****                 {
 727:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:.\Generated_Source\PSoC4/CyLib.c ****                 }
 729:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:.\Generated_Source\PSoC4/CyLib.c ****                 {
 731:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:.\Generated_Source\PSoC4/CyLib.c ****                 }
 733:.\Generated_Source\PSoC4/CyLib.c ****                 else
 734:.\Generated_Source\PSoC4/CyLib.c ****                 {
 735:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:.\Generated_Source\PSoC4/CyLib.c ****                 }
 737:.\Generated_Source\PSoC4/CyLib.c ****             #else
 738:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:.\Generated_Source\PSoC4/CyLib.c **** 
 741:.\Generated_Source\PSoC4/CyLib.c **** 
 742:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:.\Generated_Source\PSoC4/CyLib.c **** 
 747:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
 749:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:.\Generated_Source\PSoC4/CyLib.c ****             }
 753:.\Generated_Source\PSoC4/CyLib.c ****         }
 754:.\Generated_Source\PSoC4/CyLib.c ****         else
 755:.\Generated_Source\PSoC4/CyLib.c ****         {
 756:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:.\Generated_Source\PSoC4/CyLib.c ****         }
 759:.\Generated_Source\PSoC4/CyLib.c **** 
 760:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:.\Generated_Source\PSoC4/CyLib.c **** 
 762:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:.\Generated_Source\PSoC4/CyLib.c ****             {
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:.\Generated_Source\PSoC4/CyLib.c **** 
 769:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:.\Generated_Source\PSoC4/CyLib.c ****             {
 772:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 22


 773:.\Generated_Source\PSoC4/CyLib.c ****             }
 774:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 775:.\Generated_Source\PSoC4/CyLib.c **** 
 776:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 420              		.loc 1 776 0
 421 0066 2723     		mov	r3, #39
 422 0068 FB18     		add	r3, r7, r3
 423 006a 1B78     		ldrb	r3, [r3]
 424 006c 181C     		mov	r0, r3
 425 006e FFF7FEFF 		bl	CyExitCriticalSection
 777:.\Generated_Source\PSoC4/CyLib.c ****     }
 426              		.loc 1 777 0
 427 0072 BD46     		mov	sp, r7
 428 0074 0BB0     		add	sp, sp, #44
 429              		@ sp needed
 430 0076 90BD     		pop	{r4, r7, pc}
 431              	.L19:
 432              		.align	2
 433              	.L18:
 434 0078 08010B40 		.word	1074462984
 435 007c 00010B40 		.word	1074462976
 436 0080 00000000 		.word	cyImoFreqMhz2Reg
 437 0084 30001040 		.word	1074790448
 438 0088 B6EA0000 		.word	60086
 439 008c 08001040 		.word	1074790408
 440 0090 04001040 		.word	1074790404
 441 0094 17000080 		.word	-2147483625
 442              		.cfi_endproc
 443              	.LFE7:
 444              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 445              		.section	.text.CySysClkEcoStart,"ax",%progbits
 446              		.align	2
 447              		.global	CySysClkEcoStart
 448              		.code	16
 449              		.thumb_func
 450              		.type	CySysClkEcoStart, %function
 451              	CySysClkEcoStart:
 452              	.LFB8:
 778:.\Generated_Source\PSoC4/CyLib.c **** 
 779:.\Generated_Source\PSoC4/CyLib.c **** #else
 780:.\Generated_Source\PSoC4/CyLib.c **** 
 781:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:.\Generated_Source\PSoC4/CyLib.c ****     {
 783:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:.\Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:.\Generated_Source\PSoC4/CyLib.c **** 
 786:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:.\Generated_Source\PSoC4/CyLib.c ****         
 790:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:.\Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 23


 797:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 799:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:.\Generated_Source\PSoC4/CyLib.c **** 
 804:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:.\Generated_Source\PSoC4/CyLib.c ****                 {
 807:.\Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:.\Generated_Source\PSoC4/CyLib.c ****                 }
 810:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:.\Generated_Source\PSoC4/CyLib.c ****                     {
 817:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:.\Generated_Source\PSoC4/CyLib.c **** 
 819:.\Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:.\Generated_Source\PSoC4/CyLib.c ****                     {
 821:.\Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:.\Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:.\Generated_Source\PSoC4/CyLib.c ****                     }
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:.\Generated_Source\PSoC4/CyLib.c ****                     }
 827:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:.\Generated_Source\PSoC4/CyLib.c **** 
 829:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:.\Generated_Source\PSoC4/CyLib.c **** 
 831:.\Generated_Source\PSoC4/CyLib.c **** 
 832:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c **** 
 836:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:.\Generated_Source\PSoC4/CyLib.c ****                 {
 840:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:.\Generated_Source\PSoC4/CyLib.c ****                 }
 842:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:.\Generated_Source\PSoC4/CyLib.c ****                 {
 844:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:.\Generated_Source\PSoC4/CyLib.c ****                 }
 846:.\Generated_Source\PSoC4/CyLib.c ****                 else
 847:.\Generated_Source\PSoC4/CyLib.c ****                 {
 848:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:.\Generated_Source\PSoC4/CyLib.c ****                 }
 850:.\Generated_Source\PSoC4/CyLib.c ****             #else
 851:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 24


 854:.\Generated_Source\PSoC4/CyLib.c **** 
 855:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:.\Generated_Source\PSoC4/CyLib.c **** 
 858:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:.\Generated_Source\PSoC4/CyLib.c **** 
 862:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:.\Generated_Source\PSoC4/CyLib.c **** 
 864:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:.\Generated_Source\PSoC4/CyLib.c ****             {
 866:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:.\Generated_Source\PSoC4/CyLib.c **** 
 872:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 874:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 875:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:.\Generated_Source\PSoC4/CyLib.c ****             }
 877:.\Generated_Source\PSoC4/CyLib.c **** 
 878:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:.\Generated_Source\PSoC4/CyLib.c ****                 {
 881:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:.\Generated_Source\PSoC4/CyLib.c ****                 }
 883:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:.\Generated_Source\PSoC4/CyLib.c ****         
 885:.\Generated_Source\PSoC4/CyLib.c ****         
 886:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:.\Generated_Source\PSoC4/CyLib.c ****                 {
 889:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:.\Generated_Source\PSoC4/CyLib.c ****                 }
 891:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:.\Generated_Source\PSoC4/CyLib.c **** 
 893:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:.\Generated_Source\PSoC4/CyLib.c ****         }
 895:.\Generated_Source\PSoC4/CyLib.c ****         else
 896:.\Generated_Source\PSoC4/CyLib.c ****         {
 897:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:.\Generated_Source\PSoC4/CyLib.c ****         }
 900:.\Generated_Source\PSoC4/CyLib.c ****     }
 901:.\Generated_Source\PSoC4/CyLib.c **** 
 902:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:.\Generated_Source\PSoC4/CyLib.c **** 
 904:.\Generated_Source\PSoC4/CyLib.c **** 
 905:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:.\Generated_Source\PSoC4/CyLib.c ****     *
 910:.\Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 25


 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:.\Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:.\Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:.\Generated_Source\PSoC4/CyLib.c ****     *
 916:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:.\Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:.\Generated_Source\PSoC4/CyLib.c ****     *
 919:.\Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:.\Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:.\Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:.\Generated_Source\PSoC4/CyLib.c ****     *
 931:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:.\Generated_Source\PSoC4/CyLib.c ****     {
 934:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:.\Generated_Source\PSoC4/CyLib.c **** 
 936:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 937:.\Generated_Source\PSoC4/CyLib.c **** 
 938:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 939:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 941:.\Generated_Source\PSoC4/CyLib.c **** 
 942:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 943:.\Generated_Source\PSoC4/CyLib.c ****     }
 944:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:.\Generated_Source\PSoC4/CyLib.c **** 
 946:.\Generated_Source\PSoC4/CyLib.c **** 
 947:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:.\Generated_Source\PSoC4/CyLib.c **** 
 949:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:.\Generated_Source\PSoC4/CyLib.c ****     *
 953:.\Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:.\Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *
 956:.\Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:.\Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:.\Generated_Source\PSoC4/CyLib.c ****     * called.
 960:.\Generated_Source\PSoC4/CyLib.c ****     *
 961:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:.\Generated_Source\PSoC4/CyLib.c ****     *
 963:.\Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:.\Generated_Source\PSoC4/CyLib.c ****     *
 965:.\Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:.\Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 26


 968:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:.\Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:.\Generated_Source\PSoC4/CyLib.c ****     *
 971:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:.\Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:.\Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:.\Generated_Source\PSoC4/CyLib.c ****     *
 975:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:.\Generated_Source\PSoC4/CyLib.c ****     *
 977:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:.\Generated_Source\PSoC4/CyLib.c ****     {
 453              		.loc 1 979 0
 454              		.cfi_startproc
 455 0000 80B5     		push	{r7, lr}
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 7, -8
 458              		.cfi_offset 14, -4
 459 0002 84B0     		sub	sp, sp, #16
 460              		.cfi_def_cfa_offset 24
 461 0004 00AF     		add	r7, sp, #0
 462              		.cfi_def_cfa_register 7
 463 0006 7860     		str	r0, [r7, #4]
 980:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 464              		.loc 1 980 0
 465 0008 0023     		mov	r3, #0
 466 000a FB60     		str	r3, [r7, #12]
 981:.\Generated_Source\PSoC4/CyLib.c **** 
 982:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 467              		.loc 1 984 0
 468 000c 154B     		ldr	r3, .L26
 469 000e 154A     		ldr	r2, .L26
 470 0010 1268     		ldr	r2, [r2]
 471 0012 0121     		mov	r1, #1
 472 0014 0A43     		orr	r2, r1
 473 0016 1A60     		str	r2, [r3]
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 474              		.loc 1 987 0
 475 0018 134B     		ldr	r3, .L26+4
 476 001a 144A     		ldr	r2, .L26+8
 477 001c 1A60     		str	r2, [r3]
 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 478              		.loc 1 990 0
 479 001e 144B     		ldr	r3, .L26+12
 480 0020 134A     		ldr	r2, .L26+12
 481 0022 1268     		ldr	r2, [r2]
 482 0024 8021     		mov	r1, #128
 483 0026 0902     		lsl	r1, r1, #8
 484 0028 0A43     		orr	r2, r1
 485 002a 1A60     		str	r2, [r3]
 991:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 27


 992:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 486              		.loc 1 997 0
 487 002c 7B68     		ldr	r3, [r7, #4]
 488 002e 002B     		cmp	r3, #0
 489 0030 12D0     		beq	.L21
 998:.\Generated_Source\PSoC4/CyLib.c ****         {
 999:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 490              		.loc 1 999 0
 491 0032 1023     		mov	r3, #16
 492 0034 FB60     		str	r3, [r7, #12]
1000:.\Generated_Source\PSoC4/CyLib.c **** 
1001:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 493              		.loc 1 1001 0
 494 0036 0CE0     		b	.L22
 495              	.L24:
1002:.\Generated_Source\PSoC4/CyLib.c ****             {
1003:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 496              		.loc 1 1003 0
 497 0038 0120     		mov	r0, #1
 498 003a FFF7FEFF 		bl	CyDelayUs
1004:.\Generated_Source\PSoC4/CyLib.c **** 
1005:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 499              		.loc 1 1005 0
 500 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 501 0042 031E     		sub	r3, r0, #0
 502 0044 02D0     		beq	.L23
1006:.\Generated_Source\PSoC4/CyLib.c ****                 {
1007:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 503              		.loc 1 1007 0
 504 0046 0023     		mov	r3, #0
 505 0048 FB60     		str	r3, [r7, #12]
1008:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 506              		.loc 1 1008 0
 507 004a 05E0     		b	.L21
 508              	.L23:
1001:.\Generated_Source\PSoC4/CyLib.c ****             {
 509              		.loc 1 1001 0
 510 004c 7B68     		ldr	r3, [r7, #4]
 511 004e 013B     		sub	r3, r3, #1
 512 0050 7B60     		str	r3, [r7, #4]
 513              	.L22:
1001:.\Generated_Source\PSoC4/CyLib.c ****             {
 514              		.loc 1 1001 0 is_stmt 0 discriminator 1
 515 0052 7B68     		ldr	r3, [r7, #4]
 516 0054 002B     		cmp	r3, #0
 517 0056 EFD1     		bne	.L24
 518              	.L21:
1009:.\Generated_Source\PSoC4/CyLib.c ****                 }
1010:.\Generated_Source\PSoC4/CyLib.c ****             }
1011:.\Generated_Source\PSoC4/CyLib.c **** 
1012:.\Generated_Source\PSoC4/CyLib.c ****         }
1013:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 28


1014:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 519              		.loc 1 1014 0 is_stmt 1
 520 0058 FB68     		ldr	r3, [r7, #12]
1015:.\Generated_Source\PSoC4/CyLib.c ****     }
 521              		.loc 1 1015 0
 522 005a 181C     		mov	r0, r3
 523 005c BD46     		mov	sp, r7
 524 005e 04B0     		add	sp, sp, #16
 525              		@ sp needed
 526 0060 80BD     		pop	{r7, pc}
 527              	.L27:
 528 0062 C046     		.align	2
 529              	.L26:
 530 0064 60F02E40 		.word	1076818016
 531 0068 78002E40 		.word	1076756600
 532 006c 02200000 		.word	8194
 533 0070 10002E40 		.word	1076756496
 534              		.cfi_endproc
 535              	.LFE8:
 536              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 537              		.section	.text.CySysClkEcoStop,"ax",%progbits
 538              		.align	2
 539              		.global	CySysClkEcoStop
 540              		.code	16
 541              		.thumb_func
 542              		.type	CySysClkEcoStop, %function
 543              	CySysClkEcoStop:
 544              	.LFB9:
1016:.\Generated_Source\PSoC4/CyLib.c **** 
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:.\Generated_Source\PSoC4/CyLib.c ****     *
1022:.\Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:.\Generated_Source\PSoC4/CyLib.c ****     *
1024:.\Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:.\Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:.\Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:.\Generated_Source\PSoC4/CyLib.c ****     *
1028:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:.\Generated_Source\PSoC4/CyLib.c ****     {
 545              		.loc 1 1030 0
 546              		.cfi_startproc
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
1031:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 553              		.loc 1 1033 0
 554 0004 064B     		ldr	r3, .L29
 555 0006 064A     		ldr	r2, .L29
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 29


 556 0008 1268     		ldr	r2, [r2]
 557 000a 0121     		mov	r1, #1
 558 000c 8A43     		bic	r2, r1
 559 000e 1A60     		str	r2, [r3]
1034:.\Generated_Source\PSoC4/CyLib.c **** 
1035:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 560              		.loc 1 1036 0
 561 0010 044B     		ldr	r3, .L29+4
 562 0012 044A     		ldr	r2, .L29+4
 563 0014 1268     		ldr	r2, [r2]
 564 0016 0449     		ldr	r1, .L29+8
 565 0018 0A40     		and	r2, r1
 566 001a 1A60     		str	r2, [r3]
1037:.\Generated_Source\PSoC4/CyLib.c ****         #else
1038:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:.\Generated_Source\PSoC4/CyLib.c ****     }
 567              		.loc 1 1040 0
 568 001c BD46     		mov	sp, r7
 569              		@ sp needed
 570 001e 80BD     		pop	{r7, pc}
 571              	.L30:
 572              		.align	2
 573              	.L29:
 574 0020 60F02E40 		.word	1076818016
 575 0024 10002E40 		.word	1076756496
 576 0028 FF7FFFFF 		.word	-32769
 577              		.cfi_endproc
 578              	.LFE9:
 579              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 580              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 581              		.align	2
 582              		.global	CySysClkEcoReadStatus
 583              		.code	16
 584              		.thumb_func
 585              		.type	CySysClkEcoReadStatus, %function
 586              	CySysClkEcoReadStatus:
 587              	.LFB10:
1041:.\Generated_Source\PSoC4/CyLib.c **** 
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:.\Generated_Source\PSoC4/CyLib.c ****     *
1049:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:.\Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:.\Generated_Source\PSoC4/CyLib.c ****     *
1052:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:.\Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:.\Generated_Source\PSoC4/CyLib.c ****     *
1055:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:.\Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:.\Generated_Source\PSoC4/CyLib.c ****     *
1058:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 30


1059:.\Generated_Source\PSoC4/CyLib.c ****     *
1060:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:.\Generated_Source\PSoC4/CyLib.c ****     {
 588              		.loc 1 1062 0
 589              		.cfi_startproc
 590 0000 80B5     		push	{r7, lr}
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 7, -8
 593              		.cfi_offset 14, -4
 594 0002 82B0     		sub	sp, sp, #8
 595              		.cfi_def_cfa_offset 16
 596 0004 00AF     		add	r7, sp, #0
 597              		.cfi_def_cfa_register 7
1063:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:.\Generated_Source\PSoC4/CyLib.c **** 
1065:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1066:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 598              		.loc 1 1066 0
 599 0006 054B     		ldr	r3, .L33
 600 0008 1B68     		ldr	r3, [r3]
 601 000a 0122     		mov	r2, #1
 602 000c 1340     		and	r3, r2
 603 000e 7B60     		str	r3, [r7, #4]
1067:.\Generated_Source\PSoC4/CyLib.c ****         #else
1068:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:.\Generated_Source\PSoC4/CyLib.c **** 
1071:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 604              		.loc 1 1071 0
 605 0010 7B68     		ldr	r3, [r7, #4]
1072:.\Generated_Source\PSoC4/CyLib.c ****     }
 606              		.loc 1 1072 0
 607 0012 181C     		mov	r0, r3
 608 0014 BD46     		mov	sp, r7
 609 0016 02B0     		add	sp, sp, #8
 610              		@ sp needed
 611 0018 80BD     		pop	{r7, pc}
 612              	.L34:
 613 001a C046     		.align	2
 614              	.L33:
 615 001c 0C002E40 		.word	1076756492
 616              		.cfi_endproc
 617              	.LFE10:
 618              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 619              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 620              		.align	2
 621              		.global	CySysClkWriteEcoDiv
 622              		.code	16
 623              		.thumb_func
 624              		.type	CySysClkWriteEcoDiv, %function
 625              	CySysClkWriteEcoDiv:
 626              	.LFB11:
1073:.\Generated_Source\PSoC4/CyLib.c **** 
1074:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 31


1077:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:.\Generated_Source\PSoC4/CyLib.c ****         *
1079:.\Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:.\Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:.\Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:.\Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:.\Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:.\Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:.\Generated_Source\PSoC4/CyLib.c ****         *
1094:.\Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1099:.\Generated_Source\PSoC4/CyLib.c ****         *
1100:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:.\Generated_Source\PSoC4/CyLib.c ****         {
 627              		.loc 1 1102 0
 628              		.cfi_startproc
 629 0000 90B5     		push	{r4, r7, lr}
 630              		.cfi_def_cfa_offset 12
 631              		.cfi_offset 4, -12
 632              		.cfi_offset 7, -8
 633              		.cfi_offset 14, -4
 634 0002 85B0     		sub	sp, sp, #20
 635              		.cfi_def_cfa_offset 32
 636 0004 00AF     		add	r7, sp, #0
 637              		.cfi_def_cfa_register 7
 638 0006 7860     		str	r0, [r7, #4]
1103:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 639              		.loc 1 1105 0
 640 0008 114B     		ldr	r3, .L38
 641 000a 1B68     		ldr	r3, [r3]
 642 000c 0722     		mov	r2, #7
 643 000e 1340     		and	r3, r2
 644 0010 022B     		cmp	r3, #2
 645 0012 16D0     		beq	.L36
1106:.\Generated_Source\PSoC4/CyLib.c ****             {
1107:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 646              		.loc 1 1107 0
 647 0014 0F23     		mov	r3, #15
 648 0016 FC18     		add	r4, r7, r3
 649 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 650 001c 031C     		mov	r3, r0
 651 001e 2370     		strb	r3, [r4]
1108:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 32


1109:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 652              		.loc 1 1109 0
 653 0020 0C4B     		ldr	r3, .L38+4
 654 0022 7A68     		ldr	r2, [r7, #4]
 655 0024 0321     		mov	r1, #3
 656 0026 1140     		and	r1, r2
1110:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 657              		.loc 1 1110 0
 658 0028 0A4A     		ldr	r2, .L38+4
 659 002a 1268     		ldr	r2, [r2]
 660 002c 0320     		mov	r0, #3
 661 002e 8243     		bic	r2, r0
1109:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 662              		.loc 1 1109 0
 663 0030 0A43     		orr	r2, r1
 664 0032 1A60     		str	r2, [r3]
1111:.\Generated_Source\PSoC4/CyLib.c **** 
1112:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 665              		.loc 1 1112 0
 666 0034 0F23     		mov	r3, #15
 667 0036 FB18     		add	r3, r7, r3
 668 0038 1B78     		ldrb	r3, [r3]
 669 003a 181C     		mov	r0, r3
 670 003c FFF7FEFF 		bl	CyExitCriticalSection
 671 0040 02E0     		b	.L35
 672              	.L36:
1113:.\Generated_Source\PSoC4/CyLib.c ****             }
1114:.\Generated_Source\PSoC4/CyLib.c ****             else
1115:.\Generated_Source\PSoC4/CyLib.c ****             {
1116:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1117:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
 673              		.loc 1 1117 0 discriminator 1
 674 0042 0020     		mov	r0, #0
 675 0044 FFF7FEFF 		bl	CyHalt
 676              	.L35:
1118:.\Generated_Source\PSoC4/CyLib.c ****             }
1119:.\Generated_Source\PSoC4/CyLib.c ****         }
 677              		.loc 1 1119 0
 678 0048 BD46     		mov	sp, r7
 679 004a 05B0     		add	sp, sp, #20
 680              		@ sp needed
 681 004c 90BD     		pop	{r4, r7, pc}
 682              	.L39:
 683 004e C046     		.align	2
 684              	.L38:
 685 0050 00010B40 		.word	1074462976
 686 0054 64F02E40 		.word	1076818020
 687              		.cfi_endproc
 688              	.LFE11:
 689              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 690              		.section	.text.CySysLvdEnable,"ax",%progbits
 691              		.align	2
 692              		.global	CySysLvdEnable
 693              		.code	16
 694              		.thumb_func
 695              		.type	CySysLvdEnable, %function
 696              	CySysLvdEnable:
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 33


 697              	.LFB12:
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****     #else
1122:.\Generated_Source\PSoC4/CyLib.c **** 
1123:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:.\Generated_Source\PSoC4/CyLib.c ****         *
1127:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:.\Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:.\Generated_Source\PSoC4/CyLib.c ****         *
1130:.\Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:.\Generated_Source\PSoC4/CyLib.c ****         *
1133:.\Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:.\Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:.\Generated_Source\PSoC4/CyLib.c ****         *
1136:.\Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:.\Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:.\Generated_Source\PSoC4/CyLib.c ****         *
1140:.\Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:.\Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:.\Generated_Source\PSoC4/CyLib.c ****         *
1143:.\Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:.\Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:.\Generated_Source\PSoC4/CyLib.c ****         *
1146:.\Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:.\Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:.\Generated_Source\PSoC4/CyLib.c ****         *
1149:.\Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:.\Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:.\Generated_Source\PSoC4/CyLib.c ****         *
1152:.\Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1156:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:.\Generated_Source\PSoC4/CyLib.c ****         *
1158:.\Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:.\Generated_Source\PSoC4/CyLib.c ****         *
1168:.\Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 34


1176:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *
1180:.\Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:.\Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:.\Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:.\Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:.\Generated_Source\PSoC4/CyLib.c ****         *
1189:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:.\Generated_Source\PSoC4/CyLib.c ****         {
1192:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:.\Generated_Source\PSoC4/CyLib.c **** 
1209:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:.\Generated_Source\PSoC4/CyLib.c **** 
1211:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:.\Generated_Source\PSoC4/CyLib.c ****         }
1213:.\Generated_Source\PSoC4/CyLib.c **** 
1214:.\Generated_Source\PSoC4/CyLib.c **** 
1215:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:.\Generated_Source\PSoC4/CyLib.c ****         *
1219:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:.\Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:.\Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:.\Generated_Source\PSoC4/CyLib.c ****         *
1223:.\Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:.\Generated_Source\PSoC4/CyLib.c ****         *
1225:.\Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:.\Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:.\Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:.\Generated_Source\PSoC4/CyLib.c ****         *
1231:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 35


1233:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *
1237:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:.\Generated_Source\PSoC4/CyLib.c ****         *
1240:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:.\Generated_Source\PSoC4/CyLib.c ****         {
1243:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:.\Generated_Source\PSoC4/CyLib.c **** 
1245:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:.\Generated_Source\PSoC4/CyLib.c **** 
1251:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:.\Generated_Source\PSoC4/CyLib.c **** 
1253:.\Generated_Source\PSoC4/CyLib.c **** 
1254:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:.\Generated_Source\PSoC4/CyLib.c ****             {
1257:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:.\Generated_Source\PSoC4/CyLib.c ****             }
1259:.\Generated_Source\PSoC4/CyLib.c ****             else
1260:.\Generated_Source\PSoC4/CyLib.c ****             {
1261:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:.\Generated_Source\PSoC4/CyLib.c **** 
1264:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:.\Generated_Source\PSoC4/CyLib.c ****                 {
1266:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:.\Generated_Source\PSoC4/CyLib.c ****                 }
1268:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:.\Generated_Source\PSoC4/CyLib.c ****                 {
1270:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:.\Generated_Source\PSoC4/CyLib.c ****                 }
1272:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:.\Generated_Source\PSoC4/CyLib.c ****                 {
1274:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:.\Generated_Source\PSoC4/CyLib.c ****                 }
1276:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 36


1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
1296:.\Generated_Source\PSoC4/CyLib.c **** 
1297:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:.\Generated_Source\PSoC4/CyLib.c **** 
1300:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:.\Generated_Source\PSoC4/CyLib.c ****                 {
1304:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:.\Generated_Source\PSoC4/CyLib.c ****                 }
1307:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:.\Generated_Source\PSoC4/CyLib.c ****                 {
1309:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:.\Generated_Source\PSoC4/CyLib.c ****                 }
1311:.\Generated_Source\PSoC4/CyLib.c ****                 else
1312:.\Generated_Source\PSoC4/CyLib.c ****                 {
1313:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:.\Generated_Source\PSoC4/CyLib.c ****                 }
1315:.\Generated_Source\PSoC4/CyLib.c **** 
1316:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:.\Generated_Source\PSoC4/CyLib.c ****                 {
1319:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:.\Generated_Source\PSoC4/CyLib.c ****                 }
1321:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:.\Generated_Source\PSoC4/CyLib.c ****                 {
1323:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:.\Generated_Source\PSoC4/CyLib.c ****                 }
1325:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:.\Generated_Source\PSoC4/CyLib.c ****                 {
1327:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:.\Generated_Source\PSoC4/CyLib.c ****                 }
1329:.\Generated_Source\PSoC4/CyLib.c ****                 else
1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:.\Generated_Source\PSoC4/CyLib.c **** 
1337:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:.\Generated_Source\PSoC4/CyLib.c **** 
1339:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:.\Generated_Source\PSoC4/CyLib.c ****                 {
1342:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c ****                 else
1346:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 37


1347:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:.\Generated_Source\PSoC4/CyLib.c ****                     */
1350:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:.\Generated_Source\PSoC4/CyLib.c ****                 }
1352:.\Generated_Source\PSoC4/CyLib.c ****             }
1353:.\Generated_Source\PSoC4/CyLib.c **** 
1354:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:.\Generated_Source\PSoC4/CyLib.c ****         }
1356:.\Generated_Source\PSoC4/CyLib.c **** 
1357:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:.\Generated_Source\PSoC4/CyLib.c **** 
1361:.\Generated_Source\PSoC4/CyLib.c **** 
1362:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:.\Generated_Source\PSoC4/CyLib.c ****     *
1367:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:.\Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:.\Generated_Source\PSoC4/CyLib.c ****     *
1370:.\Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:.\Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:.\Generated_Source\PSoC4/CyLib.c ****     *
1373:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:.\Generated_Source\PSoC4/CyLib.c ****     *
1375:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:.\Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:.\Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:.\Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:.\Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:.\Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:.\Generated_Source\PSoC4/CyLib.c ****     *
1384:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:.\Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:.\Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:.\Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:.\Generated_Source\PSoC4/CyLib.c ****     *
1391:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:.\Generated_Source\PSoC4/CyLib.c ****     {
1394:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:.\Generated_Source\PSoC4/CyLib.c **** 
1398:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:.\Generated_Source\PSoC4/CyLib.c ****         {
1400:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:.\Generated_Source\PSoC4/CyLib.c **** 
1402:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 38


1404:.\Generated_Source\PSoC4/CyLib.c **** 
1405:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:.\Generated_Source\PSoC4/CyLib.c **** 
1408:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:.\Generated_Source\PSoC4/CyLib.c **** 
1410:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:.\Generated_Source\PSoC4/CyLib.c **** 
1416:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:.\Generated_Source\PSoC4/CyLib.c ****             {
1418:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:.\Generated_Source\PSoC4/CyLib.c **** 
1420:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:.\Generated_Source\PSoC4/CyLib.c ****                 {
1422:.\Generated_Source\PSoC4/CyLib.c **** 
1423:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:.\Generated_Source\PSoC4/CyLib.c ****                     {
1425:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1428:.\Generated_Source\PSoC4/CyLib.c ****                     }
1429:.\Generated_Source\PSoC4/CyLib.c **** 
1430:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:.\Generated_Source\PSoC4/CyLib.c ****                 }
1433:.\Generated_Source\PSoC4/CyLib.c ****             }
1434:.\Generated_Source\PSoC4/CyLib.c ****         }
1435:.\Generated_Source\PSoC4/CyLib.c ****         else
1436:.\Generated_Source\PSoC4/CyLib.c ****         {
1437:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:.\Generated_Source\PSoC4/CyLib.c ****         }
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1441:.\Generated_Source\PSoC4/CyLib.c ****     }
1442:.\Generated_Source\PSoC4/CyLib.c **** 
1443:.\Generated_Source\PSoC4/CyLib.c **** 
1444:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:.\Generated_Source\PSoC4/CyLib.c ****     *
1448:.\Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:.\Generated_Source\PSoC4/CyLib.c ****     *
1450:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:.\Generated_Source\PSoC4/CyLib.c ****     *
1452:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:.\Generated_Source\PSoC4/CyLib.c ****     *
1456:.\Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:.\Generated_Source\PSoC4/CyLib.c ****     *
1458:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1459:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 39


1461:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:.\Generated_Source\PSoC4/CyLib.c **** 
1464:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:.\Generated_Source\PSoC4/CyLib.c **** 
1468:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:.\Generated_Source\PSoC4/CyLib.c ****         {
1472:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:.\Generated_Source\PSoC4/CyLib.c ****         }
1474:.\Generated_Source\PSoC4/CyLib.c **** 
1475:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:.\Generated_Source\PSoC4/CyLib.c **** 
1477:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:.\Generated_Source\PSoC4/CyLib.c ****     }
1479:.\Generated_Source\PSoC4/CyLib.c **** 
1480:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:.\Generated_Source\PSoC4/CyLib.c ****     *
1484:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:.\Generated_Source\PSoC4/CyLib.c ****     *
1486:.\Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:.\Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:.\Generated_Source\PSoC4/CyLib.c ****     *
1489:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:.\Generated_Source\PSoC4/CyLib.c ****     *
1491:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:.\Generated_Source\PSoC4/CyLib.c ****     *
1495:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:.\Generated_Source\PSoC4/CyLib.c ****     {
1498:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:.\Generated_Source\PSoC4/CyLib.c ****         {
1502:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:.\Generated_Source\PSoC4/CyLib.c ****         }
1506:.\Generated_Source\PSoC4/CyLib.c ****     }
1507:.\Generated_Source\PSoC4/CyLib.c **** 
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:.\Generated_Source\PSoC4/CyLib.c ****     *
1513:.\Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:.\Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:.\Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1516:.\Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 40


1518:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:.\Generated_Source\PSoC4/CyLib.c ****     *
1521:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:.\Generated_Source\PSoC4/CyLib.c ****     *
1523:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:.\Generated_Source\PSoC4/CyLib.c ****     *
1527:.\Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:.\Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:.\Generated_Source\PSoC4/CyLib.c ****     *
1530:.\Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:.\Generated_Source\PSoC4/CyLib.c ****     *
1532:.\Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:.\Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:.\Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:.\Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:.\Generated_Source\PSoC4/CyLib.c ****     *
1540:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:.\Generated_Source\PSoC4/CyLib.c ****     {
1543:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:.\Generated_Source\PSoC4/CyLib.c **** 
1548:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:.\Generated_Source\PSoC4/CyLib.c **** 
1550:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:.\Generated_Source\PSoC4/CyLib.c **** 
1552:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1555:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:.\Generated_Source\PSoC4/CyLib.c ****         {
1558:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:.\Generated_Source\PSoC4/CyLib.c **** 
1563:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:.\Generated_Source\PSoC4/CyLib.c **** 
1567:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:.\Generated_Source\PSoC4/CyLib.c **** 
1569:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:.\Generated_Source\PSoC4/CyLib.c ****         }
1571:.\Generated_Source\PSoC4/CyLib.c **** 
1572:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1573:.\Generated_Source\PSoC4/CyLib.c **** 
1574:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 41


1575:.\Generated_Source\PSoC4/CyLib.c ****     }
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c **** 
1578:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:.\Generated_Source\PSoC4/CyLib.c ****     *
1582:.\Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:.\Generated_Source\PSoC4/CyLib.c ****     *
1584:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:.\Generated_Source\PSoC4/CyLib.c ****     *
1587:.\Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:.\Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:.\Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:.\Generated_Source\PSoC4/CyLib.c ****     *
1592:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:.\Generated_Source\PSoC4/CyLib.c ****     *
1594:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:.\Generated_Source\PSoC4/CyLib.c ****     *
1598:.\Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:.\Generated_Source\PSoC4/CyLib.c ****     *
1603:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:.\Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:.\Generated_Source\PSoC4/CyLib.c ****     *
1606:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:.\Generated_Source\PSoC4/CyLib.c ****     *
1608:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:.\Generated_Source\PSoC4/CyLib.c ****     {
1611:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1612:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:.\Generated_Source\PSoC4/CyLib.c **** 
1614:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:.\Generated_Source\PSoC4/CyLib.c **** 
1616:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:.\Generated_Source\PSoC4/CyLib.c ****         {
1618:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:.\Generated_Source\PSoC4/CyLib.c ****         }
1622:.\Generated_Source\PSoC4/CyLib.c **** 
1623:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:.\Generated_Source\PSoC4/CyLib.c ****     }
1625:.\Generated_Source\PSoC4/CyLib.c **** 
1626:.\Generated_Source\PSoC4/CyLib.c **** 
1627:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1630:.\Generated_Source\PSoC4/CyLib.c ****     *
1631:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 42


1632:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:.\Generated_Source\PSoC4/CyLib.c ****     *
1634:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:.\Generated_Source\PSoC4/CyLib.c ****     *
1638:.\Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:.\Generated_Source\PSoC4/CyLib.c ****     *
1641:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:.\Generated_Source\PSoC4/CyLib.c ****     {
1644:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:.\Generated_Source\PSoC4/CyLib.c **** 
1647:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:.\Generated_Source\PSoC4/CyLib.c **** 
1649:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:.\Generated_Source\PSoC4/CyLib.c **** 
1651:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:.\Generated_Source\PSoC4/CyLib.c **** 
1656:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:.\Generated_Source\PSoC4/CyLib.c ****     }
1658:.\Generated_Source\PSoC4/CyLib.c **** 
1659:.\Generated_Source\PSoC4/CyLib.c **** 
1660:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:.\Generated_Source\PSoC4/CyLib.c ****     *
1664:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:.\Generated_Source\PSoC4/CyLib.c ****     *
1669:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:.\Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:.\Generated_Source\PSoC4/CyLib.c ****     *
1676:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:.\Generated_Source\PSoC4/CyLib.c ****     {
1679:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:.\Generated_Source\PSoC4/CyLib.c **** 
1683:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1687:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 43


1689:.\Generated_Source\PSoC4/CyLib.c ****         {
1690:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:.\Generated_Source\PSoC4/CyLib.c ****         }
1692:.\Generated_Source\PSoC4/CyLib.c **** 
1693:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:.\Generated_Source\PSoC4/CyLib.c ****     }
1695:.\Generated_Source\PSoC4/CyLib.c **** 
1696:.\Generated_Source\PSoC4/CyLib.c **** 
1697:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:.\Generated_Source\PSoC4/CyLib.c ****     *
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:.\Generated_Source\PSoC4/CyLib.c ****     *
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:.\Generated_Source\PSoC4/CyLib.c ****     *
1708:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:.\Generated_Source\PSoC4/CyLib.c ****     *
1712:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:.\Generated_Source\PSoC4/CyLib.c ****     *
1714:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:.\Generated_Source\PSoC4/CyLib.c ****     {
1717:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:.\Generated_Source\PSoC4/CyLib.c **** 
1720:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:.\Generated_Source\PSoC4/CyLib.c **** 
1722:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:.\Generated_Source\PSoC4/CyLib.c **** 
1725:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1726:.\Generated_Source\PSoC4/CyLib.c **** 
1727:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:.\Generated_Source\PSoC4/CyLib.c ****     }
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** 
1731:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:.\Generated_Source\PSoC4/CyLib.c ****     *
1735:.\Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:.\Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:.\Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:.\Generated_Source\PSoC4/CyLib.c ****     *
1739:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:.\Generated_Source\PSoC4/CyLib.c ****     *
1744:.\Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 44


1746:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:.\Generated_Source\PSoC4/CyLib.c ****     *
1748:.\Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:.\Generated_Source\PSoC4/CyLib.c ****     *
1752:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:.\Generated_Source\PSoC4/CyLib.c ****     *
1758:.\Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:.\Generated_Source\PSoC4/CyLib.c ****     *
1760:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:.\Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:.\Generated_Source\PSoC4/CyLib.c ****     *
1763:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:.\Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:.\Generated_Source\PSoC4/CyLib.c ****     *
1766:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:.\Generated_Source\PSoC4/CyLib.c ****     {
1769:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:.\Generated_Source\PSoC4/CyLib.c **** 
1772:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:.\Generated_Source\PSoC4/CyLib.c **** 
1775:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:.\Generated_Source\PSoC4/CyLib.c **** 
1778:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:.\Generated_Source\PSoC4/CyLib.c **** 
1781:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1783:.\Generated_Source\PSoC4/CyLib.c **** 
1784:.\Generated_Source\PSoC4/CyLib.c **** 
1785:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:.\Generated_Source\PSoC4/CyLib.c **** 
1787:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:.\Generated_Source\PSoC4/CyLib.c ****         {
1793:.\Generated_Source\PSoC4/CyLib.c **** 
1794:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:.\Generated_Source\PSoC4/CyLib.c **** 
1798:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1801:.\Generated_Source\PSoC4/CyLib.c **** 
1802:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 45


1803:.\Generated_Source\PSoC4/CyLib.c ****             {
1804:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:.\Generated_Source\PSoC4/CyLib.c ****                 {
1806:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:.\Generated_Source\PSoC4/CyLib.c **** 
1808:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:.\Generated_Source\PSoC4/CyLib.c **** 
1811:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:.\Generated_Source\PSoC4/CyLib.c **** 
1814:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:.\Generated_Source\PSoC4/CyLib.c **** 
1817:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:.\Generated_Source\PSoC4/CyLib.c ****                     {
1820:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1823:.\Generated_Source\PSoC4/CyLib.c ****                     }
1824:.\Generated_Source\PSoC4/CyLib.c ****                 }
1825:.\Generated_Source\PSoC4/CyLib.c **** 
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:.\Generated_Source\PSoC4/CyLib.c ****                 {
1829:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:.\Generated_Source\PSoC4/CyLib.c ****                     {
1831:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:.\Generated_Source\PSoC4/CyLib.c ****                     }
1833:.\Generated_Source\PSoC4/CyLib.c ****                 }
1834:.\Generated_Source\PSoC4/CyLib.c ****             }
1835:.\Generated_Source\PSoC4/CyLib.c **** 
1836:.\Generated_Source\PSoC4/CyLib.c ****         }
1837:.\Generated_Source\PSoC4/CyLib.c **** 
1838:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:.\Generated_Source\PSoC4/CyLib.c ****     }
1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c **** 
1842:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:.\Generated_Source\PSoC4/CyLib.c ****     *
1846:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:.\Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:.\Generated_Source\PSoC4/CyLib.c ****     *
1849:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:.\Generated_Source\PSoC4/CyLib.c ****     *
1851:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:.\Generated_Source\PSoC4/CyLib.c ****     *
1855:.\Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1858:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 46


1860:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:.\Generated_Source\PSoC4/CyLib.c ****     *
1864:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:.\Generated_Source\PSoC4/CyLib.c ****     {
1867:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:.\Generated_Source\PSoC4/CyLib.c ****         {
1874:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:.\Generated_Source\PSoC4/CyLib.c ****         }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:.\Generated_Source\PSoC4/CyLib.c ****     }
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c **** 
1883:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:.\Generated_Source\PSoC4/CyLib.c ****     *
1887:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
1889:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:.\Generated_Source\PSoC4/CyLib.c ****     *
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1897:.\Generated_Source\PSoC4/CyLib.c ****     *
1898:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:.\Generated_Source\PSoC4/CyLib.c ****     *
1904:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:.\Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:.\Generated_Source\PSoC4/CyLib.c ****     *
1908:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:.\Generated_Source\PSoC4/CyLib.c ****     {
1911:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1915:.\Generated_Source\PSoC4/CyLib.c **** 
1916:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 47


1917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
1923:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:.\Generated_Source\PSoC4/CyLib.c **** 
1926:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:.\Generated_Source\PSoC4/CyLib.c ****         }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:.\Generated_Source\PSoC4/CyLib.c **** 
1933:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:.\Generated_Source\PSoC4/CyLib.c ****     }
1935:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:.\Generated_Source\PSoC4/CyLib.c **** 
1937:.\Generated_Source\PSoC4/CyLib.c **** 
1938:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:.\Generated_Source\PSoC4/CyLib.c **** 
1940:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:.\Generated_Source\PSoC4/CyLib.c ****     *
1948:.\Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1954:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:.\Generated_Source\PSoC4/CyLib.c ****     *
1968:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:.\Generated_Source\PSoC4/CyLib.c ****     {
 698              		.loc 1 1970 0
 699              		.cfi_startproc
 700 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 48


 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 7, -8
 703              		.cfi_offset 14, -4
 704 0002 82B0     		sub	sp, sp, #8
 705              		.cfi_def_cfa_offset 16
 706 0004 00AF     		add	r7, sp, #0
 707              		.cfi_def_cfa_register 7
 708 0006 7860     		str	r0, [r7, #4]
1971:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1972:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 709              		.loc 1 1972 0
 710 0008 134B     		ldr	r3, .L41
 711 000a 134A     		ldr	r2, .L41
 712 000c 1268     		ldr	r2, [r2]
 713 000e 0221     		mov	r1, #2
 714 0010 8A43     		bic	r2, r1
 715 0012 1A60     		str	r2, [r3]
1973:.\Generated_Source\PSoC4/CyLib.c **** 
1974:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 716              		.loc 1 1975 0
 717 0014 114B     		ldr	r3, .L41+4
 718 0016 114A     		ldr	r2, .L41+4
 719 0018 1268     		ldr	r2, [r2]
 720 001a 1E21     		mov	r1, #30
 721 001c 8A43     		bic	r2, r1
 722 001e 111C     		mov	r1, r2
1976:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 723              		.loc 1 1976 0
 724 0020 7A68     		ldr	r2, [r7, #4]
 725 0022 5200     		lsl	r2, r2, #1
 726 0024 1E20     		mov	r0, #30
 727 0026 0240     		and	r2, r0
1975:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 728              		.loc 1 1975 0
 729 0028 0A43     		orr	r2, r1
 730 002a 1A60     		str	r2, [r3]
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 731              		.loc 1 1979 0
 732 002c 0B4B     		ldr	r3, .L41+4
 733 002e 0B4A     		ldr	r2, .L41+4
 734 0030 1268     		ldr	r2, [r2]
 735 0032 0121     		mov	r1, #1
 736 0034 0A43     		orr	r2, r1
 737 0036 1A60     		str	r2, [r3]
1980:.\Generated_Source\PSoC4/CyLib.c **** 
1981:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 738              		.loc 1 1982 0
 739 0038 FA23     		mov	r3, #250
 740 003a 9B00     		lsl	r3, r3, #2
 741 003c 181C     		mov	r0, r3
 742 003e FFF7FEFF 		bl	CyDelayUs
1983:.\Generated_Source\PSoC4/CyLib.c **** 
1984:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 49


1985:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 743              		.loc 1 1985 0
 744 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
1986:.\Generated_Source\PSoC4/CyLib.c **** 
1987:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 745              		.loc 1 1988 0
 746 0046 044B     		ldr	r3, .L41
 747 0048 034A     		ldr	r2, .L41
 748 004a 1268     		ldr	r2, [r2]
 749 004c 0221     		mov	r1, #2
 750 004e 0A43     		orr	r2, r1
 751 0050 1A60     		str	r2, [r3]
1989:.\Generated_Source\PSoC4/CyLib.c ****     }
 752              		.loc 1 1989 0
 753 0052 BD46     		mov	sp, r7
 754 0054 02B0     		add	sp, sp, #8
 755              		@ sp needed
 756 0056 80BD     		pop	{r7, pc}
 757              	.L42:
 758              		.align	2
 759              	.L41:
 760 0058 08000B40 		.word	1074462728
 761 005c 18000B40 		.word	1074462744
 762              		.cfi_endproc
 763              	.LFE12:
 764              		.size	CySysLvdEnable, .-CySysLvdEnable
 765              		.section	.text.CySysLvdDisable,"ax",%progbits
 766              		.align	2
 767              		.global	CySysLvdDisable
 768              		.code	16
 769              		.thumb_func
 770              		.type	CySysLvdDisable, %function
 771              	CySysLvdDisable:
 772              	.LFB13:
1990:.\Generated_Source\PSoC4/CyLib.c **** 
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:.\Generated_Source\PSoC4/CyLib.c ****     *
1998:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:.\Generated_Source\PSoC4/CyLib.c ****     {
 773              		.loc 1 2000 0
 774              		.cfi_startproc
 775 0000 80B5     		push	{r7, lr}
 776              		.cfi_def_cfa_offset 8
 777              		.cfi_offset 7, -8
 778              		.cfi_offset 14, -4
 779 0002 00AF     		add	r7, sp, #0
 780              		.cfi_def_cfa_register 7
2001:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 781              		.loc 1 2001 0
 782 0004 064B     		ldr	r3, .L44
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 50


 783 0006 064A     		ldr	r2, .L44
 784 0008 1268     		ldr	r2, [r2]
 785 000a 0221     		mov	r1, #2
 786 000c 8A43     		bic	r2, r1
 787 000e 1A60     		str	r2, [r3]
2002:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 788              		.loc 1 2002 0
 789 0010 044B     		ldr	r3, .L44+4
 790 0012 044A     		ldr	r2, .L44+4
 791 0014 1268     		ldr	r2, [r2]
 792 0016 0121     		mov	r1, #1
 793 0018 8A43     		bic	r2, r1
 794 001a 1A60     		str	r2, [r3]
2003:.\Generated_Source\PSoC4/CyLib.c ****     }
 795              		.loc 1 2003 0
 796 001c BD46     		mov	sp, r7
 797              		@ sp needed
 798 001e 80BD     		pop	{r7, pc}
 799              	.L45:
 800              		.align	2
 801              	.L44:
 802 0020 08000B40 		.word	1074462728
 803 0024 18000B40 		.word	1074462744
 804              		.cfi_endproc
 805              	.LFE13:
 806              		.size	CySysLvdDisable, .-CySysLvdDisable
 807              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 808              		.align	2
 809              		.global	CySysLvdGetInterruptSource
 810              		.code	16
 811              		.thumb_func
 812              		.type	CySysLvdGetInterruptSource, %function
 813              	CySysLvdGetInterruptSource:
 814              	.LFB14:
2004:.\Generated_Source\PSoC4/CyLib.c **** 
2005:.\Generated_Source\PSoC4/CyLib.c **** 
2006:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:.\Generated_Source\PSoC4/CyLib.c ****     *
2010:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:.\Generated_Source\PSoC4/CyLib.c ****     *
2012:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2013:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:.\Generated_Source\PSoC4/CyLib.c ****     *
2016:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:.\Generated_Source\PSoC4/CyLib.c ****     {
 815              		.loc 1 2018 0
 816              		.cfi_startproc
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 51


2019:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 823              		.loc 1 2019 0
 824 0004 034B     		ldr	r3, .L48
 825 0006 1B68     		ldr	r3, [r3]
 826 0008 0222     		mov	r2, #2
 827 000a 1340     		and	r3, r2
2020:.\Generated_Source\PSoC4/CyLib.c ****     }
 828              		.loc 1 2020 0
 829 000c 181C     		mov	r0, r3
 830 000e BD46     		mov	sp, r7
 831              		@ sp needed
 832 0010 80BD     		pop	{r7, pc}
 833              	.L49:
 834 0012 C046     		.align	2
 835              	.L48:
 836 0014 04000B40 		.word	1074462724
 837              		.cfi_endproc
 838              	.LFE14:
 839              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 840              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 841              		.align	2
 842              		.global	CySysLvdClearInterrupt
 843              		.code	16
 844              		.thumb_func
 845              		.type	CySysLvdClearInterrupt, %function
 846              	CySysLvdClearInterrupt:
 847              	.LFB15:
2021:.\Generated_Source\PSoC4/CyLib.c **** 
2022:.\Generated_Source\PSoC4/CyLib.c **** 
2023:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:.\Generated_Source\PSoC4/CyLib.c ****     *
2027:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:.\Generated_Source\PSoC4/CyLib.c ****     *
2029:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2030:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2031:.\Generated_Source\PSoC4/CyLib.c ****     *
2032:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:.\Generated_Source\PSoC4/CyLib.c ****     {
 848              		.loc 1 2034 0
 849              		.cfi_startproc
 850 0000 80B5     		push	{r7, lr}
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 7, -8
 853              		.cfi_offset 14, -4
 854 0002 00AF     		add	r7, sp, #0
 855              		.cfi_def_cfa_register 7
2035:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 856              		.loc 1 2035 0
 857 0004 024B     		ldr	r3, .L51
 858 0006 0222     		mov	r2, #2
 859 0008 1A60     		str	r2, [r3]
2036:.\Generated_Source\PSoC4/CyLib.c ****     }
 860              		.loc 1 2036 0
 861 000a BD46     		mov	sp, r7
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 52


 862              		@ sp needed
 863 000c 80BD     		pop	{r7, pc}
 864              	.L52:
 865 000e C046     		.align	2
 866              	.L51:
 867 0010 04000B40 		.word	1074462724
 868              		.cfi_endproc
 869              	.LFE15:
 870              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 871              		.section	.text.CySysGetResetReason,"ax",%progbits
 872              		.align	2
 873              		.global	CySysGetResetReason
 874              		.code	16
 875              		.thumb_func
 876              		.type	CySysGetResetReason, %function
 877              	CySysGetResetReason:
 878              	.LFB16:
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:.\Generated_Source\PSoC4/CyLib.c **** 
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2043:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:.\Generated_Source\PSoC4/CyLib.c **** *
2045:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:.\Generated_Source\PSoC4/CyLib.c **** *
2050:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:.\Generated_Source\PSoC4/CyLib.c **** *
2055:.\Generated_Source\PSoC4/CyLib.c **** * \return
2056:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:.\Generated_Source\PSoC4/CyLib.c **** *
2058:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:.\Generated_Source\PSoC4/CyLib.c **** {
 879              		.loc 1 2060 0
 880              		.cfi_startproc
 881 0000 80B5     		push	{r7, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 84B0     		sub	sp, sp, #16
 886              		.cfi_def_cfa_offset 24
 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 889 0006 7860     		str	r0, [r7, #4]
2061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:.\Generated_Source\PSoC4/CyLib.c **** 
2063:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 890              		.loc 1 2063 0
 891 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 53


 892 000a 1922     		mov	r2, #25
 893 000c 1340     		and	r3, r2
 894 000e 7B60     		str	r3, [r7, #4]
2064:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 895              		.loc 1 2064 0
 896 0010 064B     		ldr	r3, .L55
 897 0012 1B68     		ldr	r3, [r3]
 898 0014 1922     		mov	r2, #25
 899 0016 1340     		and	r3, r2
 900 0018 FB60     		str	r3, [r7, #12]
2065:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 901              		.loc 1 2066 0
 902 001a 044B     		ldr	r3, .L55
 903 001c 7A68     		ldr	r2, [r7, #4]
 904 001e 1A60     		str	r2, [r3]
2067:.\Generated_Source\PSoC4/CyLib.c **** 
2068:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 905              		.loc 1 2068 0
 906 0020 FB68     		ldr	r3, [r7, #12]
2069:.\Generated_Source\PSoC4/CyLib.c **** }
 907              		.loc 1 2069 0
 908 0022 181C     		mov	r0, r3
 909 0024 BD46     		mov	sp, r7
 910 0026 04B0     		add	sp, sp, #16
 911              		@ sp needed
 912 0028 80BD     		pop	{r7, pc}
 913              	.L56:
 914 002a C046     		.align	2
 915              	.L55:
 916 002c 00030B40 		.word	1074463488
 917              		.cfi_endproc
 918              	.LFE16:
 919              		.size	CySysGetResetReason, .-CySysGetResetReason
 920              		.section	.text.CyDisableInts,"ax",%progbits
 921              		.align	2
 922              		.global	CyDisableInts
 923              		.code	16
 924              		.thumb_func
 925              		.type	CyDisableInts, %function
 926              	CyDisableInts:
 927              	.LFB17:
2070:.\Generated_Source\PSoC4/CyLib.c **** 
2071:.\Generated_Source\PSoC4/CyLib.c **** 
2072:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:.\Generated_Source\PSoC4/CyLib.c **** *
2076:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:.\Generated_Source\PSoC4/CyLib.c **** *
2078:.\Generated_Source\PSoC4/CyLib.c **** * \return
2079:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:.\Generated_Source\PSoC4/CyLib.c **** *
2081:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:.\Generated_Source\PSoC4/CyLib.c **** {
 928              		.loc 1 2083 0
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 54


 929              		.cfi_startproc
 930 0000 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
2084:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:.\Generated_Source\PSoC4/CyLib.c **** 
2086:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 938              		.loc 1 2087 0
 939 0006 064B     		ldr	r3, .L59
 940 0008 1B68     		ldr	r3, [r3]
 941 000a 7B60     		str	r3, [r7, #4]
2088:.\Generated_Source\PSoC4/CyLib.c **** 
2089:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 942              		.loc 1 2090 0
 943 000c 044B     		ldr	r3, .L59
 944 000e 0122     		mov	r2, #1
 945 0010 5242     		neg	r2, r2
 946 0012 1A60     		str	r2, [r3]
2091:.\Generated_Source\PSoC4/CyLib.c **** 
2092:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
 947              		.loc 1 2092 0
 948 0014 7B68     		ldr	r3, [r7, #4]
2093:.\Generated_Source\PSoC4/CyLib.c **** }
 949              		.loc 1 2093 0
 950 0016 181C     		mov	r0, r3
 951 0018 BD46     		mov	sp, r7
 952 001a 02B0     		add	sp, sp, #8
 953              		@ sp needed
 954 001c 80BD     		pop	{r7, pc}
 955              	.L60:
 956 001e C046     		.align	2
 957              	.L59:
 958 0020 80E100E0 		.word	-536813184
 959              		.cfi_endproc
 960              	.LFE17:
 961              		.size	CyDisableInts, .-CyDisableInts
 962              		.section	.text.CyEnableInts,"ax",%progbits
 963              		.align	2
 964              		.global	CyEnableInts
 965              		.code	16
 966              		.thumb_func
 967              		.type	CyEnableInts, %function
 968              	CyEnableInts:
 969              	.LFB18:
2094:.\Generated_Source\PSoC4/CyLib.c **** 
2095:.\Generated_Source\PSoC4/CyLib.c **** 
2096:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 55


2100:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:.\Generated_Source\PSoC4/CyLib.c **** *
2102:.\Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:.\Generated_Source\PSoC4/CyLib.c **** *
2104:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:.\Generated_Source\PSoC4/CyLib.c **** {
 970              		.loc 1 2106 0
 971              		.cfi_startproc
 972 0000 80B5     		push	{r7, lr}
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 7, -8
 975              		.cfi_offset 14, -4
 976 0002 82B0     		sub	sp, sp, #8
 977              		.cfi_def_cfa_offset 16
 978 0004 00AF     		add	r7, sp, #0
 979              		.cfi_def_cfa_register 7
 980 0006 7860     		str	r0, [r7, #4]
2107:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 981              		.loc 1 2107 0
 982 0008 024B     		ldr	r3, .L62
 983 000a 7A68     		ldr	r2, [r7, #4]
 984 000c 1A60     		str	r2, [r3]
2108:.\Generated_Source\PSoC4/CyLib.c **** }
 985              		.loc 1 2108 0
 986 000e BD46     		mov	sp, r7
 987 0010 02B0     		add	sp, sp, #8
 988              		@ sp needed
 989 0012 80BD     		pop	{r7, pc}
 990              	.L63:
 991              		.align	2
 992              	.L62:
 993 0014 00E100E0 		.word	-536813312
 994              		.cfi_endproc
 995              	.LFE18:
 996              		.size	CyEnableInts, .-CyEnableInts
 997              		.section	.text.CyIntSetSysVector,"ax",%progbits
 998              		.align	2
 999              		.global	CyIntSetSysVector
 1000              		.code	16
 1001              		.thumb_func
 1002              		.type	CyIntSetSysVector, %function
 1003              	CyIntSetSysVector:
 1004              	.LFB19:
2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** 
2111:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:.\Generated_Source\PSoC4/CyLib.c **** *
2115:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:.\Generated_Source\PSoC4/CyLib.c **** *
2118:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 56


2122:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:.\Generated_Source\PSoC4/CyLib.c **** *
2125:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:.\Generated_Source\PSoC4/CyLib.c **** *
2127:.\Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:.\Generated_Source\PSoC4/CyLib.c **** {
 1005              		.loc 1 2131 0
 1006              		.cfi_startproc
 1007 0000 80B5     		push	{r7, lr}
 1008              		.cfi_def_cfa_offset 8
 1009              		.cfi_offset 7, -8
 1010              		.cfi_offset 14, -4
 1011 0002 84B0     		sub	sp, sp, #16
 1012              		.cfi_def_cfa_offset 24
 1013 0004 00AF     		add	r7, sp, #0
 1014              		.cfi_def_cfa_register 7
 1015 0006 021C     		mov	r2, r0
 1016 0008 3960     		str	r1, [r7]
 1017 000a FB1D     		add	r3, r7, #7
 1018 000c 1A70     		strb	r2, [r3]
2132:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1019              		.loc 1 2133 0
 1020 000e 8023     		mov	r3, #128
 1021 0010 9B05     		lsl	r3, r3, #22
 1022 0012 FB60     		str	r3, [r7, #12]
2134:.\Generated_Source\PSoC4/CyLib.c **** 
2135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1023              		.loc 1 2135 0
 1024 0014 FB1D     		add	r3, r7, #7
 1025 0016 1B78     		ldrb	r3, [r3]
 1026 0018 0F2B     		cmp	r3, #15
 1027 001a 02D9     		bls	.L65
 1028              		.loc 1 2135 0 is_stmt 0 discriminator 1
 1029 001c 0020     		mov	r0, #0
 1030 001e FFF7FEFF 		bl	CyHalt
 1031              	.L65:
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1032              		.loc 1 2138 0 is_stmt 1
 1033 0022 FB1D     		add	r3, r7, #7
 1034 0024 1B78     		ldrb	r3, [r3]
 1035 0026 9B00     		lsl	r3, r3, #2
 1036 0028 FA68     		ldr	r2, [r7, #12]
 1037 002a D318     		add	r3, r2, r3
 1038 002c 1B68     		ldr	r3, [r3]
 1039 002e BB60     		str	r3, [r7, #8]
2139:.\Generated_Source\PSoC4/CyLib.c **** 
2140:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1040              		.loc 1 2141 0
 1041 0030 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 57


 1042 0032 1B78     		ldrb	r3, [r3]
 1043 0034 9B00     		lsl	r3, r3, #2
 1044 0036 FA68     		ldr	r2, [r7, #12]
 1045 0038 D318     		add	r3, r2, r3
 1046 003a 3A68     		ldr	r2, [r7]
 1047 003c 1A60     		str	r2, [r3]
2142:.\Generated_Source\PSoC4/CyLib.c **** 
2143:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1048              		.loc 1 2143 0
 1049 003e BB68     		ldr	r3, [r7, #8]
2144:.\Generated_Source\PSoC4/CyLib.c **** }
 1050              		.loc 1 2144 0
 1051 0040 181C     		mov	r0, r3
 1052 0042 BD46     		mov	sp, r7
 1053 0044 04B0     		add	sp, sp, #16
 1054              		@ sp needed
 1055 0046 80BD     		pop	{r7, pc}
 1056              		.cfi_endproc
 1057              	.LFE19:
 1058              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1059              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1060              		.align	2
 1061              		.global	CyIntGetSysVector
 1062              		.code	16
 1063              		.thumb_func
 1064              		.type	CyIntGetSysVector, %function
 1065              	CyIntGetSysVector:
 1066              	.LFB20:
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** 
2147:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:.\Generated_Source\PSoC4/CyLib.c **** *
2151:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:.\Generated_Source\PSoC4/CyLib.c **** *
2154:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:.\Generated_Source\PSoC4/CyLib.c **** *
2161:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:.\Generated_Source\PSoC4/CyLib.c **** *
2163:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:.\Generated_Source\PSoC4/CyLib.c **** {
 1067              		.loc 1 2165 0
 1068              		.cfi_startproc
 1069 0000 80B5     		push	{r7, lr}
 1070              		.cfi_def_cfa_offset 8
 1071              		.cfi_offset 7, -8
 1072              		.cfi_offset 14, -4
 1073 0002 84B0     		sub	sp, sp, #16
 1074              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 58


 1075 0004 00AF     		add	r7, sp, #0
 1076              		.cfi_def_cfa_register 7
 1077 0006 021C     		mov	r2, r0
 1078 0008 FB1D     		add	r3, r7, #7
 1079 000a 1A70     		strb	r2, [r3]
2166:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1080              		.loc 1 2166 0
 1081 000c 8023     		mov	r3, #128
 1082 000e 9B05     		lsl	r3, r3, #22
 1083 0010 FB60     		str	r3, [r7, #12]
2167:.\Generated_Source\PSoC4/CyLib.c **** 
2168:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1084              		.loc 1 2168 0
 1085 0012 FB1D     		add	r3, r7, #7
 1086 0014 1B78     		ldrb	r3, [r3]
 1087 0016 0F2B     		cmp	r3, #15
 1088 0018 02D9     		bls	.L68
 1089              		.loc 1 2168 0 is_stmt 0 discriminator 1
 1090 001a 0020     		mov	r0, #0
 1091 001c FFF7FEFF 		bl	CyHalt
 1092              	.L68:
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1093              		.loc 1 2170 0 is_stmt 1
 1094 0020 FB1D     		add	r3, r7, #7
 1095 0022 1B78     		ldrb	r3, [r3]
 1096 0024 9B00     		lsl	r3, r3, #2
 1097 0026 FA68     		ldr	r2, [r7, #12]
 1098 0028 D318     		add	r3, r2, r3
 1099 002a 1B68     		ldr	r3, [r3]
2171:.\Generated_Source\PSoC4/CyLib.c **** }
 1100              		.loc 1 2171 0
 1101 002c 181C     		mov	r0, r3
 1102 002e BD46     		mov	sp, r7
 1103 0030 04B0     		add	sp, sp, #16
 1104              		@ sp needed
 1105 0032 80BD     		pop	{r7, pc}
 1106              		.cfi_endproc
 1107              	.LFE20:
 1108              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1109              		.section	.text.CyIntSetVector,"ax",%progbits
 1110              		.align	2
 1111              		.global	CyIntSetVector
 1112              		.code	16
 1113              		.thumb_func
 1114              		.type	CyIntSetVector, %function
 1115              	CyIntSetVector:
 1116              	.LFB21:
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:.\Generated_Source\PSoC4/CyLib.c **** *
2180:.\Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 59


2181:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:.\Generated_Source\PSoC4/CyLib.c **** *
2183:.\Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:.\Generated_Source\PSoC4/CyLib.c **** *
2185:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:.\Generated_Source\PSoC4/CyLib.c **** {
 1117              		.loc 1 2187 0
 1118              		.cfi_startproc
 1119 0000 80B5     		push	{r7, lr}
 1120              		.cfi_def_cfa_offset 8
 1121              		.cfi_offset 7, -8
 1122              		.cfi_offset 14, -4
 1123 0002 84B0     		sub	sp, sp, #16
 1124              		.cfi_def_cfa_offset 24
 1125 0004 00AF     		add	r7, sp, #0
 1126              		.cfi_def_cfa_register 7
 1127 0006 021C     		mov	r2, r0
 1128 0008 3960     		str	r1, [r7]
 1129 000a FB1D     		add	r3, r7, #7
 1130 000c 1A70     		strb	r2, [r3]
2188:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1131              		.loc 1 2189 0
 1132 000e 8023     		mov	r3, #128
 1133 0010 9B05     		lsl	r3, r3, #22
 1134 0012 FB60     		str	r3, [r7, #12]
2190:.\Generated_Source\PSoC4/CyLib.c **** 
2191:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1135              		.loc 1 2191 0
 1136 0014 FB1D     		add	r3, r7, #7
 1137 0016 1B78     		ldrb	r3, [r3]
 1138 0018 1F2B     		cmp	r3, #31
 1139 001a 02D9     		bls	.L71
 1140              		.loc 1 2191 0 is_stmt 0 discriminator 1
 1141 001c 0020     		mov	r0, #0
 1142 001e FFF7FEFF 		bl	CyHalt
 1143              	.L71:
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1144              		.loc 1 2194 0 is_stmt 1
 1145 0022 FB1D     		add	r3, r7, #7
 1146 0024 1B78     		ldrb	r3, [r3]
 1147 0026 1033     		add	r3, r3, #16
 1148 0028 9B00     		lsl	r3, r3, #2
 1149 002a FA68     		ldr	r2, [r7, #12]
 1150 002c D318     		add	r3, r2, r3
 1151 002e 1B68     		ldr	r3, [r3]
 1152 0030 BB60     		str	r3, [r7, #8]
2195:.\Generated_Source\PSoC4/CyLib.c **** 
2196:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1153              		.loc 1 2197 0
 1154 0032 FB1D     		add	r3, r7, #7
 1155 0034 1B78     		ldrb	r3, [r3]
 1156 0036 1033     		add	r3, r3, #16
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 60


 1157 0038 9B00     		lsl	r3, r3, #2
 1158 003a FA68     		ldr	r2, [r7, #12]
 1159 003c D318     		add	r3, r2, r3
 1160 003e 3A68     		ldr	r2, [r7]
 1161 0040 1A60     		str	r2, [r3]
2198:.\Generated_Source\PSoC4/CyLib.c **** 
2199:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1162              		.loc 1 2199 0
 1163 0042 BB68     		ldr	r3, [r7, #8]
2200:.\Generated_Source\PSoC4/CyLib.c **** }
 1164              		.loc 1 2200 0
 1165 0044 181C     		mov	r0, r3
 1166 0046 BD46     		mov	sp, r7
 1167 0048 04B0     		add	sp, sp, #16
 1168              		@ sp needed
 1169 004a 80BD     		pop	{r7, pc}
 1170              		.cfi_endproc
 1171              	.LFE21:
 1172              		.size	CyIntSetVector, .-CyIntSetVector
 1173              		.section	.text.CyIntGetVector,"ax",%progbits
 1174              		.align	2
 1175              		.global	CyIntGetVector
 1176              		.code	16
 1177              		.thumb_func
 1178              		.type	CyIntGetVector, %function
 1179              	CyIntGetVector:
 1180              	.LFB22:
2201:.\Generated_Source\PSoC4/CyLib.c **** 
2202:.\Generated_Source\PSoC4/CyLib.c **** 
2203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:.\Generated_Source\PSoC4/CyLib.c **** *
2207:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:.\Generated_Source\PSoC4/CyLib.c **** *
2209:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:.\Generated_Source\PSoC4/CyLib.c **** *
2211:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:.\Generated_Source\PSoC4/CyLib.c **** *
2213:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:.\Generated_Source\PSoC4/CyLib.c **** {
 1181              		.loc 1 2215 0
 1182              		.cfi_startproc
 1183 0000 80B5     		push	{r7, lr}
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 7, -8
 1186              		.cfi_offset 14, -4
 1187 0002 84B0     		sub	sp, sp, #16
 1188              		.cfi_def_cfa_offset 24
 1189 0004 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
 1191 0006 021C     		mov	r2, r0
 1192 0008 FB1D     		add	r3, r7, #7
 1193 000a 1A70     		strb	r2, [r3]
2216:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1194              		.loc 1 2216 0
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 61


 1195 000c 8023     		mov	r3, #128
 1196 000e 9B05     		lsl	r3, r3, #22
 1197 0010 FB60     		str	r3, [r7, #12]
2217:.\Generated_Source\PSoC4/CyLib.c **** 
2218:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1198              		.loc 1 2218 0
 1199 0012 FB1D     		add	r3, r7, #7
 1200 0014 1B78     		ldrb	r3, [r3]
 1201 0016 1F2B     		cmp	r3, #31
 1202 0018 02D9     		bls	.L74
 1203              		.loc 1 2218 0 is_stmt 0 discriminator 1
 1204 001a 0020     		mov	r0, #0
 1205 001c FFF7FEFF 		bl	CyHalt
 1206              	.L74:
2219:.\Generated_Source\PSoC4/CyLib.c **** 
2220:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1207              		.loc 1 2220 0 is_stmt 1
 1208 0020 FB1D     		add	r3, r7, #7
 1209 0022 1B78     		ldrb	r3, [r3]
 1210 0024 1033     		add	r3, r3, #16
 1211 0026 9B00     		lsl	r3, r3, #2
 1212 0028 FA68     		ldr	r2, [r7, #12]
 1213 002a D318     		add	r3, r2, r3
 1214 002c 1B68     		ldr	r3, [r3]
2221:.\Generated_Source\PSoC4/CyLib.c **** }
 1215              		.loc 1 2221 0
 1216 002e 181C     		mov	r0, r3
 1217 0030 BD46     		mov	sp, r7
 1218 0032 04B0     		add	sp, sp, #16
 1219              		@ sp needed
 1220 0034 80BD     		pop	{r7, pc}
 1221              		.cfi_endproc
 1222              	.LFE22:
 1223              		.size	CyIntGetVector, .-CyIntGetVector
 1224              		.section	.text.CyIntSetPriority,"ax",%progbits
 1225              		.align	2
 1226              		.global	CyIntSetPriority
 1227              		.code	16
 1228              		.thumb_func
 1229              		.type	CyIntSetPriority, %function
 1230              	CyIntSetPriority:
 1231              	.LFB23:
2222:.\Generated_Source\PSoC4/CyLib.c **** 
2223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:.\Generated_Source\PSoC4/CyLib.c **** *
2227:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:.\Generated_Source\PSoC4/CyLib.c **** *
2229:.\Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:.\Generated_Source\PSoC4/CyLib.c **** *
2232:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:.\Generated_Source\PSoC4/CyLib.c **** {
 1232              		.loc 1 2234 0
 1233              		.cfi_startproc
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 62


 1234 0000 90B5     		push	{r4, r7, lr}
 1235              		.cfi_def_cfa_offset 12
 1236              		.cfi_offset 4, -12
 1237              		.cfi_offset 7, -8
 1238              		.cfi_offset 14, -4
 1239 0002 87B0     		sub	sp, sp, #28
 1240              		.cfi_def_cfa_offset 40
 1241 0004 00AF     		add	r7, sp, #0
 1242              		.cfi_def_cfa_register 7
 1243 0006 021C     		mov	r2, r0
 1244 0008 FB1D     		add	r3, r7, #7
 1245 000a 1A70     		strb	r2, [r3]
 1246 000c BB1D     		add	r3, r7, #6
 1247 000e 0A1C     		add	r2, r1, #0
 1248 0010 1A70     		strb	r2, [r3]
2235:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:.\Generated_Source\PSoC4/CyLib.c **** 
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1249              		.loc 1 2239 0
 1250 0012 BB1D     		add	r3, r7, #6
 1251 0014 1B78     		ldrb	r3, [r3]
 1252 0016 032B     		cmp	r3, #3
 1253 0018 02D9     		bls	.L77
 1254              		.loc 1 2239 0 is_stmt 0 discriminator 1
 1255 001a 0020     		mov	r0, #0
 1256 001c FFF7FEFF 		bl	CyHalt
 1257              	.L77:
2240:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1258              		.loc 1 2240 0 is_stmt 1
 1259 0020 FB1D     		add	r3, r7, #7
 1260 0022 1B78     		ldrb	r3, [r3]
 1261 0024 1F2B     		cmp	r3, #31
 1262 0026 02D9     		bls	.L78
 1263              		.loc 1 2240 0 is_stmt 0 discriminator 1
 1264 0028 0020     		mov	r0, #0
 1265 002a FFF7FEFF 		bl	CyHalt
 1266              	.L78:
2241:.\Generated_Source\PSoC4/CyLib.c **** 
2242:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1267              		.loc 1 2242 0 is_stmt 1
 1268 002e FB1D     		add	r3, r7, #7
 1269 0030 1B78     		ldrb	r3, [r3]
 1270 0032 0322     		mov	r2, #3
 1271 0034 1340     		and	r3, r2
 1272 0036 DB00     		lsl	r3, r3, #3
 1273 0038 0633     		add	r3, r3, #6
 1274 003a 7B61     		str	r3, [r7, #20]
2243:.\Generated_Source\PSoC4/CyLib.c **** 
2244:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1275              		.loc 1 2244 0
 1276 003c 1323     		mov	r3, #19
 1277 003e FC18     		add	r4, r7, r3
 1278 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1279 0044 031C     		mov	r3, r0
 1280 0046 2370     		strb	r3, [r4]
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 63


2245:.\Generated_Source\PSoC4/CyLib.c **** 
2246:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1281              		.loc 1 2246 0
 1282 0048 FB1D     		add	r3, r7, #7
 1283 004a 1B78     		ldrb	r3, [r3]
 1284 004c 9B08     		lsr	r3, r3, #2
 1285 004e DBB2     		uxtb	r3, r3
 1286 0050 9B00     		lsl	r3, r3, #2
 1287 0052 144A     		ldr	r2, .L79
 1288 0054 9446     		mov	ip, r2
 1289 0056 6344     		add	r3, r3, ip
 1290 0058 1B68     		ldr	r3, [r3]
 1291 005a FB60     		str	r3, [r7, #12]
2247:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1292              		.loc 1 2247 0
 1293 005c 7B69     		ldr	r3, [r7, #20]
 1294 005e 0322     		mov	r2, #3
 1295 0060 9A40     		lsl	r2, r2, r3
 1296 0062 131C     		mov	r3, r2
 1297 0064 DA43     		mvn	r2, r3
 1298 0066 FB68     		ldr	r3, [r7, #12]
 1299 0068 1340     		and	r3, r2
 1300 006a FB60     		str	r3, [r7, #12]
2248:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1301              		.loc 1 2248 0
 1302 006c BB1D     		add	r3, r7, #6
 1303 006e 1A78     		ldrb	r2, [r3]
 1304 0070 7B69     		ldr	r3, [r7, #20]
 1305 0072 9A40     		lsl	r2, r2, r3
 1306 0074 131C     		mov	r3, r2
 1307 0076 FA68     		ldr	r2, [r7, #12]
 1308 0078 1343     		orr	r3, r2
 1309 007a FB60     		str	r3, [r7, #12]
2249:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1310              		.loc 1 2249 0
 1311 007c FB1D     		add	r3, r7, #7
 1312 007e 1B78     		ldrb	r3, [r3]
 1313 0080 9B08     		lsr	r3, r3, #2
 1314 0082 DBB2     		uxtb	r3, r3
 1315 0084 9B00     		lsl	r3, r3, #2
 1316 0086 074A     		ldr	r2, .L79
 1317 0088 9446     		mov	ip, r2
 1318 008a 6344     		add	r3, r3, ip
 1319 008c FA68     		ldr	r2, [r7, #12]
 1320 008e 1A60     		str	r2, [r3]
2250:.\Generated_Source\PSoC4/CyLib.c **** 
2251:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1321              		.loc 1 2251 0
 1322 0090 1323     		mov	r3, #19
 1323 0092 FB18     		add	r3, r7, r3
 1324 0094 1B78     		ldrb	r3, [r3]
 1325 0096 181C     		mov	r0, r3
 1326 0098 FFF7FEFF 		bl	CyExitCriticalSection
2252:.\Generated_Source\PSoC4/CyLib.c **** }
 1327              		.loc 1 2252 0
 1328 009c BD46     		mov	sp, r7
 1329 009e 07B0     		add	sp, sp, #28
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 64


 1330              		@ sp needed
 1331 00a0 90BD     		pop	{r4, r7, pc}
 1332              	.L80:
 1333 00a2 C046     		.align	2
 1334              	.L79:
 1335 00a4 00E400E0 		.word	-536812544
 1336              		.cfi_endproc
 1337              	.LFE23:
 1338              		.size	CyIntSetPriority, .-CyIntSetPriority
 1339              		.section	.text.CyIntGetPriority,"ax",%progbits
 1340              		.align	2
 1341              		.global	CyIntGetPriority
 1342              		.code	16
 1343              		.thumb_func
 1344              		.type	CyIntGetPriority, %function
 1345              	CyIntGetPriority:
 1346              	.LFB24:
2253:.\Generated_Source\PSoC4/CyLib.c **** 
2254:.\Generated_Source\PSoC4/CyLib.c **** 
2255:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2257:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:.\Generated_Source\PSoC4/CyLib.c **** *
2259:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:.\Generated_Source\PSoC4/CyLib.c **** *
2261:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:.\Generated_Source\PSoC4/CyLib.c **** *
2263:.\Generated_Source\PSoC4/CyLib.c **** * \return
2264:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:.\Generated_Source\PSoC4/CyLib.c **** *
2266:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:.\Generated_Source\PSoC4/CyLib.c **** {
 1347              		.loc 1 2268 0
 1348              		.cfi_startproc
 1349 0000 80B5     		push	{r7, lr}
 1350              		.cfi_def_cfa_offset 8
 1351              		.cfi_offset 7, -8
 1352              		.cfi_offset 14, -4
 1353 0002 84B0     		sub	sp, sp, #16
 1354              		.cfi_def_cfa_offset 24
 1355 0004 00AF     		add	r7, sp, #0
 1356              		.cfi_def_cfa_register 7
 1357 0006 021C     		mov	r2, r0
 1358 0008 FB1D     		add	r3, r7, #7
 1359 000a 1A70     		strb	r2, [r3]
2269:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:.\Generated_Source\PSoC4/CyLib.c **** 
2271:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1360              		.loc 1 2271 0
 1361 000c FB1D     		add	r3, r7, #7
 1362 000e 1B78     		ldrb	r3, [r3]
 1363 0010 1F2B     		cmp	r3, #31
 1364 0012 02D9     		bls	.L82
 1365              		.loc 1 2271 0 is_stmt 0 discriminator 1
 1366 0014 0020     		mov	r0, #0
 1367 0016 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 65


 1368              	.L82:
2272:.\Generated_Source\PSoC4/CyLib.c **** 
2273:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1369              		.loc 1 2273 0 is_stmt 1
 1370 001a FB1D     		add	r3, r7, #7
 1371 001c 1B78     		ldrb	r3, [r3]
 1372 001e 9B08     		lsr	r3, r3, #2
 1373 0020 DBB2     		uxtb	r3, r3
 1374 0022 9B00     		lsl	r3, r3, #2
 1375 0024 0C4A     		ldr	r2, .L84
 1376 0026 9446     		mov	ip, r2
 1377 0028 6344     		add	r3, r3, ip
 1378 002a 1B68     		ldr	r3, [r3]
 1379 002c FA1D     		add	r2, r7, #7
 1380 002e 1278     		ldrb	r2, [r2]
 1381 0030 0321     		mov	r1, #3
 1382 0032 0A40     		and	r2, r1
 1383 0034 D200     		lsl	r2, r2, #3
 1384 0036 0632     		add	r2, r2, #6
 1385 0038 D340     		lsr	r3, r3, r2
 1386 003a 1A1C     		mov	r2, r3
 1387 003c 0F23     		mov	r3, #15
 1388 003e FB18     		add	r3, r7, r3
 1389 0040 1A70     		strb	r2, [r3]
2274:.\Generated_Source\PSoC4/CyLib.c **** 
2275:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1390              		.loc 1 2275 0
 1391 0042 0F23     		mov	r3, #15
 1392 0044 FB18     		add	r3, r7, r3
 1393 0046 1B78     		ldrb	r3, [r3]
 1394 0048 0322     		mov	r2, #3
 1395 004a 1340     		and	r3, r2
 1396 004c DBB2     		uxtb	r3, r3
2276:.\Generated_Source\PSoC4/CyLib.c **** }
 1397              		.loc 1 2276 0
 1398 004e 181C     		mov	r0, r3
 1399 0050 BD46     		mov	sp, r7
 1400 0052 04B0     		add	sp, sp, #16
 1401              		@ sp needed
 1402 0054 80BD     		pop	{r7, pc}
 1403              	.L85:
 1404 0056 C046     		.align	2
 1405              	.L84:
 1406 0058 00E400E0 		.word	-536812544
 1407              		.cfi_endproc
 1408              	.LFE24:
 1409              		.size	CyIntGetPriority, .-CyIntGetPriority
 1410              		.section	.text.CyIntEnable,"ax",%progbits
 1411              		.align	2
 1412              		.global	CyIntEnable
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	CyIntEnable, %function
 1416              	CyIntEnable:
 1417              	.LFB25:
2277:.\Generated_Source\PSoC4/CyLib.c **** 
2278:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 66


2279:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:.\Generated_Source\PSoC4/CyLib.c **** *
2283:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:.\Generated_Source\PSoC4/CyLib.c **** *
2285:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:.\Generated_Source\PSoC4/CyLib.c **** *
2287:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:.\Generated_Source\PSoC4/CyLib.c **** {
 1418              		.loc 1 2289 0
 1419              		.cfi_startproc
 1420 0000 80B5     		push	{r7, lr}
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 82B0     		sub	sp, sp, #8
 1425              		.cfi_def_cfa_offset 16
 1426 0004 00AF     		add	r7, sp, #0
 1427              		.cfi_def_cfa_register 7
 1428 0006 021C     		mov	r2, r0
 1429 0008 FB1D     		add	r3, r7, #7
 1430 000a 1A70     		strb	r2, [r3]
2290:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1431              		.loc 1 2290 0
 1432 000c 054B     		ldr	r3, .L87
 1433 000e FA1D     		add	r2, r7, #7
 1434 0010 1278     		ldrb	r2, [r2]
 1435 0012 1F21     		mov	r1, #31
 1436 0014 0A40     		and	r2, r1
 1437 0016 0121     		mov	r1, #1
 1438 0018 9140     		lsl	r1, r1, r2
 1439 001a 0A1C     		mov	r2, r1
 1440 001c 1A60     		str	r2, [r3]
2291:.\Generated_Source\PSoC4/CyLib.c **** }
 1441              		.loc 1 2291 0
 1442 001e BD46     		mov	sp, r7
 1443 0020 02B0     		add	sp, sp, #8
 1444              		@ sp needed
 1445 0022 80BD     		pop	{r7, pc}
 1446              	.L88:
 1447              		.align	2
 1448              	.L87:
 1449 0024 00E100E0 		.word	-536813312
 1450              		.cfi_endproc
 1451              	.LFE25:
 1452              		.size	CyIntEnable, .-CyIntEnable
 1453              		.section	.text.CyIntGetState,"ax",%progbits
 1454              		.align	2
 1455              		.global	CyIntGetState
 1456              		.code	16
 1457              		.thumb_func
 1458              		.type	CyIntGetState, %function
 1459              	CyIntGetState:
 1460              	.LFB26:
2292:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 67


2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:.\Generated_Source\PSoC4/CyLib.c **** *
2298:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:.\Generated_Source\PSoC4/CyLib.c **** *
2300:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
2302:.\Generated_Source\PSoC4/CyLib.c **** * \return
2303:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:.\Generated_Source\PSoC4/CyLib.c **** {
 1461              		.loc 1 2307 0
 1462              		.cfi_startproc
 1463 0000 80B5     		push	{r7, lr}
 1464              		.cfi_def_cfa_offset 8
 1465              		.cfi_offset 7, -8
 1466              		.cfi_offset 14, -4
 1467 0002 82B0     		sub	sp, sp, #8
 1468              		.cfi_def_cfa_offset 16
 1469 0004 00AF     		add	r7, sp, #0
 1470              		.cfi_def_cfa_register 7
 1471 0006 021C     		mov	r2, r0
 1472 0008 FB1D     		add	r3, r7, #7
 1473 000a 1A70     		strb	r2, [r3]
2308:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1474              		.loc 1 2309 0
 1475 000c 074B     		ldr	r3, .L91
 1476 000e 1A68     		ldr	r2, [r3]
 1477 0010 FB1D     		add	r3, r7, #7
 1478 0012 1B78     		ldrb	r3, [r3]
 1479 0014 1F21     		mov	r1, #31
 1480 0016 0B40     		and	r3, r1
 1481 0018 DA40     		lsr	r2, r2, r3
 1482 001a 131C     		mov	r3, r2
 1483 001c DBB2     		uxtb	r3, r3
 1484 001e 0122     		mov	r2, #1
 1485 0020 1340     		and	r3, r2
 1486 0022 DBB2     		uxtb	r3, r3
2310:.\Generated_Source\PSoC4/CyLib.c **** }
 1487              		.loc 1 2310 0
 1488 0024 181C     		mov	r0, r3
 1489 0026 BD46     		mov	sp, r7
 1490 0028 02B0     		add	sp, sp, #8
 1491              		@ sp needed
 1492 002a 80BD     		pop	{r7, pc}
 1493              	.L92:
 1494              		.align	2
 1495              	.L91:
 1496 002c 00E100E0 		.word	-536813312
 1497              		.cfi_endproc
 1498              	.LFE26:
 1499              		.size	CyIntGetState, .-CyIntGetState
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 68


 1500              		.section	.text.CyIntDisable,"ax",%progbits
 1501              		.align	2
 1502              		.global	CyIntDisable
 1503              		.code	16
 1504              		.thumb_func
 1505              		.type	CyIntDisable, %function
 1506              	CyIntDisable:
 1507              	.LFB27:
2311:.\Generated_Source\PSoC4/CyLib.c **** 
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2314:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:.\Generated_Source\PSoC4/CyLib.c **** *
2317:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:.\Generated_Source\PSoC4/CyLib.c **** *
2319:.\Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:.\Generated_Source\PSoC4/CyLib.c **** *
2321:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:.\Generated_Source\PSoC4/CyLib.c **** {
 1508              		.loc 1 2323 0
 1509              		.cfi_startproc
 1510 0000 80B5     		push	{r7, lr}
 1511              		.cfi_def_cfa_offset 8
 1512              		.cfi_offset 7, -8
 1513              		.cfi_offset 14, -4
 1514 0002 82B0     		sub	sp, sp, #8
 1515              		.cfi_def_cfa_offset 16
 1516 0004 00AF     		add	r7, sp, #0
 1517              		.cfi_def_cfa_register 7
 1518 0006 021C     		mov	r2, r0
 1519 0008 FB1D     		add	r3, r7, #7
 1520 000a 1A70     		strb	r2, [r3]
2324:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1521              		.loc 1 2324 0
 1522 000c 054B     		ldr	r3, .L94
 1523 000e FA1D     		add	r2, r7, #7
 1524 0010 1278     		ldrb	r2, [r2]
 1525 0012 1F21     		mov	r1, #31
 1526 0014 0A40     		and	r2, r1
 1527 0016 0121     		mov	r1, #1
 1528 0018 9140     		lsl	r1, r1, r2
 1529 001a 0A1C     		mov	r2, r1
 1530 001c 1A60     		str	r2, [r3]
2325:.\Generated_Source\PSoC4/CyLib.c **** }
 1531              		.loc 1 2325 0
 1532 001e BD46     		mov	sp, r7
 1533 0020 02B0     		add	sp, sp, #8
 1534              		@ sp needed
 1535 0022 80BD     		pop	{r7, pc}
 1536              	.L95:
 1537              		.align	2
 1538              	.L94:
 1539 0024 80E100E0 		.word	-536813184
 1540              		.cfi_endproc
 1541              	.LFE27:
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 69


 1542              		.size	CyIntDisable, .-CyIntDisable
 1543              		.section	.text.CyIntSetPending,"ax",%progbits
 1544              		.align	2
 1545              		.global	CyIntSetPending
 1546              		.code	16
 1547              		.thumb_func
 1548              		.type	CyIntSetPending, %function
 1549              	CyIntSetPending:
 1550              	.LFB28:
2326:.\Generated_Source\PSoC4/CyLib.c **** 
2327:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:.\Generated_Source\PSoC4/CyLib.c **** *
2331:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:.\Generated_Source\PSoC4/CyLib.c **** *
2333:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:.\Generated_Source\PSoC4/CyLib.c **** *
2335:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:.\Generated_Source\PSoC4/CyLib.c **** {
 1551              		.loc 1 2337 0
 1552              		.cfi_startproc
 1553 0000 80B5     		push	{r7, lr}
 1554              		.cfi_def_cfa_offset 8
 1555              		.cfi_offset 7, -8
 1556              		.cfi_offset 14, -4
 1557 0002 82B0     		sub	sp, sp, #8
 1558              		.cfi_def_cfa_offset 16
 1559 0004 00AF     		add	r7, sp, #0
 1560              		.cfi_def_cfa_register 7
 1561 0006 021C     		mov	r2, r0
 1562 0008 FB1D     		add	r3, r7, #7
 1563 000a 1A70     		strb	r2, [r3]
2338:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1564              		.loc 1 2338 0
 1565 000c 054B     		ldr	r3, .L97
 1566 000e FA1D     		add	r2, r7, #7
 1567 0010 1278     		ldrb	r2, [r2]
 1568 0012 1F21     		mov	r1, #31
 1569 0014 0A40     		and	r2, r1
 1570 0016 0121     		mov	r1, #1
 1571 0018 9140     		lsl	r1, r1, r2
 1572 001a 0A1C     		mov	r2, r1
 1573 001c 1A60     		str	r2, [r3]
2339:.\Generated_Source\PSoC4/CyLib.c **** }
 1574              		.loc 1 2339 0
 1575 001e BD46     		mov	sp, r7
 1576 0020 02B0     		add	sp, sp, #8
 1577              		@ sp needed
 1578 0022 80BD     		pop	{r7, pc}
 1579              	.L98:
 1580              		.align	2
 1581              	.L97:
 1582 0024 00E200E0 		.word	-536813056
 1583              		.cfi_endproc
 1584              	.LFE28:
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 70


 1585              		.size	CyIntSetPending, .-CyIntSetPending
 1586              		.section	.text.CyIntClearPending,"ax",%progbits
 1587              		.align	2
 1588              		.global	CyIntClearPending
 1589              		.code	16
 1590              		.thumb_func
 1591              		.type	CyIntClearPending, %function
 1592              	CyIntClearPending:
 1593              	.LFB29:
2340:.\Generated_Source\PSoC4/CyLib.c **** 
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:.\Generated_Source\PSoC4/CyLib.c **** *
2346:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:.\Generated_Source\PSoC4/CyLib.c **** *
2348:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2349:.\Generated_Source\PSoC4/CyLib.c **** *
2350:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:.\Generated_Source\PSoC4/CyLib.c **** {
 1594              		.loc 1 2352 0
 1595              		.cfi_startproc
 1596 0000 80B5     		push	{r7, lr}
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 7, -8
 1599              		.cfi_offset 14, -4
 1600 0002 82B0     		sub	sp, sp, #8
 1601              		.cfi_def_cfa_offset 16
 1602 0004 00AF     		add	r7, sp, #0
 1603              		.cfi_def_cfa_register 7
 1604 0006 021C     		mov	r2, r0
 1605 0008 FB1D     		add	r3, r7, #7
 1606 000a 1A70     		strb	r2, [r3]
2353:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1607              		.loc 1 2353 0
 1608 000c 054B     		ldr	r3, .L100
 1609 000e FA1D     		add	r2, r7, #7
 1610 0010 1278     		ldrb	r2, [r2]
 1611 0012 1F21     		mov	r1, #31
 1612 0014 0A40     		and	r2, r1
 1613 0016 0121     		mov	r1, #1
 1614 0018 9140     		lsl	r1, r1, r2
 1615 001a 0A1C     		mov	r2, r1
 1616 001c 1A60     		str	r2, [r3]
2354:.\Generated_Source\PSoC4/CyLib.c **** }
 1617              		.loc 1 2354 0
 1618 001e BD46     		mov	sp, r7
 1619 0020 02B0     		add	sp, sp, #8
 1620              		@ sp needed
 1621 0022 80BD     		pop	{r7, pc}
 1622              	.L101:
 1623              		.align	2
 1624              	.L100:
 1625 0024 80E200E0 		.word	-536812928
 1626              		.cfi_endproc
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 71


 1627              	.LFE29:
 1628              		.size	CyIntClearPending, .-CyIntClearPending
 1629              		.section	.text.CyHalt,"ax",%progbits
 1630              		.align	2
 1631              		.global	CyHalt
 1632              		.code	16
 1633              		.thumb_func
 1634              		.type	CyHalt, %function
 1635              	CyHalt:
 1636              	.LFB30:
2355:.\Generated_Source\PSoC4/CyLib.c **** 
2356:.\Generated_Source\PSoC4/CyLib.c **** 
2357:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:.\Generated_Source\PSoC4/CyLib.c **** *
2361:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:.\Generated_Source\PSoC4/CyLib.c **** *
2363:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:.\Generated_Source\PSoC4/CyLib.c **** {
 1637              		.loc 1 2367 0
 1638              		.cfi_startproc
 1639 0000 80B5     		push	{r7, lr}
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 7, -8
 1642              		.cfi_offset 14, -4
 1643 0002 82B0     		sub	sp, sp, #8
 1644              		.cfi_def_cfa_offset 16
 1645 0004 00AF     		add	r7, sp, #0
 1646              		.cfi_def_cfa_register 7
 1647 0006 021C     		mov	r2, r0
 1648 0008 FB1D     		add	r3, r7, #7
 1649 000a 1A70     		strb	r2, [r3]
2368:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:.\Generated_Source\PSoC4/CyLib.c ****     {
2370:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2371:.\Generated_Source\PSoC4/CyLib.c ****     }
2372:.\Generated_Source\PSoC4/CyLib.c **** 
2373:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1650              		.loc 1 2376 0
 1651              	@ 2376 ".\Generated_Source\PSoC4\CyLib.c" 1
 1652 000c 01BE     		    bkpt    1
 1653              	@ 0 "" 2
2377:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:.\Generated_Source\PSoC4/CyLib.c **** }
 1654              		.loc 1 2380 0
 1655              		.code	16
 1656 000e BD46     		mov	sp, r7
 1657 0010 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 72


 1658              		@ sp needed
 1659 0012 80BD     		pop	{r7, pc}
 1660              		.cfi_endproc
 1661              	.LFE30:
 1662              		.size	CyHalt, .-CyHalt
 1663              		.section	.text.CySoftwareReset,"ax",%progbits
 1664              		.align	2
 1665              		.global	CySoftwareReset
 1666              		.code	16
 1667              		.thumb_func
 1668              		.type	CySoftwareReset, %function
 1669              	CySoftwareReset:
 1670              	.LFB31:
2381:.\Generated_Source\PSoC4/CyLib.c **** 
2382:.\Generated_Source\PSoC4/CyLib.c **** 
2383:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:.\Generated_Source\PSoC4/CyLib.c **** *
2387:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:.\Generated_Source\PSoC4/CyLib.c **** *
2389:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:.\Generated_Source\PSoC4/CyLib.c **** {
 1671              		.loc 1 2391 0
 1672              		.cfi_startproc
 1673 0000 80B5     		push	{r7, lr}
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 00AF     		add	r7, sp, #0
 1678              		.cfi_def_cfa_register 7
2392:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1679              		.loc 1 2396 0
 1680 0004 044B     		ldr	r3, .L104
 1681 0006 044A     		ldr	r2, .L104
 1682 0008 1268     		ldr	r2, [r2]
 1683 000a 1204     		lsl	r2, r2, #16
 1684 000c 120C     		lsr	r2, r2, #16
2397:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1685              		.loc 1 2397 0
 1686 000e 0349     		ldr	r1, .L104+4
 1687 0010 0A43     		orr	r2, r1
2396:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1688              		.loc 1 2396 0
 1689 0012 1A60     		str	r2, [r3]
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 1690              		.loc 1 2398 0
 1691 0014 BD46     		mov	sp, r7
 1692              		@ sp needed
 1693 0016 80BD     		pop	{r7, pc}
 1694              	.L105:
 1695              		.align	2
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 73


 1696              	.L104:
 1697 0018 0CED00E0 		.word	-536810228
 1698 001c 0400FA05 		.word	100270084
 1699              		.cfi_endproc
 1700              	.LFE31:
 1701              		.size	CySoftwareReset, .-CySoftwareReset
 1702              		.section	.text.CyDelay,"ax",%progbits
 1703              		.align	2
 1704              		.global	CyDelay
 1705              		.code	16
 1706              		.thumb_func
 1707              		.type	CyDelay, %function
 1708              	CyDelay:
 1709              	.LFB32:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:.\Generated_Source\PSoC4/CyLib.c **** *
2407:.\Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:.\Generated_Source\PSoC4/CyLib.c **** *
2409:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:.\Generated_Source\PSoC4/CyLib.c **** {
 1710              		.loc 1 2411 0
 1711              		.cfi_startproc
 1712 0000 80B5     		push	{r7, lr}
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 7, -8
 1715              		.cfi_offset 14, -4
 1716 0002 82B0     		sub	sp, sp, #8
 1717              		.cfi_def_cfa_offset 16
 1718 0004 00AF     		add	r7, sp, #0
 1719              		.cfi_def_cfa_register 7
 1720 0006 7860     		str	r0, [r7, #4]
2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1721              		.loc 1 2412 0
 1722 0008 09E0     		b	.L107
 1723              	.L108:
2413:.\Generated_Source\PSoC4/CyLib.c ****     {
2414:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:.\Generated_Source\PSoC4/CyLib.c ****          */
2417:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1724              		.loc 1 2417 0
 1725 000a 0C4B     		ldr	r3, .L109
 1726 000c 1B68     		ldr	r3, [r3]
 1727 000e 181C     		mov	r0, r3
 1728 0010 FFF7FEFF 		bl	CyDelayCycles
2418:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1729              		.loc 1 2418 0
 1730 0014 7B68     		ldr	r3, [r7, #4]
 1731 0016 0A4A     		ldr	r2, .L109+4
 1732 0018 9446     		mov	ip, r2
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 74


 1733 001a 6344     		add	r3, r3, ip
 1734 001c 7B60     		str	r3, [r7, #4]
 1735              	.L107:
2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1736              		.loc 1 2412 0
 1737 001e 7A68     		ldr	r2, [r7, #4]
 1738 0020 8023     		mov	r3, #128
 1739 0022 1B02     		lsl	r3, r3, #8
 1740 0024 9A42     		cmp	r2, r3
 1741 0026 F0D8     		bhi	.L108
2419:.\Generated_Source\PSoC4/CyLib.c ****     }
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1742              		.loc 1 2421 0
 1743 0028 064B     		ldr	r3, .L109+8
 1744 002a 1B68     		ldr	r3, [r3]
 1745 002c 7A68     		ldr	r2, [r7, #4]
 1746 002e 5343     		mul	r3, r2
 1747 0030 181C     		mov	r0, r3
 1748 0032 FFF7FEFF 		bl	CyDelayCycles
2422:.\Generated_Source\PSoC4/CyLib.c **** }
 1749              		.loc 1 2422 0
 1750 0036 BD46     		mov	sp, r7
 1751 0038 02B0     		add	sp, sp, #8
 1752              		@ sp needed
 1753 003a 80BD     		pop	{r7, pc}
 1754              	.L110:
 1755              		.align	2
 1756              	.L109:
 1757 003c 00000000 		.word	cydelay32kMs
 1758 0040 0080FFFF 		.word	-32768
 1759 0044 00000000 		.word	cydelayFreqKhz
 1760              		.cfi_endproc
 1761              	.LFE32:
 1762              		.size	CyDelay, .-CyDelay
 1763              		.section	.text.CyDelayUs,"ax",%progbits
 1764              		.align	2
 1765              		.global	CyDelayUs
 1766              		.code	16
 1767              		.thumb_func
 1768              		.type	CyDelayUs, %function
 1769              	CyDelayUs:
 1770              	.LFB33:
2423:.\Generated_Source\PSoC4/CyLib.c **** 
2424:.\Generated_Source\PSoC4/CyLib.c **** 
2425:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2428:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:.\Generated_Source\PSoC4/CyLib.c **** *
2430:.\Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:.\Generated_Source\PSoC4/CyLib.c **** {
 1771              		.loc 1 2434 0
 1772              		.cfi_startproc
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 75


 1773 0000 80B5     		push	{r7, lr}
 1774              		.cfi_def_cfa_offset 8
 1775              		.cfi_offset 7, -8
 1776              		.cfi_offset 14, -4
 1777 0002 82B0     		sub	sp, sp, #8
 1778              		.cfi_def_cfa_offset 16
 1779 0004 00AF     		add	r7, sp, #0
 1780              		.cfi_def_cfa_register 7
 1781 0006 021C     		mov	r2, r0
 1782 0008 BB1D     		add	r3, r7, #6
 1783 000a 1A80     		strh	r2, [r3]
2435:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1784              		.loc 1 2435 0
 1785 000c BB1D     		add	r3, r7, #6
 1786 000e 1B88     		ldrh	r3, [r3]
 1787 0010 044A     		ldr	r2, .L112
 1788 0012 1278     		ldrb	r2, [r2]
 1789 0014 5343     		mul	r3, r2
 1790 0016 181C     		mov	r0, r3
 1791 0018 FFF7FEFF 		bl	CyDelayCycles
2436:.\Generated_Source\PSoC4/CyLib.c **** }
 1792              		.loc 1 2436 0
 1793 001c BD46     		mov	sp, r7
 1794 001e 02B0     		add	sp, sp, #8
 1795              		@ sp needed
 1796 0020 80BD     		pop	{r7, pc}
 1797              	.L113:
 1798 0022 C046     		.align	2
 1799              	.L112:
 1800 0024 00000000 		.word	cydelayFreqMhz
 1801              		.cfi_endproc
 1802              	.LFE33:
 1803              		.size	CyDelayUs, .-CyDelayUs
 1804              		.global	__aeabi_uidiv
 1805              		.section	.text.CyDelayFreq,"ax",%progbits
 1806              		.align	2
 1807              		.global	CyDelayFreq
 1808              		.code	16
 1809              		.thumb_func
 1810              		.type	CyDelayFreq, %function
 1811              	CyDelayFreq:
 1812              	.LFB34:
2437:.\Generated_Source\PSoC4/CyLib.c **** 
2438:.\Generated_Source\PSoC4/CyLib.c **** 
2439:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:.\Generated_Source\PSoC4/CyLib.c **** *
2444:.\Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:.\Generated_Source\PSoC4/CyLib.c **** *
2446:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:.\Generated_Source\PSoC4/CyLib.c **** {
 1813              		.loc 1 2448 0
 1814              		.cfi_startproc
 1815 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 76


 1816              		.cfi_def_cfa_offset 8
 1817              		.cfi_offset 7, -8
 1818              		.cfi_offset 14, -4
 1819 0002 82B0     		sub	sp, sp, #8
 1820              		.cfi_def_cfa_offset 16
 1821 0004 00AF     		add	r7, sp, #0
 1822              		.cfi_def_cfa_register 7
 1823 0006 7860     		str	r0, [r7, #4]
2449:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1824              		.loc 1 2449 0
 1825 0008 7B68     		ldr	r3, [r7, #4]
 1826 000a 002B     		cmp	r3, #0
 1827 000c 03D0     		beq	.L115
2450:.\Generated_Source\PSoC4/CyLib.c ****     {
2451:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1828              		.loc 1 2451 0
 1829 000e 154B     		ldr	r3, .L117
 1830 0010 7A68     		ldr	r2, [r7, #4]
 1831 0012 1A60     		str	r2, [r3]
 1832 0014 02E0     		b	.L116
 1833              	.L115:
2452:.\Generated_Source\PSoC4/CyLib.c ****     }
2453:.\Generated_Source\PSoC4/CyLib.c ****     else
2454:.\Generated_Source\PSoC4/CyLib.c ****     {
2455:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1834              		.loc 1 2455 0
 1835 0016 134B     		ldr	r3, .L117
 1836 0018 134A     		ldr	r2, .L117+4
 1837 001a 1A60     		str	r2, [r3]
 1838              	.L116:
2456:.\Generated_Source\PSoC4/CyLib.c ****     }
2457:.\Generated_Source\PSoC4/CyLib.c **** 
2458:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1839              		.loc 1 2458 0
 1840 001c 114B     		ldr	r3, .L117
 1841 001e 1B68     		ldr	r3, [r3]
 1842 0020 124A     		ldr	r2, .L117+8
 1843 0022 9446     		mov	ip, r2
 1844 0024 6344     		add	r3, r3, ip
 1845 0026 181C     		mov	r0, r3
 1846 0028 1149     		ldr	r1, .L117+12
 1847 002a FFF7FEFF 		bl	__aeabi_uidiv
 1848 002e 031C     		mov	r3, r0
 1849 0030 DAB2     		uxtb	r2, r3
 1850 0032 104B     		ldr	r3, .L117+16
 1851 0034 1A70     		strb	r2, [r3]
2459:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1852              		.loc 1 2459 0
 1853 0036 0B4B     		ldr	r3, .L117
 1854 0038 1B68     		ldr	r3, [r3]
 1855 003a 0F4A     		ldr	r2, .L117+20
 1856 003c 9446     		mov	ip, r2
 1857 003e 6344     		add	r3, r3, ip
 1858 0040 181C     		mov	r0, r3
 1859 0042 FA23     		mov	r3, #250
 1860 0044 9900     		lsl	r1, r3, #2
 1861 0046 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 77


 1862 004a 031C     		mov	r3, r0
 1863 004c 1A1C     		mov	r2, r3
 1864 004e 0B4B     		ldr	r3, .L117+24
 1865 0050 1A60     		str	r2, [r3]
2460:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1866              		.loc 1 2460 0
 1867 0052 0A4B     		ldr	r3, .L117+24
 1868 0054 1B68     		ldr	r3, [r3]
 1869 0056 DA03     		lsl	r2, r3, #15
 1870 0058 094B     		ldr	r3, .L117+28
 1871 005a 1A60     		str	r2, [r3]
2461:.\Generated_Source\PSoC4/CyLib.c **** }
 1872              		.loc 1 2461 0
 1873 005c BD46     		mov	sp, r7
 1874 005e 02B0     		add	sp, sp, #8
 1875              		@ sp needed
 1876 0060 80BD     		pop	{r7, pc}
 1877              	.L118:
 1878 0062 C046     		.align	2
 1879              	.L117:
 1880 0064 00000000 		.word	cydelayFreqHz
 1881 0068 006CDC02 		.word	48000000
 1882 006c 3F420F00 		.word	999999
 1883 0070 40420F00 		.word	1000000
 1884 0074 00000000 		.word	cydelayFreqMhz
 1885 0078 E7030000 		.word	999
 1886 007c 00000000 		.word	cydelayFreqKhz
 1887 0080 00000000 		.word	cydelay32kMs
 1888              		.cfi_endproc
 1889              	.LFE34:
 1890              		.size	CyDelayFreq, .-CyDelayFreq
 1891              		.section	.text.CySysTickStart,"ax",%progbits
 1892              		.align	2
 1893              		.global	CySysTickStart
 1894              		.code	16
 1895              		.thumb_func
 1896              		.type	CySysTickStart, %function
 1897              	CySysTickStart:
 1898              	.LFB35:
2462:.\Generated_Source\PSoC4/CyLib.c **** 
2463:.\Generated_Source\PSoC4/CyLib.c **** 
2464:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:.\Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:.\Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:.\Generated_Source\PSoC4/CyLib.c **** *
2475:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:.\Generated_Source\PSoC4/CyLib.c **** *
2478:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 78


2480:.\Generated_Source\PSoC4/CyLib.c **** {
 1899              		.loc 1 2480 0
 1900              		.cfi_startproc
 1901 0000 80B5     		push	{r7, lr}
 1902              		.cfi_def_cfa_offset 8
 1903              		.cfi_offset 7, -8
 1904              		.cfi_offset 14, -4
 1905 0002 00AF     		add	r7, sp, #0
 1906              		.cfi_def_cfa_register 7
2481:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1907              		.loc 1 2481 0
 1908 0004 064B     		ldr	r3, .L121
 1909 0006 1B68     		ldr	r3, [r3]
 1910 0008 002B     		cmp	r3, #0
 1911 000a 04D1     		bne	.L120
2482:.\Generated_Source\PSoC4/CyLib.c ****     {
2483:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1912              		.loc 1 2483 0
 1913 000c FFF7FEFF 		bl	CySysTickInit
2484:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1914              		.loc 1 2484 0
 1915 0010 034B     		ldr	r3, .L121
 1916 0012 0122     		mov	r2, #1
 1917 0014 1A60     		str	r2, [r3]
 1918              	.L120:
2485:.\Generated_Source\PSoC4/CyLib.c ****     }
2486:.\Generated_Source\PSoC4/CyLib.c **** 
2487:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1919              		.loc 1 2487 0
 1920 0016 FFF7FEFF 		bl	CySysTickEnable
2488:.\Generated_Source\PSoC4/CyLib.c **** }
 1921              		.loc 1 2488 0
 1922 001a BD46     		mov	sp, r7
 1923              		@ sp needed
 1924 001c 80BD     		pop	{r7, pc}
 1925              	.L122:
 1926 001e C046     		.align	2
 1927              	.L121:
 1928 0020 00000000 		.word	CySysTickInitVar
 1929              		.cfi_endproc
 1930              	.LFE35:
 1931              		.size	CySysTickStart, .-CySysTickStart
 1932              		.section	.text.CySysTickInit,"ax",%progbits
 1933              		.align	2
 1934              		.global	CySysTickInit
 1935              		.code	16
 1936              		.thumb_func
 1937              		.type	CySysTickInit, %function
 1938              	CySysTickInit:
 1939              	.LFB36:
2489:.\Generated_Source\PSoC4/CyLib.c **** 
2490:.\Generated_Source\PSoC4/CyLib.c **** 
2491:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:.\Generated_Source\PSoC4/CyLib.c **** *
2495:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 79


2496:.\Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:.\Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:.\Generated_Source\PSoC4/CyLib.c **** *
2500:.\Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:.\Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:.\Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:.\Generated_Source\PSoC4/CyLib.c **** *
2504:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:.\Generated_Source\PSoC4/CyLib.c **** *
2507:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:.\Generated_Source\PSoC4/CyLib.c **** {
 1940              		.loc 1 2509 0
 1941              		.cfi_startproc
 1942 0000 80B5     		push	{r7, lr}
 1943              		.cfi_def_cfa_offset 8
 1944              		.cfi_offset 7, -8
 1945              		.cfi_offset 14, -4
 1946 0002 82B0     		sub	sp, sp, #8
 1947              		.cfi_def_cfa_offset 16
 1948 0004 00AF     		add	r7, sp, #0
 1949              		.cfi_def_cfa_register 7
2510:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1950              		.loc 1 2512 0
 1951 0006 0023     		mov	r3, #0
 1952 0008 7B60     		str	r3, [r7, #4]
 1953 000a 07E0     		b	.L124
 1954              	.L125:
2513:.\Generated_Source\PSoC4/CyLib.c ****     {
2514:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1955              		.loc 1 2514 0 discriminator 3
 1956 000c 124B     		ldr	r3, .L126
 1957 000e 7A68     		ldr	r2, [r7, #4]
 1958 0010 9200     		lsl	r2, r2, #2
 1959 0012 0021     		mov	r1, #0
 1960 0014 D150     		str	r1, [r2, r3]
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1961              		.loc 1 2512 0 discriminator 3
 1962 0016 7B68     		ldr	r3, [r7, #4]
 1963 0018 0133     		add	r3, r3, #1
 1964 001a 7B60     		str	r3, [r7, #4]
 1965              	.L124:
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1966              		.loc 1 2512 0 is_stmt 0 discriminator 1
 1967 001c 7B68     		ldr	r3, [r7, #4]
 1968 001e 042B     		cmp	r3, #4
 1969 0020 F4D9     		bls	.L125
2515:.\Generated_Source\PSoC4/CyLib.c ****     }
2516:.\Generated_Source\PSoC4/CyLib.c **** 
2517:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 1970              		.loc 1 2517 0 is_stmt 1
 1971 0022 0E4B     		ldr	r3, .L126+4
 1972 0024 0F20     		mov	r0, #15
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 80


 1973 0026 191C     		mov	r1, r3
 1974 0028 FFF7FEFF 		bl	CyIntSetSysVector
2518:.\Generated_Source\PSoC4/CyLib.c **** 
2519:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 1975              		.loc 1 2520 0
 1976 002c 0120     		mov	r0, #1
 1977 002e FFF7FEFF 		bl	CySysTickSetClockSource
2521:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:.\Generated_Source\PSoC4/CyLib.c **** 
2523:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1978              		.loc 1 2523 0
 1979 0032 0B4B     		ldr	r3, .L126+8
 1980 0034 1B68     		ldr	r3, [r3]
 1981 0036 181C     		mov	r0, r3
 1982 0038 FA23     		mov	r3, #250
 1983 003a 9900     		lsl	r1, r3, #2
 1984 003c FFF7FEFF 		bl	__aeabi_uidiv
 1985 0040 031C     		mov	r3, r0
 1986 0042 181C     		mov	r0, r3
 1987 0044 FFF7FEFF 		bl	CySysTickSetReload
2524:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1988              		.loc 1 2524 0
 1989 0048 FFF7FEFF 		bl	CySysTickClear
2525:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1990              		.loc 1 2525 0
 1991 004c 0F20     		mov	r0, #15
 1992 004e FFF7FEFF 		bl	CyIntEnable
2526:.\Generated_Source\PSoC4/CyLib.c **** }
 1993              		.loc 1 2526 0
 1994 0052 BD46     		mov	sp, r7
 1995 0054 02B0     		add	sp, sp, #8
 1996              		@ sp needed
 1997 0056 80BD     		pop	{r7, pc}
 1998              	.L127:
 1999              		.align	2
 2000              	.L126:
 2001 0058 00000000 		.word	CySysTickCallbacks
 2002 005c 00000000 		.word	CySysTickServiceCallbacks
 2003 0060 00000000 		.word	cydelayFreqHz
 2004              		.cfi_endproc
 2005              	.LFE36:
 2006              		.size	CySysTickInit, .-CySysTickInit
 2007              		.section	.text.CySysTickEnable,"ax",%progbits
 2008              		.align	2
 2009              		.global	CySysTickEnable
 2010              		.code	16
 2011              		.thumb_func
 2012              		.type	CySysTickEnable, %function
 2013              	CySysTickEnable:
 2014              	.LFB37:
2527:.\Generated_Source\PSoC4/CyLib.c **** 
2528:.\Generated_Source\PSoC4/CyLib.c **** 
2529:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 81


2533:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:.\Generated_Source\PSoC4/CyLib.c **** *
2535:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:.\Generated_Source\PSoC4/CyLib.c **** *
2538:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2540:.\Generated_Source\PSoC4/CyLib.c **** {
 2015              		.loc 1 2540 0
 2016              		.cfi_startproc
 2017 0000 80B5     		push	{r7, lr}
 2018              		.cfi_def_cfa_offset 8
 2019              		.cfi_offset 7, -8
 2020              		.cfi_offset 14, -4
 2021 0002 00AF     		add	r7, sp, #0
 2022              		.cfi_def_cfa_register 7
2541:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2023              		.loc 1 2541 0
 2024 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2542:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2025              		.loc 1 2542 0
 2026 0008 034B     		ldr	r3, .L129
 2027 000a 034A     		ldr	r2, .L129
 2028 000c 1268     		ldr	r2, [r2]
 2029 000e 0121     		mov	r1, #1
 2030 0010 0A43     		orr	r2, r1
 2031 0012 1A60     		str	r2, [r3]
2543:.\Generated_Source\PSoC4/CyLib.c **** }
 2032              		.loc 1 2543 0
 2033 0014 BD46     		mov	sp, r7
 2034              		@ sp needed
 2035 0016 80BD     		pop	{r7, pc}
 2036              	.L130:
 2037              		.align	2
 2038              	.L129:
 2039 0018 10E000E0 		.word	-536813552
 2040              		.cfi_endproc
 2041              	.LFE37:
 2042              		.size	CySysTickEnable, .-CySysTickEnable
 2043              		.section	.text.CySysTickStop,"ax",%progbits
 2044              		.align	2
 2045              		.global	CySysTickStop
 2046              		.code	16
 2047              		.thumb_func
 2048              		.type	CySysTickStop, %function
 2049              	CySysTickStop:
 2050              	.LFB38:
2544:.\Generated_Source\PSoC4/CyLib.c **** 
2545:.\Generated_Source\PSoC4/CyLib.c **** 
2546:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:.\Generated_Source\PSoC4/CyLib.c **** *
2552:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 82


2554:.\Generated_Source\PSoC4/CyLib.c **** *
2555:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:.\Generated_Source\PSoC4/CyLib.c **** {
 2051              		.loc 1 2557 0
 2052              		.cfi_startproc
 2053 0000 80B5     		push	{r7, lr}
 2054              		.cfi_def_cfa_offset 8
 2055              		.cfi_offset 7, -8
 2056              		.cfi_offset 14, -4
 2057 0002 00AF     		add	r7, sp, #0
 2058              		.cfi_def_cfa_register 7
2558:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2059              		.loc 1 2558 0
 2060 0004 034B     		ldr	r3, .L132
 2061 0006 034A     		ldr	r2, .L132
 2062 0008 1268     		ldr	r2, [r2]
 2063 000a 0121     		mov	r1, #1
 2064 000c 8A43     		bic	r2, r1
 2065 000e 1A60     		str	r2, [r3]
2559:.\Generated_Source\PSoC4/CyLib.c **** }
 2066              		.loc 1 2559 0
 2067 0010 BD46     		mov	sp, r7
 2068              		@ sp needed
 2069 0012 80BD     		pop	{r7, pc}
 2070              	.L133:
 2071              		.align	2
 2072              	.L132:
 2073 0014 10E000E0 		.word	-536813552
 2074              		.cfi_endproc
 2075              	.LFE38:
 2076              		.size	CySysTickStop, .-CySysTickStop
 2077              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2078              		.align	2
 2079              		.global	CySysTickEnableInterrupt
 2080              		.code	16
 2081              		.thumb_func
 2082              		.type	CySysTickEnableInterrupt, %function
 2083              	CySysTickEnableInterrupt:
 2084              	.LFB39:
2560:.\Generated_Source\PSoC4/CyLib.c **** 
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:.\Generated_Source\PSoC4/CyLib.c **** *
2566:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:.\Generated_Source\PSoC4/CyLib.c **** *
2568:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:.\Generated_Source\PSoC4/CyLib.c **** *
2571:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:.\Generated_Source\PSoC4/CyLib.c **** {
 2085              		.loc 1 2573 0
 2086              		.cfi_startproc
 2087 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 83


 2088              		.cfi_def_cfa_offset 8
 2089              		.cfi_offset 7, -8
 2090              		.cfi_offset 14, -4
 2091 0002 00AF     		add	r7, sp, #0
 2092              		.cfi_def_cfa_register 7
2574:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2093              		.loc 1 2574 0
 2094 0004 034B     		ldr	r3, .L135
 2095 0006 034A     		ldr	r2, .L135
 2096 0008 1268     		ldr	r2, [r2]
 2097 000a 0221     		mov	r1, #2
 2098 000c 0A43     		orr	r2, r1
 2099 000e 1A60     		str	r2, [r3]
2575:.\Generated_Source\PSoC4/CyLib.c **** }
 2100              		.loc 1 2575 0
 2101 0010 BD46     		mov	sp, r7
 2102              		@ sp needed
 2103 0012 80BD     		pop	{r7, pc}
 2104              	.L136:
 2105              		.align	2
 2106              	.L135:
 2107 0014 10E000E0 		.word	-536813552
 2108              		.cfi_endproc
 2109              	.LFE39:
 2110              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2111              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2112              		.align	2
 2113              		.global	CySysTickDisableInterrupt
 2114              		.code	16
 2115              		.thumb_func
 2116              		.type	CySysTickDisableInterrupt, %function
 2117              	CySysTickDisableInterrupt:
 2118              	.LFB40:
2576:.\Generated_Source\PSoC4/CyLib.c **** 
2577:.\Generated_Source\PSoC4/CyLib.c **** 
2578:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:.\Generated_Source\PSoC4/CyLib.c **** *
2582:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:.\Generated_Source\PSoC4/CyLib.c **** *
2584:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:.\Generated_Source\PSoC4/CyLib.c **** *
2587:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:.\Generated_Source\PSoC4/CyLib.c **** {
 2119              		.loc 1 2589 0
 2120              		.cfi_startproc
 2121 0000 80B5     		push	{r7, lr}
 2122              		.cfi_def_cfa_offset 8
 2123              		.cfi_offset 7, -8
 2124              		.cfi_offset 14, -4
 2125 0002 00AF     		add	r7, sp, #0
 2126              		.cfi_def_cfa_register 7
2590:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2127              		.loc 1 2590 0
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 84


 2128 0004 034B     		ldr	r3, .L138
 2129 0006 034A     		ldr	r2, .L138
 2130 0008 1268     		ldr	r2, [r2]
 2131 000a 0221     		mov	r1, #2
 2132 000c 8A43     		bic	r2, r1
 2133 000e 1A60     		str	r2, [r3]
2591:.\Generated_Source\PSoC4/CyLib.c **** }
 2134              		.loc 1 2591 0
 2135 0010 BD46     		mov	sp, r7
 2136              		@ sp needed
 2137 0012 80BD     		pop	{r7, pc}
 2138              	.L139:
 2139              		.align	2
 2140              	.L138:
 2141 0014 10E000E0 		.word	-536813552
 2142              		.cfi_endproc
 2143              	.LFE40:
 2144              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2145              		.section	.text.CySysTickSetReload,"ax",%progbits
 2146              		.align	2
 2147              		.global	CySysTickSetReload
 2148              		.code	16
 2149              		.thumb_func
 2150              		.type	CySysTickSetReload, %function
 2151              	CySysTickSetReload:
 2152              	.LFB41:
2592:.\Generated_Source\PSoC4/CyLib.c **** 
2593:.\Generated_Source\PSoC4/CyLib.c **** 
2594:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2596:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:.\Generated_Source\PSoC4/CyLib.c **** *
2598:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2599:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:.\Generated_Source\PSoC4/CyLib.c **** *
2602:.\Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:.\Generated_Source\PSoC4/CyLib.c **** *
2604:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:.\Generated_Source\PSoC4/CyLib.c **** {
 2153              		.loc 1 2606 0
 2154              		.cfi_startproc
 2155 0000 80B5     		push	{r7, lr}
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 7, -8
 2158              		.cfi_offset 14, -4
 2159 0002 82B0     		sub	sp, sp, #8
 2160              		.cfi_def_cfa_offset 16
 2161 0004 00AF     		add	r7, sp, #0
 2162              		.cfi_def_cfa_register 7
 2163 0006 7860     		str	r0, [r7, #4]
2607:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2164              		.loc 1 2607 0
 2165 0008 034B     		ldr	r3, .L141
 2166 000a 7A68     		ldr	r2, [r7, #4]
 2167 000c 1202     		lsl	r2, r2, #8
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 85


 2168 000e 120A     		lsr	r2, r2, #8
 2169 0010 1A60     		str	r2, [r3]
2608:.\Generated_Source\PSoC4/CyLib.c **** }
 2170              		.loc 1 2608 0
 2171 0012 BD46     		mov	sp, r7
 2172 0014 02B0     		add	sp, sp, #8
 2173              		@ sp needed
 2174 0016 80BD     		pop	{r7, pc}
 2175              	.L142:
 2176              		.align	2
 2177              	.L141:
 2178 0018 14E000E0 		.word	-536813548
 2179              		.cfi_endproc
 2180              	.LFE41:
 2181              		.size	CySysTickSetReload, .-CySysTickSetReload
 2182              		.section	.text.CySysTickGetReload,"ax",%progbits
 2183              		.align	2
 2184              		.global	CySysTickGetReload
 2185              		.code	16
 2186              		.thumb_func
 2187              		.type	CySysTickGetReload, %function
 2188              	CySysTickGetReload:
 2189              	.LFB42:
2609:.\Generated_Source\PSoC4/CyLib.c **** 
2610:.\Generated_Source\PSoC4/CyLib.c **** 
2611:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:.\Generated_Source\PSoC4/CyLib.c **** *
2615:.\Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:.\Generated_Source\PSoC4/CyLib.c **** *
2617:.\Generated_Source\PSoC4/CyLib.c **** * \return
2618:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:.\Generated_Source\PSoC4/CyLib.c **** *
2620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:.\Generated_Source\PSoC4/CyLib.c **** {
 2190              		.loc 1 2622 0
 2191              		.cfi_startproc
 2192 0000 80B5     		push	{r7, lr}
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 7, -8
 2195              		.cfi_offset 14, -4
 2196 0002 00AF     		add	r7, sp, #0
 2197              		.cfi_def_cfa_register 7
2623:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2198              		.loc 1 2623 0
 2199 0004 034B     		ldr	r3, .L145
 2200 0006 1B68     		ldr	r3, [r3]
 2201 0008 1B02     		lsl	r3, r3, #8
 2202 000a 1B0A     		lsr	r3, r3, #8
2624:.\Generated_Source\PSoC4/CyLib.c **** }
 2203              		.loc 1 2624 0
 2204 000c 181C     		mov	r0, r3
 2205 000e BD46     		mov	sp, r7
 2206              		@ sp needed
 2207 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 86


 2208              	.L146:
 2209 0012 C046     		.align	2
 2210              	.L145:
 2211 0014 14E000E0 		.word	-536813548
 2212              		.cfi_endproc
 2213              	.LFE42:
 2214              		.size	CySysTickGetReload, .-CySysTickGetReload
 2215              		.section	.text.CySysTickGetValue,"ax",%progbits
 2216              		.align	2
 2217              		.global	CySysTickGetValue
 2218              		.code	16
 2219              		.thumb_func
 2220              		.type	CySysTickGetValue, %function
 2221              	CySysTickGetValue:
 2222              	.LFB43:
2625:.\Generated_Source\PSoC4/CyLib.c **** 
2626:.\Generated_Source\PSoC4/CyLib.c **** 
2627:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:.\Generated_Source\PSoC4/CyLib.c **** *
2631:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:.\Generated_Source\PSoC4/CyLib.c **** *
2633:.\Generated_Source\PSoC4/CyLib.c **** * \return
2634:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:.\Generated_Source\PSoC4/CyLib.c **** *
2636:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:.\Generated_Source\PSoC4/CyLib.c **** {
 2223              		.loc 1 2638 0
 2224              		.cfi_startproc
 2225 0000 80B5     		push	{r7, lr}
 2226              		.cfi_def_cfa_offset 8
 2227              		.cfi_offset 7, -8
 2228              		.cfi_offset 14, -4
 2229 0002 00AF     		add	r7, sp, #0
 2230              		.cfi_def_cfa_register 7
2639:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2231              		.loc 1 2639 0
 2232 0004 034B     		ldr	r3, .L149
 2233 0006 1B68     		ldr	r3, [r3]
 2234 0008 1B02     		lsl	r3, r3, #8
 2235 000a 1B0A     		lsr	r3, r3, #8
2640:.\Generated_Source\PSoC4/CyLib.c **** }
 2236              		.loc 1 2640 0
 2237 000c 181C     		mov	r0, r3
 2238 000e BD46     		mov	sp, r7
 2239              		@ sp needed
 2240 0010 80BD     		pop	{r7, pc}
 2241              	.L150:
 2242 0012 C046     		.align	2
 2243              	.L149:
 2244 0014 18E000E0 		.word	-536813544
 2245              		.cfi_endproc
 2246              	.LFE43:
 2247              		.size	CySysTickGetValue, .-CySysTickGetValue
 2248              		.section	.text.CySysTickSetClockSource,"ax",%progbits
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 87


 2249              		.align	2
 2250              		.global	CySysTickSetClockSource
 2251              		.code	16
 2252              		.thumb_func
 2253              		.type	CySysTickSetClockSource, %function
 2254              	CySysTickSetClockSource:
 2255              	.LFB44:
2641:.\Generated_Source\PSoC4/CyLib.c **** 
2642:.\Generated_Source\PSoC4/CyLib.c **** 
2643:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:.\Generated_Source\PSoC4/CyLib.c ****     *
2648:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:.\Generated_Source\PSoC4/CyLib.c ****     *
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:.\Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:.\Generated_Source\PSoC4/CyLib.c ****     *
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:.\Generated_Source\PSoC4/CyLib.c ****     *
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
 2256              		.loc 1 2670 0
 2257              		.cfi_startproc
 2258 0000 80B5     		push	{r7, lr}
 2259              		.cfi_def_cfa_offset 8
 2260              		.cfi_offset 7, -8
 2261              		.cfi_offset 14, -4
 2262 0002 82B0     		sub	sp, sp, #8
 2263              		.cfi_def_cfa_offset 16
 2264 0004 00AF     		add	r7, sp, #0
 2265              		.cfi_def_cfa_register 7
 2266 0006 7860     		str	r0, [r7, #4]
2671:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2267              		.loc 1 2671 0
 2268 0008 7B68     		ldr	r3, [r7, #4]
 2269 000a 012B     		cmp	r3, #1
 2270 000c 06D1     		bne	.L152
2672:.\Generated_Source\PSoC4/CyLib.c ****         {
2673:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2271              		.loc 1 2673 0
 2272 000e 084B     		ldr	r3, .L154
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 88


 2273 0010 074A     		ldr	r2, .L154
 2274 0012 1268     		ldr	r2, [r2]
 2275 0014 0421     		mov	r1, #4
 2276 0016 0A43     		orr	r2, r1
 2277 0018 1A60     		str	r2, [r3]
 2278 001a 05E0     		b	.L151
 2279              	.L152:
2674:.\Generated_Source\PSoC4/CyLib.c ****         }
2675:.\Generated_Source\PSoC4/CyLib.c ****         else
2676:.\Generated_Source\PSoC4/CyLib.c ****         {
2677:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 2280              		.loc 1 2677 0
 2281 001c 044B     		ldr	r3, .L154
 2282 001e 044A     		ldr	r2, .L154
 2283 0020 1268     		ldr	r2, [r2]
 2284 0022 0421     		mov	r1, #4
 2285 0024 8A43     		bic	r2, r1
 2286 0026 1A60     		str	r2, [r3]
 2287              	.L151:
2678:.\Generated_Source\PSoC4/CyLib.c ****         }
2679:.\Generated_Source\PSoC4/CyLib.c ****     }
 2288              		.loc 1 2679 0
 2289 0028 BD46     		mov	sp, r7
 2290 002a 02B0     		add	sp, sp, #8
 2291              		@ sp needed
 2292 002c 80BD     		pop	{r7, pc}
 2293              	.L155:
 2294 002e C046     		.align	2
 2295              	.L154:
 2296 0030 10E000E0 		.word	-536813552
 2297              		.cfi_endproc
 2298              	.LFE44:
 2299              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2300              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2301              		.align	2
 2302              		.global	CySysTickGetCountFlag
 2303              		.code	16
 2304              		.thumb_func
 2305              		.type	CySysTickGetCountFlag, %function
 2306              	CySysTickGetCountFlag:
 2307              	.LFB45:
2680:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:.\Generated_Source\PSoC4/CyLib.c **** 
2682:.\Generated_Source\PSoC4/CyLib.c **** 
2683:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:.\Generated_Source\PSoC4/CyLib.c **** *
2687:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2688:.\Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:.\Generated_Source\PSoC4/CyLib.c **** *
2690:.\Generated_Source\PSoC4/CyLib.c **** * \return
2691:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:.\Generated_Source\PSoC4/CyLib.c **** *
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 89


2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:.\Generated_Source\PSoC4/CyLib.c **** {
 2308              		.loc 1 2699 0
 2309              		.cfi_startproc
 2310 0000 80B5     		push	{r7, lr}
 2311              		.cfi_def_cfa_offset 8
 2312              		.cfi_offset 7, -8
 2313              		.cfi_offset 14, -4
 2314 0002 00AF     		add	r7, sp, #0
 2315              		.cfi_def_cfa_register 7
2700:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2316              		.loc 1 2700 0
 2317 0004 034B     		ldr	r3, .L158
 2318 0006 1B68     		ldr	r3, [r3]
 2319 0008 1B0C     		lsr	r3, r3, #16
 2320 000a 0122     		mov	r2, #1
 2321 000c 1340     		and	r3, r2
2701:.\Generated_Source\PSoC4/CyLib.c **** }
 2322              		.loc 1 2701 0
 2323 000e 181C     		mov	r0, r3
 2324 0010 BD46     		mov	sp, r7
 2325              		@ sp needed
 2326 0012 80BD     		pop	{r7, pc}
 2327              	.L159:
 2328              		.align	2
 2329              	.L158:
 2330 0014 10E000E0 		.word	-536813552
 2331              		.cfi_endproc
 2332              	.LFE45:
 2333              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2334              		.section	.text.CySysTickClear,"ax",%progbits
 2335              		.align	2
 2336              		.global	CySysTickClear
 2337              		.code	16
 2338              		.thumb_func
 2339              		.type	CySysTickClear, %function
 2340              	CySysTickClear:
 2341              	.LFB46:
2702:.\Generated_Source\PSoC4/CyLib.c **** 
2703:.\Generated_Source\PSoC4/CyLib.c **** 
2704:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:.\Generated_Source\PSoC4/CyLib.c **** *
2708:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:.\Generated_Source\PSoC4/CyLib.c **** *
2710:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:.\Generated_Source\PSoC4/CyLib.c **** {
 2342              		.loc 1 2712 0
 2343              		.cfi_startproc
 2344 0000 80B5     		push	{r7, lr}
 2345              		.cfi_def_cfa_offset 8
 2346              		.cfi_offset 7, -8
 2347              		.cfi_offset 14, -4
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 90


 2348 0002 00AF     		add	r7, sp, #0
 2349              		.cfi_def_cfa_register 7
2713:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2350              		.loc 1 2713 0
 2351 0004 024B     		ldr	r3, .L161
 2352 0006 0022     		mov	r2, #0
 2353 0008 1A60     		str	r2, [r3]
2714:.\Generated_Source\PSoC4/CyLib.c **** }
 2354              		.loc 1 2714 0
 2355 000a BD46     		mov	sp, r7
 2356              		@ sp needed
 2357 000c 80BD     		pop	{r7, pc}
 2358              	.L162:
 2359 000e C046     		.align	2
 2360              	.L161:
 2361 0010 18E000E0 		.word	-536813544
 2362              		.cfi_endproc
 2363              	.LFE46:
 2364              		.size	CySysTickClear, .-CySysTickClear
 2365              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2366              		.align	2
 2367              		.global	CySysTickSetCallback
 2368              		.code	16
 2369              		.thumb_func
 2370              		.type	CySysTickSetCallback, %function
 2371              	CySysTickSetCallback:
 2372              	.LFB47:
2715:.\Generated_Source\PSoC4/CyLib.c **** 
2716:.\Generated_Source\PSoC4/CyLib.c **** 
2717:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:.\Generated_Source\PSoC4/CyLib.c **** *
2725:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:.\Generated_Source\PSoC4/CyLib.c **** *
2731:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2732:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:.\Generated_Source\PSoC4/CyLib.c **** *
2734:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2735:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:.\Generated_Source\PSoC4/CyLib.c **** *
2738:.\Generated_Source\PSoC4/CyLib.c **** * \return
2739:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2741:.\Generated_Source\PSoC4/CyLib.c **** *
2742:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 91


2745:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:.\Generated_Source\PSoC4/CyLib.c **** {
 2373              		.loc 1 2747 0
 2374              		.cfi_startproc
 2375 0000 80B5     		push	{r7, lr}
 2376              		.cfi_def_cfa_offset 8
 2377              		.cfi_offset 7, -8
 2378              		.cfi_offset 14, -4
 2379 0002 84B0     		sub	sp, sp, #16
 2380              		.cfi_def_cfa_offset 24
 2381 0004 00AF     		add	r7, sp, #0
 2382              		.cfi_def_cfa_register 7
 2383 0006 7860     		str	r0, [r7, #4]
 2384 0008 3960     		str	r1, [r7]
2748:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:.\Generated_Source\PSoC4/CyLib.c **** 
2750:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2385              		.loc 1 2750 0
 2386 000a 074B     		ldr	r3, .L165
 2387 000c 7A68     		ldr	r2, [r7, #4]
 2388 000e 9200     		lsl	r2, r2, #2
 2389 0010 D358     		ldr	r3, [r2, r3]
 2390 0012 FB60     		str	r3, [r7, #12]
2751:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2391              		.loc 1 2751 0
 2392 0014 044B     		ldr	r3, .L165
 2393 0016 7A68     		ldr	r2, [r7, #4]
 2394 0018 9200     		lsl	r2, r2, #2
 2395 001a 3968     		ldr	r1, [r7]
 2396 001c D150     		str	r1, [r2, r3]
2752:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2397              		.loc 1 2752 0
 2398 001e FB68     		ldr	r3, [r7, #12]
2753:.\Generated_Source\PSoC4/CyLib.c **** }
 2399              		.loc 1 2753 0
 2400 0020 181C     		mov	r0, r3
 2401 0022 BD46     		mov	sp, r7
 2402 0024 04B0     		add	sp, sp, #16
 2403              		@ sp needed
 2404 0026 80BD     		pop	{r7, pc}
 2405              	.L166:
 2406              		.align	2
 2407              	.L165:
 2408 0028 00000000 		.word	CySysTickCallbacks
 2409              		.cfi_endproc
 2410              	.LFE47:
 2411              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2412              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2413              		.align	2
 2414              		.global	CySysTickGetCallback
 2415              		.code	16
 2416              		.thumb_func
 2417              		.type	CySysTickGetCallback, %function
 2418              	CySysTickGetCallback:
 2419              	.LFB48:
2754:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 92


2755:.\Generated_Source\PSoC4/CyLib.c **** 
2756:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:.\Generated_Source\PSoC4/CyLib.c **** *
2760:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:.\Generated_Source\PSoC4/CyLib.c **** *
2762:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:.\Generated_Source\PSoC4/CyLib.c **** *
2765:.\Generated_Source\PSoC4/CyLib.c **** * \return
2766:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:.\Generated_Source\PSoC4/CyLib.c **** *
2769:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:.\Generated_Source\PSoC4/CyLib.c **** {
 2420              		.loc 1 2771 0
 2421              		.cfi_startproc
 2422 0000 80B5     		push	{r7, lr}
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 7, -8
 2425              		.cfi_offset 14, -4
 2426 0002 82B0     		sub	sp, sp, #8
 2427              		.cfi_def_cfa_offset 16
 2428 0004 00AF     		add	r7, sp, #0
 2429              		.cfi_def_cfa_register 7
 2430 0006 7860     		str	r0, [r7, #4]
2772:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2431              		.loc 1 2772 0
 2432 0008 034B     		ldr	r3, .L169
 2433 000a 7A68     		ldr	r2, [r7, #4]
 2434 000c 9200     		lsl	r2, r2, #2
 2435 000e D358     		ldr	r3, [r2, r3]
2773:.\Generated_Source\PSoC4/CyLib.c **** }
 2436              		.loc 1 2773 0
 2437 0010 181C     		mov	r0, r3
 2438 0012 BD46     		mov	sp, r7
 2439 0014 02B0     		add	sp, sp, #8
 2440              		@ sp needed
 2441 0016 80BD     		pop	{r7, pc}
 2442              	.L170:
 2443              		.align	2
 2444              	.L169:
 2445 0018 00000000 		.word	CySysTickCallbacks
 2446              		.cfi_endproc
 2447              	.LFE48:
 2448              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2449              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2450              		.align	2
 2451              		.code	16
 2452              		.thumb_func
 2453              		.type	CySysTickServiceCallbacks, %function
 2454              	CySysTickServiceCallbacks:
 2455              	.LFB49:
2774:.\Generated_Source\PSoC4/CyLib.c **** 
2775:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 93


2776:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:.\Generated_Source\PSoC4/CyLib.c **** *
2780:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:.\Generated_Source\PSoC4/CyLib.c **** *
2782:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:.\Generated_Source\PSoC4/CyLib.c **** {
 2456              		.loc 1 2784 0
 2457              		.cfi_startproc
 2458 0000 80B5     		push	{r7, lr}
 2459              		.cfi_def_cfa_offset 8
 2460              		.cfi_offset 7, -8
 2461              		.cfi_offset 14, -4
 2462 0002 82B0     		sub	sp, sp, #8
 2463              		.cfi_def_cfa_offset 16
 2464 0004 00AF     		add	r7, sp, #0
 2465              		.cfi_def_cfa_register 7
2785:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2786:.\Generated_Source\PSoC4/CyLib.c **** 
2787:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2466              		.loc 1 2788 0
 2467 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2468 000a 031E     		sub	r3, r0, #0
 2469 000c 012B     		cmp	r3, #1
 2470 000e 13D1     		bne	.L171
2789:.\Generated_Source\PSoC4/CyLib.c ****     {
2790:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2471              		.loc 1 2790 0
 2472 0010 0023     		mov	r3, #0
 2473 0012 7B60     		str	r3, [r7, #4]
 2474 0014 0DE0     		b	.L173
 2475              	.L175:
2791:.\Generated_Source\PSoC4/CyLib.c ****         {
2792:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2476              		.loc 1 2792 0
 2477 0016 0A4B     		ldr	r3, .L176
 2478 0018 7A68     		ldr	r2, [r7, #4]
 2479 001a 9200     		lsl	r2, r2, #2
 2480 001c D358     		ldr	r3, [r2, r3]
 2481 001e 002B     		cmp	r3, #0
 2482 0020 04D0     		beq	.L174
2793:.\Generated_Source\PSoC4/CyLib.c ****             {
2794:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2483              		.loc 1 2794 0
 2484 0022 074B     		ldr	r3, .L176
 2485 0024 7A68     		ldr	r2, [r7, #4]
 2486 0026 9200     		lsl	r2, r2, #2
 2487 0028 D358     		ldr	r3, [r2, r3]
 2488 002a 9847     		blx	r3
 2489              	.L174:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 2490              		.loc 1 2790 0 discriminator 2
 2491 002c 7B68     		ldr	r3, [r7, #4]
 2492 002e 0133     		add	r3, r3, #1
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 94


 2493 0030 7B60     		str	r3, [r7, #4]
 2494              	.L173:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 2495              		.loc 1 2790 0 is_stmt 0 discriminator 1
 2496 0032 7B68     		ldr	r3, [r7, #4]
 2497 0034 042B     		cmp	r3, #4
 2498 0036 EED9     		bls	.L175
 2499              	.L171:
2795:.\Generated_Source\PSoC4/CyLib.c ****             }
2796:.\Generated_Source\PSoC4/CyLib.c ****         }
2797:.\Generated_Source\PSoC4/CyLib.c ****     }
2798:.\Generated_Source\PSoC4/CyLib.c **** }
 2500              		.loc 1 2798 0 is_stmt 1
 2501 0038 BD46     		mov	sp, r7
 2502 003a 02B0     		add	sp, sp, #8
 2503              		@ sp needed
 2504 003c 80BD     		pop	{r7, pc}
 2505              	.L177:
 2506 003e C046     		.align	2
 2507              	.L176:
 2508 0040 00000000 		.word	CySysTickCallbacks
 2509              		.cfi_endproc
 2510              	.LFE49:
 2511              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2512              		.section	.text.CyGetUniqueId,"ax",%progbits
 2513              		.align	2
 2514              		.global	CyGetUniqueId
 2515              		.code	16
 2516              		.thumb_func
 2517              		.type	CyGetUniqueId, %function
 2518              	CyGetUniqueId:
 2519              	.LFB50:
2799:.\Generated_Source\PSoC4/CyLib.c **** 
2800:.\Generated_Source\PSoC4/CyLib.c **** 
2801:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2804:.\Generated_Source\PSoC4/CyLib.c **** *
2805:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:.\Generated_Source\PSoC4/CyLib.c **** *
2810:.\Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2811:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:.\Generated_Source\PSoC4/CyLib.c **** *
2814:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:.\Generated_Source\PSoC4/CyLib.c **** {
 2520              		.loc 1 2816 0
 2521              		.cfi_startproc
 2522 0000 80B5     		push	{r7, lr}
 2523              		.cfi_def_cfa_offset 8
 2524              		.cfi_offset 7, -8
 2525              		.cfi_offset 14, -4
 2526 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 95


 2527              		.cfi_def_cfa_offset 16
 2528 0004 00AF     		add	r7, sp, #0
 2529              		.cfi_def_cfa_register 7
 2530 0006 7860     		str	r0, [r7, #4]
2817:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2531              		.loc 1 2818 0
 2532 0008 254B     		ldr	r3, .L179
 2533 000a 1B78     		ldrb	r3, [r3]
 2534 000c DBB2     		uxtb	r3, r3
 2535 000e 1A1C     		mov	r2, r3
 2536 0010 7B68     		ldr	r3, [r7, #4]
 2537 0012 1A60     		str	r2, [r3]
2819:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2538              		.loc 1 2819 0
 2539 0014 234B     		ldr	r3, .L179+4
 2540 0016 1B78     		ldrb	r3, [r3]
 2541 0018 DBB2     		uxtb	r3, r3
 2542 001a 1A02     		lsl	r2, r3, #8
 2543 001c 7B68     		ldr	r3, [r7, #4]
 2544 001e 1B68     		ldr	r3, [r3]
 2545 0020 1A43     		orr	r2, r3
 2546 0022 7B68     		ldr	r3, [r7, #4]
 2547 0024 1A60     		str	r2, [r3]
2820:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2548              		.loc 1 2820 0
 2549 0026 204B     		ldr	r3, .L179+8
 2550 0028 1B78     		ldrb	r3, [r3]
 2551 002a DBB2     		uxtb	r3, r3
 2552 002c 1A04     		lsl	r2, r3, #16
 2553 002e 7B68     		ldr	r3, [r7, #4]
 2554 0030 1B68     		ldr	r3, [r3]
 2555 0032 1A43     		orr	r2, r3
 2556 0034 7B68     		ldr	r3, [r7, #4]
 2557 0036 1A60     		str	r2, [r3]
2821:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2558              		.loc 1 2821 0
 2559 0038 1C4B     		ldr	r3, .L179+12
 2560 003a 1B78     		ldrb	r3, [r3]
 2561 003c DBB2     		uxtb	r3, r3
 2562 003e 1A06     		lsl	r2, r3, #24
 2563 0040 7B68     		ldr	r3, [r7, #4]
 2564 0042 1B68     		ldr	r3, [r3]
 2565 0044 1A43     		orr	r2, r3
 2566 0046 7B68     		ldr	r3, [r7, #4]
 2567 0048 1A60     		str	r2, [r3]
2822:.\Generated_Source\PSoC4/CyLib.c **** 
2823:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2568              		.loc 1 2823 0
 2569 004a 7B68     		ldr	r3, [r7, #4]
 2570 004c 0433     		add	r3, r3, #4
 2571 004e 184A     		ldr	r2, .L179+16
 2572 0050 1278     		ldrb	r2, [r2]
 2573 0052 D2B2     		uxtb	r2, r2
 2574 0054 1A60     		str	r2, [r3]
2824:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2575              		.loc 1 2824 0
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 96


 2576 0056 174B     		ldr	r3, .L179+20
 2577 0058 1B78     		ldrb	r3, [r3]
 2578 005a DBB2     		uxtb	r3, r3
 2579 005c 1902     		lsl	r1, r3, #8
 2580 005e 7B68     		ldr	r3, [r7, #4]
 2581 0060 0433     		add	r3, r3, #4
 2582 0062 7A68     		ldr	r2, [r7, #4]
 2583 0064 0432     		add	r2, r2, #4
 2584 0066 1268     		ldr	r2, [r2]
 2585 0068 0A43     		orr	r2, r1
 2586 006a 1A60     		str	r2, [r3]
2825:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2587              		.loc 1 2825 0
 2588 006c 124B     		ldr	r3, .L179+24
 2589 006e 1B78     		ldrb	r3, [r3]
 2590 0070 DBB2     		uxtb	r3, r3
 2591 0072 1904     		lsl	r1, r3, #16
 2592 0074 7B68     		ldr	r3, [r7, #4]
 2593 0076 0433     		add	r3, r3, #4
 2594 0078 7A68     		ldr	r2, [r7, #4]
 2595 007a 0432     		add	r2, r2, #4
 2596 007c 1268     		ldr	r2, [r2]
 2597 007e 0A43     		orr	r2, r1
 2598 0080 1A60     		str	r2, [r3]
2826:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2599              		.loc 1 2826 0
 2600 0082 0E4B     		ldr	r3, .L179+28
 2601 0084 1B78     		ldrb	r3, [r3]
 2602 0086 DBB2     		uxtb	r3, r3
 2603 0088 1906     		lsl	r1, r3, #24
 2604 008a 7B68     		ldr	r3, [r7, #4]
 2605 008c 0433     		add	r3, r3, #4
 2606 008e 7A68     		ldr	r2, [r7, #4]
 2607 0090 0432     		add	r2, r2, #4
 2608 0092 1268     		ldr	r2, [r2]
 2609 0094 0A43     		orr	r2, r1
 2610 0096 1A60     		str	r2, [r3]
2827:.\Generated_Source\PSoC4/CyLib.c **** #else
2828:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:.\Generated_Source\PSoC4/CyLib.c **** 
2833:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:.\Generated_Source\PSoC4/CyLib.c **** }
 2611              		.loc 1 2838 0
 2612 0098 BD46     		mov	sp, r7
 2613 009a 02B0     		add	sp, sp, #8
 2614              		@ sp needed
 2615 009c 80BD     		pop	{r7, pc}
 2616              	.L180:
 2617 009e C046     		.align	2
 2618              	.L179:
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 97


 2619 00a0 78F1FF0F 		.word	268431736
 2620 00a4 79F1FF0F 		.word	268431737
 2621 00a8 7AF1FF0F 		.word	268431738
 2622 00ac 7BF1FF0F 		.word	268431739
 2623 00b0 7CF1FF0F 		.word	268431740
 2624 00b4 7DF1FF0F 		.word	268431741
 2625 00b8 7EF1FF0F 		.word	268431742
 2626 00bc 7FF1FF0F 		.word	268431743
 2627              		.cfi_endproc
 2628              	.LFE50:
 2629              		.size	CyGetUniqueId, .-CyGetUniqueId
 2630              		.text
 2631              	.Letext0:
 2632              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2633              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2634              		.section	.debug_info,"",%progbits
 2635              	.Ldebug_info0:
 2636 0000 81090000 		.4byte	0x981
 2637 0004 0400     		.2byte	0x4
 2638 0006 00000000 		.4byte	.Ldebug_abbrev0
 2639 000a 04       		.byte	0x4
 2640 000b 01       		.uleb128 0x1
 2641 000c D6050000 		.4byte	.LASF104
 2642 0010 01       		.byte	0x1
 2643 0011 D9020000 		.4byte	.LASF105
 2644 0015 52050000 		.4byte	.LASF106
 2645 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2646 001d 00000000 		.4byte	0
 2647 0021 00000000 		.4byte	.Ldebug_line0
 2648 0025 02       		.uleb128 0x2
 2649 0026 01       		.byte	0x1
 2650 0027 06       		.byte	0x6
 2651 0028 C8000000 		.4byte	.LASF0
 2652 002c 02       		.uleb128 0x2
 2653 002d 01       		.byte	0x1
 2654 002e 08       		.byte	0x8
 2655 002f 31040000 		.4byte	.LASF1
 2656 0033 02       		.uleb128 0x2
 2657 0034 02       		.byte	0x2
 2658 0035 05       		.byte	0x5
 2659 0036 3F040000 		.4byte	.LASF2
 2660 003a 02       		.uleb128 0x2
 2661 003b 02       		.byte	0x2
 2662 003c 07       		.byte	0x7
 2663 003d 9F020000 		.4byte	.LASF3
 2664 0041 02       		.uleb128 0x2
 2665 0042 04       		.byte	0x4
 2666 0043 05       		.byte	0x5
 2667 0044 07010000 		.4byte	.LASF4
 2668 0048 02       		.uleb128 0x2
 2669 0049 04       		.byte	0x4
 2670 004a 07       		.byte	0x7
 2671 004b 29020000 		.4byte	.LASF5
 2672 004f 02       		.uleb128 0x2
 2673 0050 08       		.byte	0x8
 2674 0051 05       		.byte	0x5
 2675 0052 BA000000 		.4byte	.LASF6
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 98


 2676 0056 02       		.uleb128 0x2
 2677 0057 08       		.byte	0x8
 2678 0058 07       		.byte	0x7
 2679 0059 54000000 		.4byte	.LASF7
 2680 005d 03       		.uleb128 0x3
 2681 005e 04       		.byte	0x4
 2682 005f 05       		.byte	0x5
 2683 0060 696E7400 		.ascii	"int\000"
 2684 0064 02       		.uleb128 0x2
 2685 0065 04       		.byte	0x4
 2686 0066 07       		.byte	0x7
 2687 0067 0D020000 		.4byte	.LASF8
 2688 006b 04       		.uleb128 0x4
 2689 006c 27010000 		.4byte	.LASF9
 2690 0070 02       		.byte	0x2
 2691 0071 9801     		.2byte	0x198
 2692 0073 2C000000 		.4byte	0x2c
 2693 0077 04       		.uleb128 0x4
 2694 0078 0F000000 		.4byte	.LASF10
 2695 007c 02       		.byte	0x2
 2696 007d 9901     		.2byte	0x199
 2697 007f 3A000000 		.4byte	0x3a
 2698 0083 04       		.uleb128 0x4
 2699 0084 6A010000 		.4byte	.LASF11
 2700 0088 02       		.byte	0x2
 2701 0089 9A01     		.2byte	0x19a
 2702 008b 48000000 		.4byte	0x48
 2703 008f 02       		.uleb128 0x2
 2704 0090 04       		.byte	0x4
 2705 0091 04       		.byte	0x4
 2706 0092 D8030000 		.4byte	.LASF12
 2707 0096 02       		.uleb128 0x2
 2708 0097 08       		.byte	0x8
 2709 0098 04       		.byte	0x4
 2710 0099 46010000 		.4byte	.LASF13
 2711 009d 02       		.uleb128 0x2
 2712 009e 01       		.byte	0x1
 2713 009f 08       		.byte	0x8
 2714 00a0 89040000 		.4byte	.LASF14
 2715 00a4 04       		.uleb128 0x4
 2716 00a5 CD050000 		.4byte	.LASF15
 2717 00a9 02       		.byte	0x2
 2718 00aa 3A02     		.2byte	0x23a
 2719 00ac 48000000 		.4byte	0x48
 2720 00b0 04       		.uleb128 0x4
 2721 00b1 1B040000 		.4byte	.LASF16
 2722 00b5 02       		.byte	0x2
 2723 00b6 4202     		.2byte	0x242
 2724 00b8 BC000000 		.4byte	0xbc
 2725 00bc 05       		.uleb128 0x5
 2726 00bd 6B000000 		.4byte	0x6b
 2727 00c1 04       		.uleb128 0x4
 2728 00c2 2A030000 		.4byte	.LASF17
 2729 00c6 02       		.byte	0x2
 2730 00c7 4402     		.2byte	0x244
 2731 00c9 CD000000 		.4byte	0xcd
 2732 00cd 05       		.uleb128 0x5
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 99


 2733 00ce 83000000 		.4byte	0x83
 2734 00d2 04       		.uleb128 0x4
 2735 00d3 8E040000 		.4byte	.LASF18
 2736 00d7 02       		.byte	0x2
 2737 00d8 5402     		.2byte	0x254
 2738 00da DE000000 		.4byte	0xde
 2739 00de 06       		.uleb128 0x6
 2740 00df 04       		.byte	0x4
 2741 00e0 E4000000 		.4byte	0xe4
 2742 00e4 07       		.uleb128 0x7
 2743 00e5 02       		.uleb128 0x2
 2744 00e6 04       		.byte	0x4
 2745 00e7 07       		.byte	0x7
 2746 00e8 4C030000 		.4byte	.LASF19
 2747 00ec 08       		.uleb128 0x8
 2748 00ed ED030000 		.4byte	.LASF20
 2749 00f1 03       		.byte	0x3
 2750 00f2 F3       		.byte	0xf3
 2751 00f3 DE000000 		.4byte	0xde
 2752 00f7 09       		.uleb128 0x9
 2753 00f8 83000000 		.4byte	0x83
 2754 00fc 07010000 		.4byte	0x107
 2755 0100 0A       		.uleb128 0xa
 2756 0101 E5000000 		.4byte	0xe5
 2757 0105 03       		.byte	0x3
 2758 0106 00       		.byte	0
 2759 0107 0B       		.uleb128 0xb
 2760 0108 64060000 		.4byte	.LASF21
 2761 010c 01       		.byte	0x1
 2762 010d 68       		.byte	0x68
 2763 010e 00000000 		.4byte	.LFB2
 2764 0112 1C000000 		.4byte	.LFE2-.LFB2
 2765 0116 01       		.uleb128 0x1
 2766 0117 9C       		.byte	0x9c
 2767 0118 0B       		.uleb128 0xb
 2768 0119 56020000 		.4byte	.LASF22
 2769 011d 01       		.byte	0x1
 2770 011e 88       		.byte	0x88
 2771 011f 00000000 		.4byte	.LFB3
 2772 0123 18000000 		.4byte	.LFE3-.LFB3
 2773 0127 01       		.uleb128 0x1
 2774 0128 9C       		.byte	0x9c
 2775 0129 0C       		.uleb128 0xc
 2776 012a 1F000000 		.4byte	.LASF26
 2777 012e 01       		.byte	0x1
 2778 012f AA01     		.2byte	0x1aa
 2779 0131 00000000 		.4byte	.LFB4
 2780 0135 48000000 		.4byte	.LFE4-.LFB4
 2781 0139 01       		.uleb128 0x1
 2782 013a 9C       		.byte	0x9c
 2783 013b 6D010000 		.4byte	0x16d
 2784 013f 0D       		.uleb128 0xd
 2785 0140 67040000 		.4byte	.LASF28
 2786 0144 01       		.byte	0x1
 2787 0145 AA01     		.2byte	0x1aa
 2788 0147 83000000 		.4byte	0x83
 2789 014b 02       		.uleb128 0x2
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 100


 2790 014c 91       		.byte	0x91
 2791 014d 64       		.sleb128 -28
 2792 014e 0E       		.uleb128 0xe
 2793 014f E5000000 		.4byte	.LASF23
 2794 0153 01       		.byte	0x1
 2795 0154 AC01     		.2byte	0x1ac
 2796 0156 6B000000 		.4byte	0x6b
 2797 015a 02       		.uleb128 0x2
 2798 015b 91       		.byte	0x91
 2799 015c 6F       		.sleb128 -17
 2800 015d 0E       		.uleb128 0xe
 2801 015e 82060000 		.4byte	.LASF24
 2802 0162 01       		.byte	0x1
 2803 0163 AD01     		.2byte	0x1ad
 2804 0165 83000000 		.4byte	0x83
 2805 0169 02       		.uleb128 0x2
 2806 016a 91       		.byte	0x91
 2807 016b 68       		.sleb128 -24
 2808 016c 00       		.byte	0
 2809 016d 0F       		.uleb128 0xf
 2810 016e 93010000 		.4byte	.LASF34
 2811 0172 01       		.byte	0x1
 2812 0173 CF01     		.2byte	0x1cf
 2813 0175 83000000 		.4byte	0x83
 2814 0179 00000000 		.4byte	.LFB5
 2815 017d 34000000 		.4byte	.LFE5-.LFB5
 2816 0181 01       		.uleb128 0x1
 2817 0182 9C       		.byte	0x9c
 2818 0183 A6010000 		.4byte	0x1a6
 2819 0187 0E       		.uleb128 0xe
 2820 0188 E5000000 		.4byte	.LASF23
 2821 018c 01       		.byte	0x1
 2822 018d D101     		.2byte	0x1d1
 2823 018f 6B000000 		.4byte	0x6b
 2824 0193 02       		.uleb128 0x2
 2825 0194 91       		.byte	0x91
 2826 0195 6F       		.sleb128 -17
 2827 0196 0E       		.uleb128 0xe
 2828 0197 80030000 		.4byte	.LASF25
 2829 019b 01       		.byte	0x1
 2830 019c D201     		.2byte	0x1d2
 2831 019e 83000000 		.4byte	0x83
 2832 01a2 02       		.uleb128 0x2
 2833 01a3 91       		.byte	0x91
 2834 01a4 68       		.sleb128 -24
 2835 01a5 00       		.byte	0
 2836 01a6 0C       		.uleb128 0xc
 2837 01a7 AB040000 		.4byte	.LASF27
 2838 01ab 01       		.byte	0x1
 2839 01ac 0602     		.2byte	0x206
 2840 01ae 00000000 		.4byte	.LFB6
 2841 01b2 44000000 		.4byte	.LFE6-.LFB6
 2842 01b6 01       		.uleb128 0x1
 2843 01b7 9C       		.byte	0x9c
 2844 01b8 DB010000 		.4byte	0x1db
 2845 01bc 0D       		.uleb128 0xd
 2846 01bd B1050000 		.4byte	.LASF29
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 101


 2847 01c1 01       		.byte	0x1
 2848 01c2 0602     		.2byte	0x206
 2849 01c4 83000000 		.4byte	0x83
 2850 01c8 02       		.uleb128 0x2
 2851 01c9 91       		.byte	0x91
 2852 01ca 64       		.sleb128 -28
 2853 01cb 0E       		.uleb128 0xe
 2854 01cc E5000000 		.4byte	.LASF23
 2855 01d0 01       		.byte	0x1
 2856 01d1 0802     		.2byte	0x208
 2857 01d3 6B000000 		.4byte	0x6b
 2858 01d7 02       		.uleb128 0x2
 2859 01d8 91       		.byte	0x91
 2860 01d9 6F       		.sleb128 -17
 2861 01da 00       		.byte	0
 2862 01db 0C       		.uleb128 0xc
 2863 01dc 03030000 		.4byte	.LASF30
 2864 01e0 01       		.byte	0x1
 2865 01e1 4002     		.2byte	0x240
 2866 01e3 00000000 		.4byte	.LFB7
 2867 01e7 98000000 		.4byte	.LFE7-.LFB7
 2868 01eb 01       		.uleb128 0x1
 2869 01ec 9C       		.byte	0x9c
 2870 01ed 2E020000 		.4byte	0x22e
 2871 01f1 0D       		.uleb128 0xd
 2872 01f2 D4000000 		.4byte	.LASF31
 2873 01f6 01       		.byte	0x1
 2874 01f7 4002     		.2byte	0x240
 2875 01f9 83000000 		.4byte	0x83
 2876 01fd 02       		.uleb128 0x2
 2877 01fe 91       		.byte	0x91
 2878 01ff 4C       		.sleb128 -52
 2879 0200 0E       		.uleb128 0xe
 2880 0201 6B000000 		.4byte	.LASF32
 2881 0205 01       		.byte	0x1
 2882 0206 4302     		.2byte	0x243
 2883 0208 3E020000 		.4byte	0x23e
 2884 020c 02       		.uleb128 0x2
 2885 020d 91       		.byte	0x91
 2886 020e 64       		.sleb128 -28
 2887 020f 0E       		.uleb128 0xe
 2888 0210 1D010000 		.4byte	.LASF33
 2889 0214 01       		.byte	0x1
 2890 0215 4402     		.2byte	0x244
 2891 0217 43020000 		.4byte	0x243
 2892 021b 02       		.uleb128 0x2
 2893 021c 91       		.byte	0x91
 2894 021d 54       		.sleb128 -44
 2895 021e 0E       		.uleb128 0xe
 2896 021f E5000000 		.4byte	.LASF23
 2897 0223 01       		.byte	0x1
 2898 0224 5502     		.2byte	0x255
 2899 0226 6B000000 		.4byte	0x6b
 2900 022a 02       		.uleb128 0x2
 2901 022b 91       		.byte	0x91
 2902 022c 6F       		.sleb128 -17
 2903 022d 00       		.byte	0
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 102


 2904 022e 09       		.uleb128 0x9
 2905 022f 83000000 		.4byte	0x83
 2906 0233 3E020000 		.4byte	0x23e
 2907 0237 0A       		.uleb128 0xa
 2908 0238 E5000000 		.4byte	0xe5
 2909 023c 01       		.byte	0x1
 2910 023d 00       		.byte	0
 2911 023e 05       		.uleb128 0x5
 2912 023f 2E020000 		.4byte	0x22e
 2913 0243 05       		.uleb128 0x5
 2914 0244 F7000000 		.4byte	0xf7
 2915 0248 0F       		.uleb128 0xf
 2916 0249 71040000 		.4byte	.LASF35
 2917 024d 01       		.byte	0x1
 2918 024e D203     		.2byte	0x3d2
 2919 0250 A4000000 		.4byte	0xa4
 2920 0254 00000000 		.4byte	.LFB8
 2921 0258 74000000 		.4byte	.LFE8-.LFB8
 2922 025c 01       		.uleb128 0x1
 2923 025d 9C       		.byte	0x9c
 2924 025e 81020000 		.4byte	0x281
 2925 0262 0D       		.uleb128 0xd
 2926 0263 A7050000 		.4byte	.LASF36
 2927 0267 01       		.byte	0x1
 2928 0268 D203     		.2byte	0x3d2
 2929 026a 83000000 		.4byte	0x83
 2930 026e 02       		.uleb128 0x2
 2931 026f 91       		.byte	0x91
 2932 0270 6C       		.sleb128 -20
 2933 0271 0E       		.uleb128 0xe
 2934 0272 3F030000 		.4byte	.LASF37
 2935 0276 01       		.byte	0x1
 2936 0277 D403     		.2byte	0x3d4
 2937 0279 A4000000 		.4byte	0xa4
 2938 027d 02       		.uleb128 0x2
 2939 027e 91       		.byte	0x91
 2940 027f 74       		.sleb128 -12
 2941 0280 00       		.byte	0
 2942 0281 10       		.uleb128 0x10
 2943 0282 34050000 		.4byte	.LASF38
 2944 0286 01       		.byte	0x1
 2945 0287 0504     		.2byte	0x405
 2946 0289 00000000 		.4byte	.LFB9
 2947 028d 2C000000 		.4byte	.LFE9-.LFB9
 2948 0291 01       		.uleb128 0x1
 2949 0292 9C       		.byte	0x9c
 2950 0293 11       		.uleb128 0x11
 2951 0294 71010000 		.4byte	.LASF39
 2952 0298 01       		.byte	0x1
 2953 0299 2504     		.2byte	0x425
 2954 029b 83000000 		.4byte	0x83
 2955 029f 00000000 		.4byte	.LFB10
 2956 02a3 20000000 		.4byte	.LFE10-.LFB10
 2957 02a7 01       		.uleb128 0x1
 2958 02a8 9C       		.byte	0x9c
 2959 02a9 BD020000 		.4byte	0x2bd
 2960 02ad 0E       		.uleb128 0xe
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 103


 2961 02ae B6060000 		.4byte	.LASF40
 2962 02b2 01       		.byte	0x1
 2963 02b3 2704     		.2byte	0x427
 2964 02b5 83000000 		.4byte	0x83
 2965 02b9 02       		.uleb128 0x2
 2966 02ba 91       		.byte	0x91
 2967 02bb 74       		.sleb128 -12
 2968 02bc 00       		.byte	0
 2969 02bd 0C       		.uleb128 0xc
 2970 02be B9050000 		.4byte	.LASF41
 2971 02c2 01       		.byte	0x1
 2972 02c3 4D04     		.2byte	0x44d
 2973 02c5 00000000 		.4byte	.LFB11
 2974 02c9 58000000 		.4byte	.LFE11-.LFB11
 2975 02cd 01       		.uleb128 0x1
 2976 02ce 9C       		.byte	0x9c
 2977 02cf F2020000 		.4byte	0x2f2
 2978 02d3 0D       		.uleb128 0xd
 2979 02d4 B1050000 		.4byte	.LASF29
 2980 02d8 01       		.byte	0x1
 2981 02d9 4D04     		.2byte	0x44d
 2982 02db 83000000 		.4byte	0x83
 2983 02df 02       		.uleb128 0x2
 2984 02e0 91       		.byte	0x91
 2985 02e1 64       		.sleb128 -28
 2986 02e2 0E       		.uleb128 0xe
 2987 02e3 E5000000 		.4byte	.LASF23
 2988 02e7 01       		.byte	0x1
 2989 02e8 4F04     		.2byte	0x44f
 2990 02ea 6B000000 		.4byte	0x6b
 2991 02ee 02       		.uleb128 0x2
 2992 02ef 91       		.byte	0x91
 2993 02f0 6F       		.sleb128 -17
 2994 02f1 00       		.byte	0
 2995 02f2 0C       		.uleb128 0xc
 2996 02f3 DE030000 		.4byte	.LASF42
 2997 02f7 01       		.byte	0x1
 2998 02f8 B107     		.2byte	0x7b1
 2999 02fa 00000000 		.4byte	.LFB12
 3000 02fe 60000000 		.4byte	.LFE12-.LFB12
 3001 0302 01       		.uleb128 0x1
 3002 0303 9C       		.byte	0x9c
 3003 0304 18030000 		.4byte	0x318
 3004 0308 0D       		.uleb128 0xd
 3005 0309 20040000 		.4byte	.LASF43
 3006 030d 01       		.byte	0x1
 3007 030e B107     		.2byte	0x7b1
 3008 0310 83000000 		.4byte	0x83
 3009 0314 02       		.uleb128 0x2
 3010 0315 91       		.byte	0x91
 3011 0316 74       		.sleb128 -12
 3012 0317 00       		.byte	0
 3013 0318 10       		.uleb128 0x10
 3014 0319 15050000 		.4byte	.LASF44
 3015 031d 01       		.byte	0x1
 3016 031e CF07     		.2byte	0x7cf
 3017 0320 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 104


 3018 0324 28000000 		.4byte	.LFE13-.LFB13
 3019 0328 01       		.uleb128 0x1
 3020 0329 9C       		.byte	0x9c
 3021 032a 12       		.uleb128 0x12
 3022 032b 3B020000 		.4byte	.LASF84
 3023 032f 01       		.byte	0x1
 3024 0330 E107     		.2byte	0x7e1
 3025 0332 83000000 		.4byte	0x83
 3026 0336 00000000 		.4byte	.LFB14
 3027 033a 18000000 		.4byte	.LFE14-.LFB14
 3028 033e 01       		.uleb128 0x1
 3029 033f 9C       		.byte	0x9c
 3030 0340 10       		.uleb128 0x10
 3031 0341 53010000 		.4byte	.LASF45
 3032 0345 01       		.byte	0x1
 3033 0346 F107     		.2byte	0x7f1
 3034 0348 00000000 		.4byte	.LFB15
 3035 034c 14000000 		.4byte	.LFE15-.LFB15
 3036 0350 01       		.uleb128 0x1
 3037 0351 9C       		.byte	0x9c
 3038 0352 11       		.uleb128 0x11
 3039 0353 8B020000 		.4byte	.LASF46
 3040 0357 01       		.byte	0x1
 3041 0358 0B08     		.2byte	0x80b
 3042 035a 83000000 		.4byte	0x83
 3043 035e 00000000 		.4byte	.LFB16
 3044 0362 30000000 		.4byte	.LFE16-.LFB16
 3045 0366 01       		.uleb128 0x1
 3046 0367 9C       		.byte	0x9c
 3047 0368 8B030000 		.4byte	0x38b
 3048 036c 0D       		.uleb128 0xd
 3049 036d 82040000 		.4byte	.LASF47
 3050 0371 01       		.byte	0x1
 3051 0372 0B08     		.2byte	0x80b
 3052 0374 83000000 		.4byte	0x83
 3053 0378 02       		.uleb128 0x2
 3054 0379 91       		.byte	0x91
 3055 037a 6C       		.sleb128 -20
 3056 037b 0E       		.uleb128 0xe
 3057 037c 3F030000 		.4byte	.LASF37
 3058 0380 01       		.byte	0x1
 3059 0381 0D08     		.2byte	0x80d
 3060 0383 83000000 		.4byte	0x83
 3061 0387 02       		.uleb128 0x2
 3062 0388 91       		.byte	0x91
 3063 0389 74       		.sleb128 -12
 3064 038a 00       		.byte	0
 3065 038b 11       		.uleb128 0x11
 3066 038c 46000000 		.4byte	.LASF48
 3067 0390 01       		.byte	0x1
 3068 0391 2208     		.2byte	0x822
 3069 0393 83000000 		.4byte	0x83
 3070 0397 00000000 		.4byte	.LFB17
 3071 039b 24000000 		.4byte	.LFE17-.LFB17
 3072 039f 01       		.uleb128 0x1
 3073 03a0 9C       		.byte	0x9c
 3074 03a1 B5030000 		.4byte	0x3b5
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 105


 3075 03a5 0E       		.uleb128 0xe
 3076 03a6 16000000 		.4byte	.LASF49
 3077 03aa 01       		.byte	0x1
 3078 03ab 2408     		.2byte	0x824
 3079 03ad 83000000 		.4byte	0x83
 3080 03b1 02       		.uleb128 0x2
 3081 03b2 91       		.byte	0x91
 3082 03b3 74       		.sleb128 -12
 3083 03b4 00       		.byte	0
 3084 03b5 13       		.uleb128 0x13
 3085 03b6 76000000 		.4byte	.LASF50
 3086 03ba 01       		.byte	0x1
 3087 03bb 3908     		.2byte	0x839
 3088 03bd 00000000 		.4byte	.LFB18
 3089 03c1 18000000 		.4byte	.LFE18-.LFB18
 3090 03c5 01       		.uleb128 0x1
 3091 03c6 9C       		.byte	0x9c
 3092 03c7 DB030000 		.4byte	0x3db
 3093 03cb 0D       		.uleb128 0xd
 3094 03cc 8E010000 		.4byte	.LASF51
 3095 03d0 01       		.byte	0x1
 3096 03d1 3908     		.2byte	0x839
 3097 03d3 83000000 		.4byte	0x83
 3098 03d7 02       		.uleb128 0x2
 3099 03d8 91       		.byte	0x91
 3100 03d9 74       		.sleb128 -12
 3101 03da 00       		.byte	0
 3102 03db 0F       		.uleb128 0xf
 3103 03dc 18030000 		.4byte	.LASF52
 3104 03e0 01       		.byte	0x1
 3105 03e1 5208     		.2byte	0x852
 3106 03e3 D2000000 		.4byte	0xd2
 3107 03e7 00000000 		.4byte	.LFB19
 3108 03eb 48000000 		.4byte	.LFE19-.LFB19
 3109 03ef 01       		.uleb128 0x1
 3110 03f0 9C       		.byte	0x9c
 3111 03f1 32040000 		.4byte	0x432
 3112 03f5 0D       		.uleb128 0xd
 3113 03f6 87010000 		.4byte	.LASF53
 3114 03fa 01       		.byte	0x1
 3115 03fb 5208     		.2byte	0x852
 3116 03fd 6B000000 		.4byte	0x6b
 3117 0401 02       		.uleb128 0x2
 3118 0402 91       		.byte	0x91
 3119 0403 6F       		.sleb128 -17
 3120 0404 0D       		.uleb128 0xd
 3121 0405 78030000 		.4byte	.LASF54
 3122 0409 01       		.byte	0x1
 3123 040a 5208     		.2byte	0x852
 3124 040c D2000000 		.4byte	0xd2
 3125 0410 02       		.uleb128 0x2
 3126 0411 91       		.byte	0x91
 3127 0412 68       		.sleb128 -24
 3128 0413 0E       		.uleb128 0xe
 3129 0414 38000000 		.4byte	.LASF55
 3130 0418 01       		.byte	0x1
 3131 0419 5408     		.2byte	0x854
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 106


 3132 041b D2000000 		.4byte	0xd2
 3133 041f 02       		.uleb128 0x2
 3134 0420 91       		.byte	0x91
 3135 0421 70       		.sleb128 -16
 3136 0422 0E       		.uleb128 0xe
 3137 0423 00000000 		.4byte	.LASF56
 3138 0427 01       		.byte	0x1
 3139 0428 5508     		.2byte	0x855
 3140 042a 32040000 		.4byte	0x432
 3141 042e 02       		.uleb128 0x2
 3142 042f 91       		.byte	0x91
 3143 0430 74       		.sleb128 -12
 3144 0431 00       		.byte	0
 3145 0432 06       		.uleb128 0x6
 3146 0433 04       		.byte	0x4
 3147 0434 D2000000 		.4byte	0xd2
 3148 0438 0F       		.uleb128 0xf
 3149 0439 55040000 		.4byte	.LASF57
 3150 043d 01       		.byte	0x1
 3151 043e 7408     		.2byte	0x874
 3152 0440 D2000000 		.4byte	0xd2
 3153 0444 00000000 		.4byte	.LFB20
 3154 0448 34000000 		.4byte	.LFE20-.LFB20
 3155 044c 01       		.uleb128 0x1
 3156 044d 9C       		.byte	0x9c
 3157 044e 71040000 		.4byte	0x471
 3158 0452 0D       		.uleb128 0xd
 3159 0453 87010000 		.4byte	.LASF53
 3160 0457 01       		.byte	0x1
 3161 0458 7408     		.2byte	0x874
 3162 045a 6B000000 		.4byte	0x6b
 3163 045e 02       		.uleb128 0x2
 3164 045f 91       		.byte	0x91
 3165 0460 6F       		.sleb128 -17
 3166 0461 0E       		.uleb128 0xe
 3167 0462 00000000 		.4byte	.LASF56
 3168 0466 01       		.byte	0x1
 3169 0467 7608     		.2byte	0x876
 3170 0469 32040000 		.4byte	0x432
 3171 046d 02       		.uleb128 0x2
 3172 046e 91       		.byte	0x91
 3173 046f 74       		.sleb128 -12
 3174 0470 00       		.byte	0
 3175 0471 0F       		.uleb128 0xf
 3176 0472 CA020000 		.4byte	.LASF58
 3177 0476 01       		.byte	0x1
 3178 0477 8A08     		.2byte	0x88a
 3179 0479 D2000000 		.4byte	0xd2
 3180 047d 00000000 		.4byte	.LFB21
 3181 0481 4C000000 		.4byte	.LFE21-.LFB21
 3182 0485 01       		.uleb128 0x1
 3183 0486 9C       		.byte	0x9c
 3184 0487 C8040000 		.4byte	0x4c8
 3185 048b 0D       		.uleb128 0xd
 3186 048c 87010000 		.4byte	.LASF53
 3187 0490 01       		.byte	0x1
 3188 0491 8A08     		.2byte	0x88a
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 107


 3189 0493 6B000000 		.4byte	0x6b
 3190 0497 02       		.uleb128 0x2
 3191 0498 91       		.byte	0x91
 3192 0499 6F       		.sleb128 -17
 3193 049a 0D       		.uleb128 0xd
 3194 049b 78030000 		.4byte	.LASF54
 3195 049f 01       		.byte	0x1
 3196 04a0 8A08     		.2byte	0x88a
 3197 04a2 D2000000 		.4byte	0xd2
 3198 04a6 02       		.uleb128 0x2
 3199 04a7 91       		.byte	0x91
 3200 04a8 68       		.sleb128 -24
 3201 04a9 0E       		.uleb128 0xe
 3202 04aa 38000000 		.4byte	.LASF55
 3203 04ae 01       		.byte	0x1
 3204 04af 8C08     		.2byte	0x88c
 3205 04b1 D2000000 		.4byte	0xd2
 3206 04b5 02       		.uleb128 0x2
 3207 04b6 91       		.byte	0x91
 3208 04b7 70       		.sleb128 -16
 3209 04b8 0E       		.uleb128 0xe
 3210 04b9 00000000 		.4byte	.LASF56
 3211 04bd 01       		.byte	0x1
 3212 04be 8D08     		.2byte	0x88d
 3213 04c0 32040000 		.4byte	0x432
 3214 04c4 02       		.uleb128 0x2
 3215 04c5 91       		.byte	0x91
 3216 04c6 74       		.sleb128 -12
 3217 04c7 00       		.byte	0
 3218 04c8 0F       		.uleb128 0xf
 3219 04c9 FF030000 		.4byte	.LASF59
 3220 04cd 01       		.byte	0x1
 3221 04ce A608     		.2byte	0x8a6
 3222 04d0 D2000000 		.4byte	0xd2
 3223 04d4 00000000 		.4byte	.LFB22
 3224 04d8 36000000 		.4byte	.LFE22-.LFB22
 3225 04dc 01       		.uleb128 0x1
 3226 04dd 9C       		.byte	0x9c
 3227 04de 01050000 		.4byte	0x501
 3228 04e2 0D       		.uleb128 0xd
 3229 04e3 87010000 		.4byte	.LASF53
 3230 04e7 01       		.byte	0x1
 3231 04e8 A608     		.2byte	0x8a6
 3232 04ea 6B000000 		.4byte	0x6b
 3233 04ee 02       		.uleb128 0x2
 3234 04ef 91       		.byte	0x91
 3235 04f0 6F       		.sleb128 -17
 3236 04f1 0E       		.uleb128 0xe
 3237 04f2 00000000 		.4byte	.LASF56
 3238 04f6 01       		.byte	0x1
 3239 04f7 A808     		.2byte	0x8a8
 3240 04f9 32040000 		.4byte	0x432
 3241 04fd 02       		.uleb128 0x2
 3242 04fe 91       		.byte	0x91
 3243 04ff 74       		.sleb128 -12
 3244 0500 00       		.byte	0
 3245 0501 0C       		.uleb128 0xc
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 108


 3246 0502 C7030000 		.4byte	.LASF60
 3247 0506 01       		.byte	0x1
 3248 0507 B908     		.2byte	0x8b9
 3249 0509 00000000 		.4byte	.LFB23
 3250 050d A8000000 		.4byte	.LFE23-.LFB23
 3251 0511 01       		.uleb128 0x1
 3252 0512 9C       		.byte	0x9c
 3253 0513 63050000 		.4byte	0x563
 3254 0517 0D       		.uleb128 0xd
 3255 0518 87010000 		.4byte	.LASF53
 3256 051c 01       		.byte	0x1
 3257 051d B908     		.2byte	0x8b9
 3258 051f 6B000000 		.4byte	0x6b
 3259 0523 02       		.uleb128 0x2
 3260 0524 91       		.byte	0x91
 3261 0525 5F       		.sleb128 -33
 3262 0526 0D       		.uleb128 0xd
 3263 0527 FA020000 		.4byte	.LASF61
 3264 052b 01       		.byte	0x1
 3265 052c B908     		.2byte	0x8b9
 3266 052e 6B000000 		.4byte	0x6b
 3267 0532 02       		.uleb128 0x2
 3268 0533 91       		.byte	0x91
 3269 0534 5E       		.sleb128 -34
 3270 0535 0E       		.uleb128 0xe
 3271 0536 E5000000 		.4byte	.LASF23
 3272 053a 01       		.byte	0x1
 3273 053b BB08     		.2byte	0x8bb
 3274 053d 6B000000 		.4byte	0x6b
 3275 0541 02       		.uleb128 0x2
 3276 0542 91       		.byte	0x91
 3277 0543 6B       		.sleb128 -21
 3278 0544 0E       		.uleb128 0xe
 3279 0545 4D010000 		.4byte	.LASF62
 3280 0549 01       		.byte	0x1
 3281 054a BC08     		.2byte	0x8bc
 3282 054c 83000000 		.4byte	0x83
 3283 0550 02       		.uleb128 0x2
 3284 0551 91       		.byte	0x91
 3285 0552 6C       		.sleb128 -20
 3286 0553 0E       		.uleb128 0xe
 3287 0554 D7010000 		.4byte	.LASF63
 3288 0558 01       		.byte	0x1
 3289 0559 BD08     		.2byte	0x8bd
 3290 055b 83000000 		.4byte	0x83
 3291 055f 02       		.uleb128 0x2
 3292 0560 91       		.byte	0x91
 3293 0561 64       		.sleb128 -28
 3294 0562 00       		.byte	0
 3295 0563 0F       		.uleb128 0xf
 3296 0564 AB010000 		.4byte	.LASF64
 3297 0568 01       		.byte	0x1
 3298 0569 DB08     		.2byte	0x8db
 3299 056b 6B000000 		.4byte	0x6b
 3300 056f 00000000 		.4byte	.LFB24
 3301 0573 5C000000 		.4byte	.LFE24-.LFB24
 3302 0577 01       		.uleb128 0x1
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 109


 3303 0578 9C       		.byte	0x9c
 3304 0579 9C050000 		.4byte	0x59c
 3305 057d 0D       		.uleb128 0xd
 3306 057e 87010000 		.4byte	.LASF53
 3307 0582 01       		.byte	0x1
 3308 0583 DB08     		.2byte	0x8db
 3309 0585 6B000000 		.4byte	0x6b
 3310 0589 02       		.uleb128 0x2
 3311 058a 91       		.byte	0x91
 3312 058b 6F       		.sleb128 -17
 3313 058c 0E       		.uleb128 0xe
 3314 058d FA020000 		.4byte	.LASF61
 3315 0591 01       		.byte	0x1
 3316 0592 DD08     		.2byte	0x8dd
 3317 0594 6B000000 		.4byte	0x6b
 3318 0598 02       		.uleb128 0x2
 3319 0599 91       		.byte	0x91
 3320 059a 77       		.sleb128 -9
 3321 059b 00       		.byte	0
 3322 059c 13       		.uleb128 0x13
 3323 059d 49040000 		.4byte	.LASF65
 3324 05a1 01       		.byte	0x1
 3325 05a2 F008     		.2byte	0x8f0
 3326 05a4 00000000 		.4byte	.LFB25
 3327 05a8 28000000 		.4byte	.LFE25-.LFB25
 3328 05ac 01       		.uleb128 0x1
 3329 05ad 9C       		.byte	0x9c
 3330 05ae C2050000 		.4byte	0x5c2
 3331 05b2 0D       		.uleb128 0xd
 3332 05b3 87010000 		.4byte	.LASF53
 3333 05b7 01       		.byte	0x1
 3334 05b8 F008     		.2byte	0x8f0
 3335 05ba 6B000000 		.4byte	0x6b
 3336 05be 02       		.uleb128 0x2
 3337 05bf 91       		.byte	0x91
 3338 05c0 77       		.sleb128 -9
 3339 05c1 00       		.byte	0
 3340 05c2 11       		.uleb128 0x11
 3341 05c3 AC000000 		.4byte	.LASF66
 3342 05c7 01       		.byte	0x1
 3343 05c8 0209     		.2byte	0x902
 3344 05ca 6B000000 		.4byte	0x6b
 3345 05ce 00000000 		.4byte	.LFB26
 3346 05d2 30000000 		.4byte	.LFE26-.LFB26
 3347 05d6 01       		.uleb128 0x1
 3348 05d7 9C       		.byte	0x9c
 3349 05d8 EC050000 		.4byte	0x5ec
 3350 05dc 0D       		.uleb128 0xd
 3351 05dd 87010000 		.4byte	.LASF53
 3352 05e1 01       		.byte	0x1
 3353 05e2 0209     		.2byte	0x902
 3354 05e4 6B000000 		.4byte	0x6b
 3355 05e8 02       		.uleb128 0x2
 3356 05e9 91       		.byte	0x91
 3357 05ea 77       		.sleb128 -9
 3358 05eb 00       		.byte	0
 3359 05ec 13       		.uleb128 0x13
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 110


 3360 05ed 10010000 		.4byte	.LASF67
 3361 05f1 01       		.byte	0x1
 3362 05f2 1209     		.2byte	0x912
 3363 05f4 00000000 		.4byte	.LFB27
 3364 05f8 28000000 		.4byte	.LFE27-.LFB27
 3365 05fc 01       		.uleb128 0x1
 3366 05fd 9C       		.byte	0x9c
 3367 05fe 12060000 		.4byte	0x612
 3368 0602 0D       		.uleb128 0xd
 3369 0603 87010000 		.4byte	.LASF53
 3370 0607 01       		.byte	0x1
 3371 0608 1209     		.2byte	0x912
 3372 060a 6B000000 		.4byte	0x6b
 3373 060e 02       		.uleb128 0x2
 3374 060f 91       		.byte	0x91
 3375 0610 77       		.sleb128 -9
 3376 0611 00       		.byte	0
 3377 0612 13       		.uleb128 0x13
 3378 0613 66020000 		.4byte	.LASF68
 3379 0617 01       		.byte	0x1
 3380 0618 2009     		.2byte	0x920
 3381 061a 00000000 		.4byte	.LFB28
 3382 061e 28000000 		.4byte	.LFE28-.LFB28
 3383 0622 01       		.uleb128 0x1
 3384 0623 9C       		.byte	0x9c
 3385 0624 38060000 		.4byte	0x638
 3386 0628 0D       		.uleb128 0xd
 3387 0629 87010000 		.4byte	.LASF53
 3388 062d 01       		.byte	0x1
 3389 062e 2009     		.2byte	0x920
 3390 0630 6B000000 		.4byte	0x6b
 3391 0634 02       		.uleb128 0x2
 3392 0635 91       		.byte	0x91
 3393 0636 77       		.sleb128 -9
 3394 0637 00       		.byte	0
 3395 0638 13       		.uleb128 0x13
 3396 0639 66030000 		.4byte	.LASF69
 3397 063d 01       		.byte	0x1
 3398 063e 2F09     		.2byte	0x92f
 3399 0640 00000000 		.4byte	.LFB29
 3400 0644 28000000 		.4byte	.LFE29-.LFB29
 3401 0648 01       		.uleb128 0x1
 3402 0649 9C       		.byte	0x9c
 3403 064a 5E060000 		.4byte	0x65e
 3404 064e 0D       		.uleb128 0xd
 3405 064f 87010000 		.4byte	.LASF53
 3406 0653 01       		.byte	0x1
 3407 0654 2F09     		.2byte	0x92f
 3408 0656 6B000000 		.4byte	0x6b
 3409 065a 02       		.uleb128 0x2
 3410 065b 91       		.byte	0x91
 3411 065c 77       		.sleb128 -9
 3412 065d 00       		.byte	0
 3413 065e 13       		.uleb128 0x13
 3414 065f 2A040000 		.4byte	.LASF70
 3415 0663 01       		.byte	0x1
 3416 0664 3E09     		.2byte	0x93e
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 111


 3417 0666 00000000 		.4byte	.LFB30
 3418 066a 14000000 		.4byte	.LFE30-.LFB30
 3419 066e 01       		.uleb128 0x1
 3420 066f 9C       		.byte	0x9c
 3421 0670 84060000 		.4byte	0x684
 3422 0674 0D       		.uleb128 0xd
 3423 0675 82040000 		.4byte	.LASF47
 3424 0679 01       		.byte	0x1
 3425 067a 3E09     		.2byte	0x93e
 3426 067c 6B000000 		.4byte	0x6b
 3427 0680 02       		.uleb128 0x2
 3428 0681 91       		.byte	0x91
 3429 0682 77       		.sleb128 -9
 3430 0683 00       		.byte	0
 3431 0684 10       		.uleb128 0x10
 3432 0685 83000000 		.4byte	.LASF71
 3433 0689 01       		.byte	0x1
 3434 068a 5609     		.2byte	0x956
 3435 068c 00000000 		.4byte	.LFB31
 3436 0690 20000000 		.4byte	.LFE31-.LFB31
 3437 0694 01       		.uleb128 0x1
 3438 0695 9C       		.byte	0x9c
 3439 0696 0C       		.uleb128 0xc
 3440 0697 F3040000 		.4byte	.LASF72
 3441 069b 01       		.byte	0x1
 3442 069c 6A09     		.2byte	0x96a
 3443 069e 00000000 		.4byte	.LFB32
 3444 06a2 48000000 		.4byte	.LFE32-.LFB32
 3445 06a6 01       		.uleb128 0x1
 3446 06a7 9C       		.byte	0x9c
 3447 06a8 BC060000 		.4byte	0x6bc
 3448 06ac 0D       		.uleb128 0xd
 3449 06ad 0E040000 		.4byte	.LASF73
 3450 06b1 01       		.byte	0x1
 3451 06b2 6A09     		.2byte	0x96a
 3452 06b4 83000000 		.4byte	0x83
 3453 06b8 02       		.uleb128 0x2
 3454 06b9 91       		.byte	0x91
 3455 06ba 74       		.sleb128 -12
 3456 06bb 00       		.byte	0
 3457 06bc 0C       		.uleb128 0xc
 3458 06bd 3C010000 		.4byte	.LASF74
 3459 06c1 01       		.byte	0x1
 3460 06c2 8109     		.2byte	0x981
 3461 06c4 00000000 		.4byte	.LFB33
 3462 06c8 28000000 		.4byte	.LFE33-.LFB33
 3463 06cc 01       		.uleb128 0x1
 3464 06cd 9C       		.byte	0x9c
 3465 06ce E2060000 		.4byte	0x6e2
 3466 06d2 0D       		.uleb128 0xd
 3467 06d3 75060000 		.4byte	.LASF75
 3468 06d7 01       		.byte	0x1
 3469 06d8 8109     		.2byte	0x981
 3470 06da 77000000 		.4byte	0x77
 3471 06de 02       		.uleb128 0x2
 3472 06df 91       		.byte	0x91
 3473 06e0 76       		.sleb128 -10
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 112


 3474 06e1 00       		.byte	0
 3475 06e2 0C       		.uleb128 0xc
 3476 06e3 D9000000 		.4byte	.LASF76
 3477 06e7 01       		.byte	0x1
 3478 06e8 8F09     		.2byte	0x98f
 3479 06ea 00000000 		.4byte	.LFB34
 3480 06ee 84000000 		.4byte	.LFE34-.LFB34
 3481 06f2 01       		.uleb128 0x1
 3482 06f3 9C       		.byte	0x9c
 3483 06f4 08070000 		.4byte	0x708
 3484 06f8 0D       		.uleb128 0xd
 3485 06f9 D4000000 		.4byte	.LASF31
 3486 06fd 01       		.byte	0x1
 3487 06fe 8F09     		.2byte	0x98f
 3488 0700 83000000 		.4byte	0x83
 3489 0704 02       		.uleb128 0x2
 3490 0705 91       		.byte	0x91
 3491 0706 74       		.sleb128 -12
 3492 0707 00       		.byte	0
 3493 0708 14       		.uleb128 0x14
 3494 0709 30030000 		.4byte	.LASF77
 3495 070d 01       		.byte	0x1
 3496 070e AF09     		.2byte	0x9af
 3497 0710 00000000 		.4byte	.LFB35
 3498 0714 24000000 		.4byte	.LFE35-.LFB35
 3499 0718 01       		.uleb128 0x1
 3500 0719 9C       		.byte	0x9c
 3501 071a 0C       		.uleb128 0xc
 3502 071b C9010000 		.4byte	.LASF78
 3503 071f 01       		.byte	0x1
 3504 0720 CC09     		.2byte	0x9cc
 3505 0722 00000000 		.4byte	.LFB36
 3506 0726 64000000 		.4byte	.LFE36-.LFB36
 3507 072a 01       		.uleb128 0x1
 3508 072b 9C       		.byte	0x9c
 3509 072c 3E070000 		.4byte	0x73e
 3510 0730 15       		.uleb128 0x15
 3511 0731 6900     		.ascii	"i\000"
 3512 0733 01       		.byte	0x1
 3513 0734 CE09     		.2byte	0x9ce
 3514 0736 83000000 		.4byte	0x83
 3515 073a 02       		.uleb128 0x2
 3516 073b 91       		.byte	0x91
 3517 073c 74       		.sleb128 -12
 3518 073d 00       		.byte	0
 3519 073e 14       		.uleb128 0x14
 3520 073f 9B040000 		.4byte	.LASF79
 3521 0743 01       		.byte	0x1
 3522 0744 EB09     		.2byte	0x9eb
 3523 0746 00000000 		.4byte	.LFB37
 3524 074a 1C000000 		.4byte	.LFE37-.LFB37
 3525 074e 01       		.uleb128 0x1
 3526 074f 9C       		.byte	0x9c
 3527 0750 10       		.uleb128 0x10
 3528 0751 44050000 		.4byte	.LASF80
 3529 0755 01       		.byte	0x1
 3530 0756 FC09     		.2byte	0x9fc
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 113


 3531 0758 00000000 		.4byte	.LFB38
 3532 075c 18000000 		.4byte	.LFE38-.LFB38
 3533 0760 01       		.uleb128 0x1
 3534 0761 9C       		.byte	0x9c
 3535 0762 10       		.uleb128 0x10
 3536 0763 93000000 		.4byte	.LASF81
 3537 0767 01       		.byte	0x1
 3538 0768 0C0A     		.2byte	0xa0c
 3539 076a 00000000 		.4byte	.LFB39
 3540 076e 18000000 		.4byte	.LFE39-.LFB39
 3541 0772 01       		.uleb128 0x1
 3542 0773 9C       		.byte	0x9c
 3543 0774 10       		.uleb128 0x10
 3544 0775 FB040000 		.4byte	.LASF82
 3545 0779 01       		.byte	0x1
 3546 077a 1C0A     		.2byte	0xa1c
 3547 077c 00000000 		.4byte	.LFB40
 3548 0780 18000000 		.4byte	.LFE40-.LFB40
 3549 0784 01       		.uleb128 0x1
 3550 0785 9C       		.byte	0x9c
 3551 0786 13       		.uleb128 0x13
 3552 0787 89060000 		.4byte	.LASF83
 3553 078b 01       		.byte	0x1
 3554 078c 2D0A     		.2byte	0xa2d
 3555 078e 00000000 		.4byte	.LFB41
 3556 0792 1C000000 		.4byte	.LFE41-.LFB41
 3557 0796 01       		.uleb128 0x1
 3558 0797 9C       		.byte	0x9c
 3559 0798 AC070000 		.4byte	0x7ac
 3560 079c 0D       		.uleb128 0xd
 3561 079d D7010000 		.4byte	.LASF63
 3562 07a1 01       		.byte	0x1
 3563 07a2 2D0A     		.2byte	0xa2d
 3564 07a4 83000000 		.4byte	0x83
 3565 07a8 02       		.uleb128 0x2
 3566 07a9 91       		.byte	0x91
 3567 07aa 74       		.sleb128 -12
 3568 07ab 00       		.byte	0
 3569 07ac 12       		.uleb128 0x12
 3570 07ad F4000000 		.4byte	.LASF85
 3571 07b1 01       		.byte	0x1
 3572 07b2 3D0A     		.2byte	0xa3d
 3573 07b4 83000000 		.4byte	0x83
 3574 07b8 00000000 		.4byte	.LFB42
 3575 07bc 18000000 		.4byte	.LFE42-.LFB42
 3576 07c0 01       		.uleb128 0x1
 3577 07c1 9C       		.byte	0x9c
 3578 07c2 12       		.uleb128 0x12
 3579 07c3 A7030000 		.4byte	.LASF86
 3580 07c7 01       		.byte	0x1
 3581 07c8 4D0A     		.2byte	0xa4d
 3582 07ca 83000000 		.4byte	0x83
 3583 07ce 00000000 		.4byte	.LFB43
 3584 07d2 18000000 		.4byte	.LFE43-.LFB43
 3585 07d6 01       		.uleb128 0x1
 3586 07d7 9C       		.byte	0x9c
 3587 07d8 13       		.uleb128 0x13
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 114


 3588 07d9 B2020000 		.4byte	.LASF87
 3589 07dd 01       		.byte	0x1
 3590 07de 6D0A     		.2byte	0xa6d
 3591 07e0 00000000 		.4byte	.LFB44
 3592 07e4 34000000 		.4byte	.LFE44-.LFB44
 3593 07e8 01       		.uleb128 0x1
 3594 07e9 9C       		.byte	0x9c
 3595 07ea FE070000 		.4byte	0x7fe
 3596 07ee 0D       		.uleb128 0xd
 3597 07ef DD010000 		.4byte	.LASF88
 3598 07f3 01       		.byte	0x1
 3599 07f4 6D0A     		.2byte	0xa6d
 3600 07f6 83000000 		.4byte	0x83
 3601 07fa 02       		.uleb128 0x2
 3602 07fb 91       		.byte	0x91
 3603 07fc 74       		.sleb128 -12
 3604 07fd 00       		.byte	0
 3605 07fe 12       		.uleb128 0x12
 3606 07ff F7010000 		.4byte	.LASF89
 3607 0803 01       		.byte	0x1
 3608 0804 8A0A     		.2byte	0xa8a
 3609 0806 83000000 		.4byte	0x83
 3610 080a 00000000 		.4byte	.LFB45
 3611 080e 18000000 		.4byte	.LFE45-.LFB45
 3612 0812 01       		.uleb128 0x1
 3613 0813 9C       		.byte	0x9c
 3614 0814 10       		.uleb128 0x10
 3615 0815 1A020000 		.4byte	.LASF90
 3616 0819 01       		.byte	0x1
 3617 081a 970A     		.2byte	0xa97
 3618 081c 00000000 		.4byte	.LFB46
 3619 0820 14000000 		.4byte	.LFE46-.LFB46
 3620 0824 01       		.uleb128 0x1
 3621 0825 9C       		.byte	0x9c
 3622 0826 11       		.uleb128 0x11
 3623 0827 C2040000 		.4byte	.LASF91
 3624 082b 01       		.byte	0x1
 3625 082c BA0A     		.2byte	0xaba
 3626 082e EC000000 		.4byte	0xec
 3627 0832 00000000 		.4byte	.LFB47
 3628 0836 2C000000 		.4byte	.LFE47-.LFB47
 3629 083a 01       		.uleb128 0x1
 3630 083b 9C       		.byte	0x9c
 3631 083c 6E080000 		.4byte	0x86e
 3632 0840 0D       		.uleb128 0xd
 3633 0841 87010000 		.4byte	.LASF53
 3634 0845 01       		.byte	0x1
 3635 0846 BA0A     		.2byte	0xaba
 3636 0848 83000000 		.4byte	0x83
 3637 084c 02       		.uleb128 0x2
 3638 084d 91       		.byte	0x91
 3639 084e 6C       		.sleb128 -20
 3640 084f 0D       		.uleb128 0xd
 3641 0850 8D030000 		.4byte	.LASF92
 3642 0854 01       		.byte	0x1
 3643 0855 BA0A     		.2byte	0xaba
 3644 0857 EC000000 		.4byte	0xec
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 115


 3645 085b 02       		.uleb128 0x2
 3646 085c 91       		.byte	0x91
 3647 085d 68       		.sleb128 -24
 3648 085e 0E       		.uleb128 0xe
 3649 085f 3F000000 		.4byte	.LASF93
 3650 0863 01       		.byte	0x1
 3651 0864 BC0A     		.2byte	0xabc
 3652 0866 EC000000 		.4byte	0xec
 3653 086a 02       		.uleb128 0x2
 3654 086b 91       		.byte	0x91
 3655 086c 74       		.sleb128 -12
 3656 086d 00       		.byte	0
 3657 086e 11       		.uleb128 0x11
 3658 086f 76020000 		.4byte	.LASF94
 3659 0873 01       		.byte	0x1
 3660 0874 D20A     		.2byte	0xad2
 3661 0876 EC000000 		.4byte	0xec
 3662 087a 00000000 		.4byte	.LFB48
 3663 087e 1C000000 		.4byte	.LFE48-.LFB48
 3664 0882 01       		.uleb128 0x1
 3665 0883 9C       		.byte	0x9c
 3666 0884 98080000 		.4byte	0x898
 3667 0888 0D       		.uleb128 0xd
 3668 0889 87010000 		.4byte	.LASF53
 3669 088d 01       		.byte	0x1
 3670 088e D20A     		.2byte	0xad2
 3671 0890 83000000 		.4byte	0x83
 3672 0894 02       		.uleb128 0x2
 3673 0895 91       		.byte	0x91
 3674 0896 74       		.sleb128 -12
 3675 0897 00       		.byte	0
 3676 0898 16       		.uleb128 0x16
 3677 0899 9C060000 		.4byte	.LASF107
 3678 089d 01       		.byte	0x1
 3679 089e DF0A     		.2byte	0xadf
 3680 08a0 00000000 		.4byte	.LFB49
 3681 08a4 44000000 		.4byte	.LFE49-.LFB49
 3682 08a8 01       		.uleb128 0x1
 3683 08a9 9C       		.byte	0x9c
 3684 08aa BC080000 		.4byte	0x8bc
 3685 08ae 15       		.uleb128 0x15
 3686 08af 6900     		.ascii	"i\000"
 3687 08b1 01       		.byte	0x1
 3688 08b2 E10A     		.2byte	0xae1
 3689 08b4 83000000 		.4byte	0x83
 3690 08b8 02       		.uleb128 0x2
 3691 08b9 91       		.byte	0x91
 3692 08ba 74       		.sleb128 -12
 3693 08bb 00       		.byte	0
 3694 08bc 13       		.uleb128 0x13
 3695 08bd E9010000 		.4byte	.LASF95
 3696 08c1 01       		.byte	0x1
 3697 08c2 FF0A     		.2byte	0xaff
 3698 08c4 00000000 		.4byte	.LFB50
 3699 08c8 C0000000 		.4byte	.LFE50-.LFB50
 3700 08cc 01       		.uleb128 0x1
 3701 08cd 9C       		.byte	0x9c
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 116


 3702 08ce E2080000 		.4byte	0x8e2
 3703 08d2 0D       		.uleb128 0xd
 3704 08d3 EA040000 		.4byte	.LASF96
 3705 08d7 01       		.byte	0x1
 3706 08d8 FF0A     		.2byte	0xaff
 3707 08da E2080000 		.4byte	0x8e2
 3708 08de 02       		.uleb128 0x2
 3709 08df 91       		.byte	0x91
 3710 08e0 74       		.sleb128 -12
 3711 08e1 00       		.byte	0
 3712 08e2 06       		.uleb128 0x6
 3713 08e3 04       		.byte	0x4
 3714 08e4 83000000 		.4byte	0x83
 3715 08e8 09       		.uleb128 0x9
 3716 08e9 EC000000 		.4byte	0xec
 3717 08ed F8080000 		.4byte	0x8f8
 3718 08f1 0A       		.uleb128 0xa
 3719 08f2 E5000000 		.4byte	0xe5
 3720 08f6 04       		.byte	0x4
 3721 08f7 00       		.byte	0
 3722 08f8 17       		.uleb128 0x17
 3723 08f9 D7040000 		.4byte	.LASF97
 3724 08fd 01       		.byte	0x1
 3725 08fe 22       		.byte	0x22
 3726 08ff E8080000 		.4byte	0x8e8
 3727 0903 05       		.uleb128 0x5
 3728 0904 03       		.byte	0x3
 3729 0905 00000000 		.4byte	CySysTickCallbacks
 3730 0909 18       		.uleb128 0x18
 3731 090a B9030000 		.4byte	.LASF98
 3732 090e 01       		.byte	0x1
 3733 090f 1B       		.byte	0x1b
 3734 0910 83000000 		.4byte	0x83
 3735 0914 05       		.uleb128 0x5
 3736 0915 03       		.byte	0x3
 3737 0916 00000000 		.4byte	cydelayFreqHz
 3738 091a 18       		.uleb128 0x18
 3739 091b 2D010000 		.4byte	.LASF99
 3740 091f 01       		.byte	0x1
 3741 0920 1C       		.byte	0x1c
 3742 0921 83000000 		.4byte	0x83
 3743 0925 05       		.uleb128 0x5
 3744 0926 03       		.byte	0x3
 3745 0927 00000000 		.4byte	cydelayFreqKhz
 3746 092b 18       		.uleb128 0x18
 3747 092c 25050000 		.4byte	.LASF100
 3748 0930 01       		.byte	0x1
 3749 0931 1D       		.byte	0x1d
 3750 0932 6B000000 		.4byte	0x6b
 3751 0936 05       		.uleb128 0x5
 3752 0937 03       		.byte	0x3
 3753 0938 00000000 		.4byte	cydelayFreqMhz
 3754 093c 18       		.uleb128 0x18
 3755 093d BC010000 		.4byte	.LASF101
 3756 0941 01       		.byte	0x1
 3757 0942 1E       		.byte	0x1e
 3758 0943 83000000 		.4byte	0x83
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 117


 3759 0947 05       		.uleb128 0x5
 3760 0948 03       		.byte	0x3
 3761 0949 00000000 		.4byte	cydelay32kMs
 3762 094d 18       		.uleb128 0x18
 3763 094e 55030000 		.4byte	.LASF102
 3764 0952 01       		.byte	0x1
 3765 0953 35       		.byte	0x35
 3766 0954 83000000 		.4byte	0x83
 3767 0958 05       		.uleb128 0x5
 3768 0959 03       		.byte	0x3
 3769 095a 00000000 		.4byte	CySysTickInitVar
 3770 095e 09       		.uleb128 0x9
 3771 095f 6B000000 		.4byte	0x6b
 3772 0963 6E090000 		.4byte	0x96e
 3773 0967 0A       		.uleb128 0xa
 3774 0968 E5000000 		.4byte	0xe5
 3775 096c 2D       		.byte	0x2d
 3776 096d 00       		.byte	0
 3777 096e 18       		.uleb128 0x18
 3778 096f 96030000 		.4byte	.LASF103
 3779 0973 01       		.byte	0x1
 3780 0974 3A       		.byte	0x3a
 3781 0975 7F090000 		.4byte	0x97f
 3782 0979 05       		.uleb128 0x5
 3783 097a 03       		.byte	0x3
 3784 097b 00000000 		.4byte	cyImoFreqMhz2Reg
 3785 097f 19       		.uleb128 0x19
 3786 0980 5E090000 		.4byte	0x95e
 3787 0984 00       		.byte	0
 3788              		.section	.debug_abbrev,"",%progbits
 3789              	.Ldebug_abbrev0:
 3790 0000 01       		.uleb128 0x1
 3791 0001 11       		.uleb128 0x11
 3792 0002 01       		.byte	0x1
 3793 0003 25       		.uleb128 0x25
 3794 0004 0E       		.uleb128 0xe
 3795 0005 13       		.uleb128 0x13
 3796 0006 0B       		.uleb128 0xb
 3797 0007 03       		.uleb128 0x3
 3798 0008 0E       		.uleb128 0xe
 3799 0009 1B       		.uleb128 0x1b
 3800 000a 0E       		.uleb128 0xe
 3801 000b 55       		.uleb128 0x55
 3802 000c 17       		.uleb128 0x17
 3803 000d 11       		.uleb128 0x11
 3804 000e 01       		.uleb128 0x1
 3805 000f 10       		.uleb128 0x10
 3806 0010 17       		.uleb128 0x17
 3807 0011 00       		.byte	0
 3808 0012 00       		.byte	0
 3809 0013 02       		.uleb128 0x2
 3810 0014 24       		.uleb128 0x24
 3811 0015 00       		.byte	0
 3812 0016 0B       		.uleb128 0xb
 3813 0017 0B       		.uleb128 0xb
 3814 0018 3E       		.uleb128 0x3e
 3815 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 118


 3816 001a 03       		.uleb128 0x3
 3817 001b 0E       		.uleb128 0xe
 3818 001c 00       		.byte	0
 3819 001d 00       		.byte	0
 3820 001e 03       		.uleb128 0x3
 3821 001f 24       		.uleb128 0x24
 3822 0020 00       		.byte	0
 3823 0021 0B       		.uleb128 0xb
 3824 0022 0B       		.uleb128 0xb
 3825 0023 3E       		.uleb128 0x3e
 3826 0024 0B       		.uleb128 0xb
 3827 0025 03       		.uleb128 0x3
 3828 0026 08       		.uleb128 0x8
 3829 0027 00       		.byte	0
 3830 0028 00       		.byte	0
 3831 0029 04       		.uleb128 0x4
 3832 002a 16       		.uleb128 0x16
 3833 002b 00       		.byte	0
 3834 002c 03       		.uleb128 0x3
 3835 002d 0E       		.uleb128 0xe
 3836 002e 3A       		.uleb128 0x3a
 3837 002f 0B       		.uleb128 0xb
 3838 0030 3B       		.uleb128 0x3b
 3839 0031 05       		.uleb128 0x5
 3840 0032 49       		.uleb128 0x49
 3841 0033 13       		.uleb128 0x13
 3842 0034 00       		.byte	0
 3843 0035 00       		.byte	0
 3844 0036 05       		.uleb128 0x5
 3845 0037 35       		.uleb128 0x35
 3846 0038 00       		.byte	0
 3847 0039 49       		.uleb128 0x49
 3848 003a 13       		.uleb128 0x13
 3849 003b 00       		.byte	0
 3850 003c 00       		.byte	0
 3851 003d 06       		.uleb128 0x6
 3852 003e 0F       		.uleb128 0xf
 3853 003f 00       		.byte	0
 3854 0040 0B       		.uleb128 0xb
 3855 0041 0B       		.uleb128 0xb
 3856 0042 49       		.uleb128 0x49
 3857 0043 13       		.uleb128 0x13
 3858 0044 00       		.byte	0
 3859 0045 00       		.byte	0
 3860 0046 07       		.uleb128 0x7
 3861 0047 15       		.uleb128 0x15
 3862 0048 00       		.byte	0
 3863 0049 27       		.uleb128 0x27
 3864 004a 19       		.uleb128 0x19
 3865 004b 00       		.byte	0
 3866 004c 00       		.byte	0
 3867 004d 08       		.uleb128 0x8
 3868 004e 16       		.uleb128 0x16
 3869 004f 00       		.byte	0
 3870 0050 03       		.uleb128 0x3
 3871 0051 0E       		.uleb128 0xe
 3872 0052 3A       		.uleb128 0x3a
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 119


 3873 0053 0B       		.uleb128 0xb
 3874 0054 3B       		.uleb128 0x3b
 3875 0055 0B       		.uleb128 0xb
 3876 0056 49       		.uleb128 0x49
 3877 0057 13       		.uleb128 0x13
 3878 0058 00       		.byte	0
 3879 0059 00       		.byte	0
 3880 005a 09       		.uleb128 0x9
 3881 005b 01       		.uleb128 0x1
 3882 005c 01       		.byte	0x1
 3883 005d 49       		.uleb128 0x49
 3884 005e 13       		.uleb128 0x13
 3885 005f 01       		.uleb128 0x1
 3886 0060 13       		.uleb128 0x13
 3887 0061 00       		.byte	0
 3888 0062 00       		.byte	0
 3889 0063 0A       		.uleb128 0xa
 3890 0064 21       		.uleb128 0x21
 3891 0065 00       		.byte	0
 3892 0066 49       		.uleb128 0x49
 3893 0067 13       		.uleb128 0x13
 3894 0068 2F       		.uleb128 0x2f
 3895 0069 0B       		.uleb128 0xb
 3896 006a 00       		.byte	0
 3897 006b 00       		.byte	0
 3898 006c 0B       		.uleb128 0xb
 3899 006d 2E       		.uleb128 0x2e
 3900 006e 00       		.byte	0
 3901 006f 3F       		.uleb128 0x3f
 3902 0070 19       		.uleb128 0x19
 3903 0071 03       		.uleb128 0x3
 3904 0072 0E       		.uleb128 0xe
 3905 0073 3A       		.uleb128 0x3a
 3906 0074 0B       		.uleb128 0xb
 3907 0075 3B       		.uleb128 0x3b
 3908 0076 0B       		.uleb128 0xb
 3909 0077 27       		.uleb128 0x27
 3910 0078 19       		.uleb128 0x19
 3911 0079 11       		.uleb128 0x11
 3912 007a 01       		.uleb128 0x1
 3913 007b 12       		.uleb128 0x12
 3914 007c 06       		.uleb128 0x6
 3915 007d 40       		.uleb128 0x40
 3916 007e 18       		.uleb128 0x18
 3917 007f 9742     		.uleb128 0x2117
 3918 0081 19       		.uleb128 0x19
 3919 0082 00       		.byte	0
 3920 0083 00       		.byte	0
 3921 0084 0C       		.uleb128 0xc
 3922 0085 2E       		.uleb128 0x2e
 3923 0086 01       		.byte	0x1
 3924 0087 3F       		.uleb128 0x3f
 3925 0088 19       		.uleb128 0x19
 3926 0089 03       		.uleb128 0x3
 3927 008a 0E       		.uleb128 0xe
 3928 008b 3A       		.uleb128 0x3a
 3929 008c 0B       		.uleb128 0xb
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 120


 3930 008d 3B       		.uleb128 0x3b
 3931 008e 05       		.uleb128 0x5
 3932 008f 27       		.uleb128 0x27
 3933 0090 19       		.uleb128 0x19
 3934 0091 11       		.uleb128 0x11
 3935 0092 01       		.uleb128 0x1
 3936 0093 12       		.uleb128 0x12
 3937 0094 06       		.uleb128 0x6
 3938 0095 40       		.uleb128 0x40
 3939 0096 18       		.uleb128 0x18
 3940 0097 9642     		.uleb128 0x2116
 3941 0099 19       		.uleb128 0x19
 3942 009a 01       		.uleb128 0x1
 3943 009b 13       		.uleb128 0x13
 3944 009c 00       		.byte	0
 3945 009d 00       		.byte	0
 3946 009e 0D       		.uleb128 0xd
 3947 009f 05       		.uleb128 0x5
 3948 00a0 00       		.byte	0
 3949 00a1 03       		.uleb128 0x3
 3950 00a2 0E       		.uleb128 0xe
 3951 00a3 3A       		.uleb128 0x3a
 3952 00a4 0B       		.uleb128 0xb
 3953 00a5 3B       		.uleb128 0x3b
 3954 00a6 05       		.uleb128 0x5
 3955 00a7 49       		.uleb128 0x49
 3956 00a8 13       		.uleb128 0x13
 3957 00a9 02       		.uleb128 0x2
 3958 00aa 18       		.uleb128 0x18
 3959 00ab 00       		.byte	0
 3960 00ac 00       		.byte	0
 3961 00ad 0E       		.uleb128 0xe
 3962 00ae 34       		.uleb128 0x34
 3963 00af 00       		.byte	0
 3964 00b0 03       		.uleb128 0x3
 3965 00b1 0E       		.uleb128 0xe
 3966 00b2 3A       		.uleb128 0x3a
 3967 00b3 0B       		.uleb128 0xb
 3968 00b4 3B       		.uleb128 0x3b
 3969 00b5 05       		.uleb128 0x5
 3970 00b6 49       		.uleb128 0x49
 3971 00b7 13       		.uleb128 0x13
 3972 00b8 02       		.uleb128 0x2
 3973 00b9 18       		.uleb128 0x18
 3974 00ba 00       		.byte	0
 3975 00bb 00       		.byte	0
 3976 00bc 0F       		.uleb128 0xf
 3977 00bd 2E       		.uleb128 0x2e
 3978 00be 01       		.byte	0x1
 3979 00bf 3F       		.uleb128 0x3f
 3980 00c0 19       		.uleb128 0x19
 3981 00c1 03       		.uleb128 0x3
 3982 00c2 0E       		.uleb128 0xe
 3983 00c3 3A       		.uleb128 0x3a
 3984 00c4 0B       		.uleb128 0xb
 3985 00c5 3B       		.uleb128 0x3b
 3986 00c6 05       		.uleb128 0x5
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 121


 3987 00c7 27       		.uleb128 0x27
 3988 00c8 19       		.uleb128 0x19
 3989 00c9 49       		.uleb128 0x49
 3990 00ca 13       		.uleb128 0x13
 3991 00cb 11       		.uleb128 0x11
 3992 00cc 01       		.uleb128 0x1
 3993 00cd 12       		.uleb128 0x12
 3994 00ce 06       		.uleb128 0x6
 3995 00cf 40       		.uleb128 0x40
 3996 00d0 18       		.uleb128 0x18
 3997 00d1 9642     		.uleb128 0x2116
 3998 00d3 19       		.uleb128 0x19
 3999 00d4 01       		.uleb128 0x1
 4000 00d5 13       		.uleb128 0x13
 4001 00d6 00       		.byte	0
 4002 00d7 00       		.byte	0
 4003 00d8 10       		.uleb128 0x10
 4004 00d9 2E       		.uleb128 0x2e
 4005 00da 00       		.byte	0
 4006 00db 3F       		.uleb128 0x3f
 4007 00dc 19       		.uleb128 0x19
 4008 00dd 03       		.uleb128 0x3
 4009 00de 0E       		.uleb128 0xe
 4010 00df 3A       		.uleb128 0x3a
 4011 00e0 0B       		.uleb128 0xb
 4012 00e1 3B       		.uleb128 0x3b
 4013 00e2 05       		.uleb128 0x5
 4014 00e3 27       		.uleb128 0x27
 4015 00e4 19       		.uleb128 0x19
 4016 00e5 11       		.uleb128 0x11
 4017 00e6 01       		.uleb128 0x1
 4018 00e7 12       		.uleb128 0x12
 4019 00e8 06       		.uleb128 0x6
 4020 00e9 40       		.uleb128 0x40
 4021 00ea 18       		.uleb128 0x18
 4022 00eb 9742     		.uleb128 0x2117
 4023 00ed 19       		.uleb128 0x19
 4024 00ee 00       		.byte	0
 4025 00ef 00       		.byte	0
 4026 00f0 11       		.uleb128 0x11
 4027 00f1 2E       		.uleb128 0x2e
 4028 00f2 01       		.byte	0x1
 4029 00f3 3F       		.uleb128 0x3f
 4030 00f4 19       		.uleb128 0x19
 4031 00f5 03       		.uleb128 0x3
 4032 00f6 0E       		.uleb128 0xe
 4033 00f7 3A       		.uleb128 0x3a
 4034 00f8 0B       		.uleb128 0xb
 4035 00f9 3B       		.uleb128 0x3b
 4036 00fa 05       		.uleb128 0x5
 4037 00fb 27       		.uleb128 0x27
 4038 00fc 19       		.uleb128 0x19
 4039 00fd 49       		.uleb128 0x49
 4040 00fe 13       		.uleb128 0x13
 4041 00ff 11       		.uleb128 0x11
 4042 0100 01       		.uleb128 0x1
 4043 0101 12       		.uleb128 0x12
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 122


 4044 0102 06       		.uleb128 0x6
 4045 0103 40       		.uleb128 0x40
 4046 0104 18       		.uleb128 0x18
 4047 0105 9742     		.uleb128 0x2117
 4048 0107 19       		.uleb128 0x19
 4049 0108 01       		.uleb128 0x1
 4050 0109 13       		.uleb128 0x13
 4051 010a 00       		.byte	0
 4052 010b 00       		.byte	0
 4053 010c 12       		.uleb128 0x12
 4054 010d 2E       		.uleb128 0x2e
 4055 010e 00       		.byte	0
 4056 010f 3F       		.uleb128 0x3f
 4057 0110 19       		.uleb128 0x19
 4058 0111 03       		.uleb128 0x3
 4059 0112 0E       		.uleb128 0xe
 4060 0113 3A       		.uleb128 0x3a
 4061 0114 0B       		.uleb128 0xb
 4062 0115 3B       		.uleb128 0x3b
 4063 0116 05       		.uleb128 0x5
 4064 0117 27       		.uleb128 0x27
 4065 0118 19       		.uleb128 0x19
 4066 0119 49       		.uleb128 0x49
 4067 011a 13       		.uleb128 0x13
 4068 011b 11       		.uleb128 0x11
 4069 011c 01       		.uleb128 0x1
 4070 011d 12       		.uleb128 0x12
 4071 011e 06       		.uleb128 0x6
 4072 011f 40       		.uleb128 0x40
 4073 0120 18       		.uleb128 0x18
 4074 0121 9742     		.uleb128 0x2117
 4075 0123 19       		.uleb128 0x19
 4076 0124 00       		.byte	0
 4077 0125 00       		.byte	0
 4078 0126 13       		.uleb128 0x13
 4079 0127 2E       		.uleb128 0x2e
 4080 0128 01       		.byte	0x1
 4081 0129 3F       		.uleb128 0x3f
 4082 012a 19       		.uleb128 0x19
 4083 012b 03       		.uleb128 0x3
 4084 012c 0E       		.uleb128 0xe
 4085 012d 3A       		.uleb128 0x3a
 4086 012e 0B       		.uleb128 0xb
 4087 012f 3B       		.uleb128 0x3b
 4088 0130 05       		.uleb128 0x5
 4089 0131 27       		.uleb128 0x27
 4090 0132 19       		.uleb128 0x19
 4091 0133 11       		.uleb128 0x11
 4092 0134 01       		.uleb128 0x1
 4093 0135 12       		.uleb128 0x12
 4094 0136 06       		.uleb128 0x6
 4095 0137 40       		.uleb128 0x40
 4096 0138 18       		.uleb128 0x18
 4097 0139 9742     		.uleb128 0x2117
 4098 013b 19       		.uleb128 0x19
 4099 013c 01       		.uleb128 0x1
 4100 013d 13       		.uleb128 0x13
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 123


 4101 013e 00       		.byte	0
 4102 013f 00       		.byte	0
 4103 0140 14       		.uleb128 0x14
 4104 0141 2E       		.uleb128 0x2e
 4105 0142 00       		.byte	0
 4106 0143 3F       		.uleb128 0x3f
 4107 0144 19       		.uleb128 0x19
 4108 0145 03       		.uleb128 0x3
 4109 0146 0E       		.uleb128 0xe
 4110 0147 3A       		.uleb128 0x3a
 4111 0148 0B       		.uleb128 0xb
 4112 0149 3B       		.uleb128 0x3b
 4113 014a 05       		.uleb128 0x5
 4114 014b 27       		.uleb128 0x27
 4115 014c 19       		.uleb128 0x19
 4116 014d 11       		.uleb128 0x11
 4117 014e 01       		.uleb128 0x1
 4118 014f 12       		.uleb128 0x12
 4119 0150 06       		.uleb128 0x6
 4120 0151 40       		.uleb128 0x40
 4121 0152 18       		.uleb128 0x18
 4122 0153 9642     		.uleb128 0x2116
 4123 0155 19       		.uleb128 0x19
 4124 0156 00       		.byte	0
 4125 0157 00       		.byte	0
 4126 0158 15       		.uleb128 0x15
 4127 0159 34       		.uleb128 0x34
 4128 015a 00       		.byte	0
 4129 015b 03       		.uleb128 0x3
 4130 015c 08       		.uleb128 0x8
 4131 015d 3A       		.uleb128 0x3a
 4132 015e 0B       		.uleb128 0xb
 4133 015f 3B       		.uleb128 0x3b
 4134 0160 05       		.uleb128 0x5
 4135 0161 49       		.uleb128 0x49
 4136 0162 13       		.uleb128 0x13
 4137 0163 02       		.uleb128 0x2
 4138 0164 18       		.uleb128 0x18
 4139 0165 00       		.byte	0
 4140 0166 00       		.byte	0
 4141 0167 16       		.uleb128 0x16
 4142 0168 2E       		.uleb128 0x2e
 4143 0169 01       		.byte	0x1
 4144 016a 03       		.uleb128 0x3
 4145 016b 0E       		.uleb128 0xe
 4146 016c 3A       		.uleb128 0x3a
 4147 016d 0B       		.uleb128 0xb
 4148 016e 3B       		.uleb128 0x3b
 4149 016f 05       		.uleb128 0x5
 4150 0170 27       		.uleb128 0x27
 4151 0171 19       		.uleb128 0x19
 4152 0172 11       		.uleb128 0x11
 4153 0173 01       		.uleb128 0x1
 4154 0174 12       		.uleb128 0x12
 4155 0175 06       		.uleb128 0x6
 4156 0176 40       		.uleb128 0x40
 4157 0177 18       		.uleb128 0x18
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 124


 4158 0178 9642     		.uleb128 0x2116
 4159 017a 19       		.uleb128 0x19
 4160 017b 01       		.uleb128 0x1
 4161 017c 13       		.uleb128 0x13
 4162 017d 00       		.byte	0
 4163 017e 00       		.byte	0
 4164 017f 17       		.uleb128 0x17
 4165 0180 34       		.uleb128 0x34
 4166 0181 00       		.byte	0
 4167 0182 03       		.uleb128 0x3
 4168 0183 0E       		.uleb128 0xe
 4169 0184 3A       		.uleb128 0x3a
 4170 0185 0B       		.uleb128 0xb
 4171 0186 3B       		.uleb128 0x3b
 4172 0187 0B       		.uleb128 0xb
 4173 0188 49       		.uleb128 0x49
 4174 0189 13       		.uleb128 0x13
 4175 018a 02       		.uleb128 0x2
 4176 018b 18       		.uleb128 0x18
 4177 018c 00       		.byte	0
 4178 018d 00       		.byte	0
 4179 018e 18       		.uleb128 0x18
 4180 018f 34       		.uleb128 0x34
 4181 0190 00       		.byte	0
 4182 0191 03       		.uleb128 0x3
 4183 0192 0E       		.uleb128 0xe
 4184 0193 3A       		.uleb128 0x3a
 4185 0194 0B       		.uleb128 0xb
 4186 0195 3B       		.uleb128 0x3b
 4187 0196 0B       		.uleb128 0xb
 4188 0197 49       		.uleb128 0x49
 4189 0198 13       		.uleb128 0x13
 4190 0199 3F       		.uleb128 0x3f
 4191 019a 19       		.uleb128 0x19
 4192 019b 02       		.uleb128 0x2
 4193 019c 18       		.uleb128 0x18
 4194 019d 00       		.byte	0
 4195 019e 00       		.byte	0
 4196 019f 19       		.uleb128 0x19
 4197 01a0 26       		.uleb128 0x26
 4198 01a1 00       		.byte	0
 4199 01a2 49       		.uleb128 0x49
 4200 01a3 13       		.uleb128 0x13
 4201 01a4 00       		.byte	0
 4202 01a5 00       		.byte	0
 4203 01a6 00       		.byte	0
 4204              		.section	.debug_aranges,"",%progbits
 4205 0000 9C010000 		.4byte	0x19c
 4206 0004 0200     		.2byte	0x2
 4207 0006 00000000 		.4byte	.Ldebug_info0
 4208 000a 04       		.byte	0x4
 4209 000b 00       		.byte	0
 4210 000c 0000     		.2byte	0
 4211 000e 0000     		.2byte	0
 4212 0010 00000000 		.4byte	.LFB2
 4213 0014 1C000000 		.4byte	.LFE2-.LFB2
 4214 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 125


 4215 001c 18000000 		.4byte	.LFE3-.LFB3
 4216 0020 00000000 		.4byte	.LFB4
 4217 0024 48000000 		.4byte	.LFE4-.LFB4
 4218 0028 00000000 		.4byte	.LFB5
 4219 002c 34000000 		.4byte	.LFE5-.LFB5
 4220 0030 00000000 		.4byte	.LFB6
 4221 0034 44000000 		.4byte	.LFE6-.LFB6
 4222 0038 00000000 		.4byte	.LFB7
 4223 003c 98000000 		.4byte	.LFE7-.LFB7
 4224 0040 00000000 		.4byte	.LFB8
 4225 0044 74000000 		.4byte	.LFE8-.LFB8
 4226 0048 00000000 		.4byte	.LFB9
 4227 004c 2C000000 		.4byte	.LFE9-.LFB9
 4228 0050 00000000 		.4byte	.LFB10
 4229 0054 20000000 		.4byte	.LFE10-.LFB10
 4230 0058 00000000 		.4byte	.LFB11
 4231 005c 58000000 		.4byte	.LFE11-.LFB11
 4232 0060 00000000 		.4byte	.LFB12
 4233 0064 60000000 		.4byte	.LFE12-.LFB12
 4234 0068 00000000 		.4byte	.LFB13
 4235 006c 28000000 		.4byte	.LFE13-.LFB13
 4236 0070 00000000 		.4byte	.LFB14
 4237 0074 18000000 		.4byte	.LFE14-.LFB14
 4238 0078 00000000 		.4byte	.LFB15
 4239 007c 14000000 		.4byte	.LFE15-.LFB15
 4240 0080 00000000 		.4byte	.LFB16
 4241 0084 30000000 		.4byte	.LFE16-.LFB16
 4242 0088 00000000 		.4byte	.LFB17
 4243 008c 24000000 		.4byte	.LFE17-.LFB17
 4244 0090 00000000 		.4byte	.LFB18
 4245 0094 18000000 		.4byte	.LFE18-.LFB18
 4246 0098 00000000 		.4byte	.LFB19
 4247 009c 48000000 		.4byte	.LFE19-.LFB19
 4248 00a0 00000000 		.4byte	.LFB20
 4249 00a4 34000000 		.4byte	.LFE20-.LFB20
 4250 00a8 00000000 		.4byte	.LFB21
 4251 00ac 4C000000 		.4byte	.LFE21-.LFB21
 4252 00b0 00000000 		.4byte	.LFB22
 4253 00b4 36000000 		.4byte	.LFE22-.LFB22
 4254 00b8 00000000 		.4byte	.LFB23
 4255 00bc A8000000 		.4byte	.LFE23-.LFB23
 4256 00c0 00000000 		.4byte	.LFB24
 4257 00c4 5C000000 		.4byte	.LFE24-.LFB24
 4258 00c8 00000000 		.4byte	.LFB25
 4259 00cc 28000000 		.4byte	.LFE25-.LFB25
 4260 00d0 00000000 		.4byte	.LFB26
 4261 00d4 30000000 		.4byte	.LFE26-.LFB26
 4262 00d8 00000000 		.4byte	.LFB27
 4263 00dc 28000000 		.4byte	.LFE27-.LFB27
 4264 00e0 00000000 		.4byte	.LFB28
 4265 00e4 28000000 		.4byte	.LFE28-.LFB28
 4266 00e8 00000000 		.4byte	.LFB29
 4267 00ec 28000000 		.4byte	.LFE29-.LFB29
 4268 00f0 00000000 		.4byte	.LFB30
 4269 00f4 14000000 		.4byte	.LFE30-.LFB30
 4270 00f8 00000000 		.4byte	.LFB31
 4271 00fc 20000000 		.4byte	.LFE31-.LFB31
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 126


 4272 0100 00000000 		.4byte	.LFB32
 4273 0104 48000000 		.4byte	.LFE32-.LFB32
 4274 0108 00000000 		.4byte	.LFB33
 4275 010c 28000000 		.4byte	.LFE33-.LFB33
 4276 0110 00000000 		.4byte	.LFB34
 4277 0114 84000000 		.4byte	.LFE34-.LFB34
 4278 0118 00000000 		.4byte	.LFB35
 4279 011c 24000000 		.4byte	.LFE35-.LFB35
 4280 0120 00000000 		.4byte	.LFB36
 4281 0124 64000000 		.4byte	.LFE36-.LFB36
 4282 0128 00000000 		.4byte	.LFB37
 4283 012c 1C000000 		.4byte	.LFE37-.LFB37
 4284 0130 00000000 		.4byte	.LFB38
 4285 0134 18000000 		.4byte	.LFE38-.LFB38
 4286 0138 00000000 		.4byte	.LFB39
 4287 013c 18000000 		.4byte	.LFE39-.LFB39
 4288 0140 00000000 		.4byte	.LFB40
 4289 0144 18000000 		.4byte	.LFE40-.LFB40
 4290 0148 00000000 		.4byte	.LFB41
 4291 014c 1C000000 		.4byte	.LFE41-.LFB41
 4292 0150 00000000 		.4byte	.LFB42
 4293 0154 18000000 		.4byte	.LFE42-.LFB42
 4294 0158 00000000 		.4byte	.LFB43
 4295 015c 18000000 		.4byte	.LFE43-.LFB43
 4296 0160 00000000 		.4byte	.LFB44
 4297 0164 34000000 		.4byte	.LFE44-.LFB44
 4298 0168 00000000 		.4byte	.LFB45
 4299 016c 18000000 		.4byte	.LFE45-.LFB45
 4300 0170 00000000 		.4byte	.LFB46
 4301 0174 14000000 		.4byte	.LFE46-.LFB46
 4302 0178 00000000 		.4byte	.LFB47
 4303 017c 2C000000 		.4byte	.LFE47-.LFB47
 4304 0180 00000000 		.4byte	.LFB48
 4305 0184 1C000000 		.4byte	.LFE48-.LFB48
 4306 0188 00000000 		.4byte	.LFB49
 4307 018c 44000000 		.4byte	.LFE49-.LFB49
 4308 0190 00000000 		.4byte	.LFB50
 4309 0194 C0000000 		.4byte	.LFE50-.LFB50
 4310 0198 00000000 		.4byte	0
 4311 019c 00000000 		.4byte	0
 4312              		.section	.debug_ranges,"",%progbits
 4313              	.Ldebug_ranges0:
 4314 0000 00000000 		.4byte	.LFB2
 4315 0004 1C000000 		.4byte	.LFE2
 4316 0008 00000000 		.4byte	.LFB3
 4317 000c 18000000 		.4byte	.LFE3
 4318 0010 00000000 		.4byte	.LFB4
 4319 0014 48000000 		.4byte	.LFE4
 4320 0018 00000000 		.4byte	.LFB5
 4321 001c 34000000 		.4byte	.LFE5
 4322 0020 00000000 		.4byte	.LFB6
 4323 0024 44000000 		.4byte	.LFE6
 4324 0028 00000000 		.4byte	.LFB7
 4325 002c 98000000 		.4byte	.LFE7
 4326 0030 00000000 		.4byte	.LFB8
 4327 0034 74000000 		.4byte	.LFE8
 4328 0038 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 127


 4329 003c 2C000000 		.4byte	.LFE9
 4330 0040 00000000 		.4byte	.LFB10
 4331 0044 20000000 		.4byte	.LFE10
 4332 0048 00000000 		.4byte	.LFB11
 4333 004c 58000000 		.4byte	.LFE11
 4334 0050 00000000 		.4byte	.LFB12
 4335 0054 60000000 		.4byte	.LFE12
 4336 0058 00000000 		.4byte	.LFB13
 4337 005c 28000000 		.4byte	.LFE13
 4338 0060 00000000 		.4byte	.LFB14
 4339 0064 18000000 		.4byte	.LFE14
 4340 0068 00000000 		.4byte	.LFB15
 4341 006c 14000000 		.4byte	.LFE15
 4342 0070 00000000 		.4byte	.LFB16
 4343 0074 30000000 		.4byte	.LFE16
 4344 0078 00000000 		.4byte	.LFB17
 4345 007c 24000000 		.4byte	.LFE17
 4346 0080 00000000 		.4byte	.LFB18
 4347 0084 18000000 		.4byte	.LFE18
 4348 0088 00000000 		.4byte	.LFB19
 4349 008c 48000000 		.4byte	.LFE19
 4350 0090 00000000 		.4byte	.LFB20
 4351 0094 34000000 		.4byte	.LFE20
 4352 0098 00000000 		.4byte	.LFB21
 4353 009c 4C000000 		.4byte	.LFE21
 4354 00a0 00000000 		.4byte	.LFB22
 4355 00a4 36000000 		.4byte	.LFE22
 4356 00a8 00000000 		.4byte	.LFB23
 4357 00ac A8000000 		.4byte	.LFE23
 4358 00b0 00000000 		.4byte	.LFB24
 4359 00b4 5C000000 		.4byte	.LFE24
 4360 00b8 00000000 		.4byte	.LFB25
 4361 00bc 28000000 		.4byte	.LFE25
 4362 00c0 00000000 		.4byte	.LFB26
 4363 00c4 30000000 		.4byte	.LFE26
 4364 00c8 00000000 		.4byte	.LFB27
 4365 00cc 28000000 		.4byte	.LFE27
 4366 00d0 00000000 		.4byte	.LFB28
 4367 00d4 28000000 		.4byte	.LFE28
 4368 00d8 00000000 		.4byte	.LFB29
 4369 00dc 28000000 		.4byte	.LFE29
 4370 00e0 00000000 		.4byte	.LFB30
 4371 00e4 14000000 		.4byte	.LFE30
 4372 00e8 00000000 		.4byte	.LFB31
 4373 00ec 20000000 		.4byte	.LFE31
 4374 00f0 00000000 		.4byte	.LFB32
 4375 00f4 48000000 		.4byte	.LFE32
 4376 00f8 00000000 		.4byte	.LFB33
 4377 00fc 28000000 		.4byte	.LFE33
 4378 0100 00000000 		.4byte	.LFB34
 4379 0104 84000000 		.4byte	.LFE34
 4380 0108 00000000 		.4byte	.LFB35
 4381 010c 24000000 		.4byte	.LFE35
 4382 0110 00000000 		.4byte	.LFB36
 4383 0114 64000000 		.4byte	.LFE36
 4384 0118 00000000 		.4byte	.LFB37
 4385 011c 1C000000 		.4byte	.LFE37
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 128


 4386 0120 00000000 		.4byte	.LFB38
 4387 0124 18000000 		.4byte	.LFE38
 4388 0128 00000000 		.4byte	.LFB39
 4389 012c 18000000 		.4byte	.LFE39
 4390 0130 00000000 		.4byte	.LFB40
 4391 0134 18000000 		.4byte	.LFE40
 4392 0138 00000000 		.4byte	.LFB41
 4393 013c 1C000000 		.4byte	.LFE41
 4394 0140 00000000 		.4byte	.LFB42
 4395 0144 18000000 		.4byte	.LFE42
 4396 0148 00000000 		.4byte	.LFB43
 4397 014c 18000000 		.4byte	.LFE43
 4398 0150 00000000 		.4byte	.LFB44
 4399 0154 34000000 		.4byte	.LFE44
 4400 0158 00000000 		.4byte	.LFB45
 4401 015c 18000000 		.4byte	.LFE45
 4402 0160 00000000 		.4byte	.LFB46
 4403 0164 14000000 		.4byte	.LFE46
 4404 0168 00000000 		.4byte	.LFB47
 4405 016c 2C000000 		.4byte	.LFE47
 4406 0170 00000000 		.4byte	.LFB48
 4407 0174 1C000000 		.4byte	.LFE48
 4408 0178 00000000 		.4byte	.LFB49
 4409 017c 44000000 		.4byte	.LFE49
 4410 0180 00000000 		.4byte	.LFB50
 4411 0184 C0000000 		.4byte	.LFE50
 4412 0188 00000000 		.4byte	0
 4413 018c 00000000 		.4byte	0
 4414              		.section	.debug_line,"",%progbits
 4415              	.Ldebug_line0:
 4416 0000 AB040000 		.section	.debug_str,"MS",%progbits,1
 4416      02004F00 
 4416      00000201 
 4416      FB0E0D00 
 4416      01010101 
 4417              	.LASF56:
 4418 0000 72616D56 		.ascii	"ramVectorTable\000"
 4418      6563746F 
 4418      72546162 
 4418      6C6500
 4419              	.LASF10:
 4420 000f 75696E74 		.ascii	"uint16\000"
 4420      313600
 4421              	.LASF49:
 4422 0016 696E7453 		.ascii	"intState\000"
 4422      74617465 
 4422      00
 4423              	.LASF26:
 4424 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4424      73436C6B 
 4424      57726974 
 4424      65486663 
 4424      6C6B4469 
 4425              	.LASF55:
 4426 0038 6F6C6449 		.ascii	"oldIsr\000"
 4426      737200
 4427              	.LASF93:
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 129


 4428 003f 72657456 		.ascii	"retVal\000"
 4428      616C00
 4429              	.LASF48:
 4430 0046 43794469 		.ascii	"CyDisableInts\000"
 4430      7361626C 
 4430      65496E74 
 4430      7300
 4431              	.LASF7:
 4432 0054 6C6F6E67 		.ascii	"long long unsigned int\000"
 4432      206C6F6E 
 4432      6720756E 
 4432      7369676E 
 4432      65642069 
 4433              	.LASF32:
 4434 006b 70617261 		.ascii	"parameters\000"
 4434      6D657465 
 4434      727300
 4435              	.LASF50:
 4436 0076 4379456E 		.ascii	"CyEnableInts\000"
 4436      61626C65 
 4436      496E7473 
 4436      00
 4437              	.LASF71:
 4438 0083 4379536F 		.ascii	"CySoftwareReset\000"
 4438      66747761 
 4438      72655265 
 4438      73657400 
 4439              	.LASF81:
 4440 0093 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4440      73546963 
 4440      6B456E61 
 4440      626C6549 
 4440      6E746572 
 4441              	.LASF66:
 4442 00ac 4379496E 		.ascii	"CyIntGetState\000"
 4442      74476574 
 4442      53746174 
 4442      6500
 4443              	.LASF6:
 4444 00ba 6C6F6E67 		.ascii	"long long int\000"
 4444      206C6F6E 
 4444      6720696E 
 4444      7400
 4445              	.LASF0:
 4446 00c8 7369676E 		.ascii	"signed char\000"
 4446      65642063 
 4446      68617200 
 4447              	.LASF31:
 4448 00d4 66726571 		.ascii	"freq\000"
 4448      00
 4449              	.LASF76:
 4450 00d9 43794465 		.ascii	"CyDelayFreq\000"
 4450      6C617946 
 4450      72657100 
 4451              	.LASF23:
 4452 00e5 696E7465 		.ascii	"interruptState\000"
 4452      72727570 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 130


 4452      74537461 
 4452      746500
 4453              	.LASF85:
 4454 00f4 43795379 		.ascii	"CySysTickGetReload\000"
 4454      73546963 
 4454      6B476574 
 4454      52656C6F 
 4454      616400
 4455              	.LASF4:
 4456 0107 6C6F6E67 		.ascii	"long int\000"
 4456      20696E74 
 4456      00
 4457              	.LASF67:
 4458 0110 4379496E 		.ascii	"CyIntDisable\000"
 4458      74446973 
 4458      61626C65 
 4458      00
 4459              	.LASF33:
 4460 011d 72656756 		.ascii	"regValues\000"
 4460      616C7565 
 4460      7300
 4461              	.LASF9:
 4462 0127 75696E74 		.ascii	"uint8\000"
 4462      3800
 4463              	.LASF99:
 4464 012d 63796465 		.ascii	"cydelayFreqKhz\000"
 4464      6C617946 
 4464      7265714B 
 4464      687A00
 4465              	.LASF74:
 4466 013c 43794465 		.ascii	"CyDelayUs\000"
 4466      6C617955 
 4466      7300
 4467              	.LASF13:
 4468 0146 646F7562 		.ascii	"double\000"
 4468      6C6500
 4469              	.LASF62:
 4470 014d 73686966 		.ascii	"shift\000"
 4470      7400
 4471              	.LASF45:
 4472 0153 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4472      734C7664 
 4472      436C6561 
 4472      72496E74 
 4472      65727275 
 4473              	.LASF11:
 4474 016a 75696E74 		.ascii	"uint32\000"
 4474      333200
 4475              	.LASF39:
 4476 0171 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4476      73436C6B 
 4476      45636F52 
 4476      65616453 
 4476      74617475 
 4477              	.LASF53:
 4478 0187 6E756D62 		.ascii	"number\000"
 4478      657200
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 131


 4479              	.LASF51:
 4480 018e 6D61736B 		.ascii	"mask\000"
 4480      00
 4481              	.LASF34:
 4482 0193 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4482      73436C6B 
 4482      47657453 
 4482      7973636C 
 4482      6B536F75 
 4483              	.LASF64:
 4484 01ab 4379496E 		.ascii	"CyIntGetPriority\000"
 4484      74476574 
 4484      5072696F 
 4484      72697479 
 4484      00
 4485              	.LASF101:
 4486 01bc 63796465 		.ascii	"cydelay32kMs\000"
 4486      6C617933 
 4486      326B4D73 
 4486      00
 4487              	.LASF78:
 4488 01c9 43795379 		.ascii	"CySysTickInit\000"
 4488      73546963 
 4488      6B496E69 
 4488      7400
 4489              	.LASF63:
 4490 01d7 76616C75 		.ascii	"value\000"
 4490      6500
 4491              	.LASF88:
 4492 01dd 636C6F63 		.ascii	"clockSource\000"
 4492      6B536F75 
 4492      72636500 
 4493              	.LASF95:
 4494 01e9 43794765 		.ascii	"CyGetUniqueId\000"
 4494      74556E69 
 4494      71756549 
 4494      6400
 4495              	.LASF89:
 4496 01f7 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4496      73546963 
 4496      6B476574 
 4496      436F756E 
 4496      74466C61 
 4497              	.LASF8:
 4498 020d 756E7369 		.ascii	"unsigned int\000"
 4498      676E6564 
 4498      20696E74 
 4498      00
 4499              	.LASF90:
 4500 021a 43795379 		.ascii	"CySysTickClear\000"
 4500      73546963 
 4500      6B436C65 
 4500      617200
 4501              	.LASF5:
 4502 0229 6C6F6E67 		.ascii	"long unsigned int\000"
 4502      20756E73 
 4502      69676E65 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 132


 4502      6420696E 
 4502      7400
 4503              	.LASF84:
 4504 023b 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4504      734C7664 
 4504      47657449 
 4504      6E746572 
 4504      72757074 
 4505              	.LASF22:
 4506 0256 43795379 		.ascii	"CySysClkImoStop\000"
 4506      73436C6B 
 4506      496D6F53 
 4506      746F7000 
 4507              	.LASF68:
 4508 0266 4379496E 		.ascii	"CyIntSetPending\000"
 4508      74536574 
 4508      50656E64 
 4508      696E6700 
 4509              	.LASF94:
 4510 0276 43795379 		.ascii	"CySysTickGetCallback\000"
 4510      73546963 
 4510      6B476574 
 4510      43616C6C 
 4510      6261636B 
 4511              	.LASF46:
 4512 028b 43795379 		.ascii	"CySysGetResetReason\000"
 4512      73476574 
 4512      52657365 
 4512      74526561 
 4512      736F6E00 
 4513              	.LASF3:
 4514 029f 73686F72 		.ascii	"short unsigned int\000"
 4514      7420756E 
 4514      7369676E 
 4514      65642069 
 4514      6E7400
 4515              	.LASF87:
 4516 02b2 43795379 		.ascii	"CySysTickSetClockSource\000"
 4516      73546963 
 4516      6B536574 
 4516      436C6F63 
 4516      6B536F75 
 4517              	.LASF58:
 4518 02ca 4379496E 		.ascii	"CyIntSetVector\000"
 4518      74536574 
 4518      56656374 
 4518      6F7200
 4519              	.LASF105:
 4520 02d9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4520      6E657261 
 4520      7465645F 
 4520      536F7572 
 4520      63655C50 
 4521              	.LASF61:
 4522 02fa 7072696F 		.ascii	"priority\000"
 4522      72697479 
 4522      00
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 133


 4523              	.LASF30:
 4524 0303 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4524      73436C6B 
 4524      57726974 
 4524      65496D6F 
 4524      46726571 
 4525              	.LASF52:
 4526 0318 4379496E 		.ascii	"CyIntSetSysVector\000"
 4526      74536574 
 4526      53797356 
 4526      6563746F 
 4526      7200
 4527              	.LASF17:
 4528 032a 72656733 		.ascii	"reg32\000"
 4528      3200
 4529              	.LASF77:
 4530 0330 43795379 		.ascii	"CySysTickStart\000"
 4530      73546963 
 4530      6B537461 
 4530      727400
 4531              	.LASF37:
 4532 033f 72657475 		.ascii	"returnStatus\000"
 4532      726E5374 
 4532      61747573 
 4532      00
 4533              	.LASF19:
 4534 034c 73697A65 		.ascii	"sizetype\000"
 4534      74797065 
 4534      00
 4535              	.LASF102:
 4536 0355 43795379 		.ascii	"CySysTickInitVar\000"
 4536      73546963 
 4536      6B496E69 
 4536      74566172 
 4536      00
 4537              	.LASF69:
 4538 0366 4379496E 		.ascii	"CyIntClearPending\000"
 4538      74436C65 
 4538      61725065 
 4538      6E64696E 
 4538      6700
 4539              	.LASF54:
 4540 0378 61646472 		.ascii	"address\000"
 4540      65737300 
 4541              	.LASF25:
 4542 0380 73797363 		.ascii	"sysclkSource\000"
 4542      6C6B536F 
 4542      75726365 
 4542      00
 4543              	.LASF92:
 4544 038d 66756E63 		.ascii	"function\000"
 4544      74696F6E 
 4544      00
 4545              	.LASF103:
 4546 0396 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4546      6F467265 
 4546      714D687A 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 134


 4546      32526567 
 4546      00
 4547              	.LASF86:
 4548 03a7 43795379 		.ascii	"CySysTickGetValue\000"
 4548      73546963 
 4548      6B476574 
 4548      56616C75 
 4548      6500
 4549              	.LASF98:
 4550 03b9 63796465 		.ascii	"cydelayFreqHz\000"
 4550      6C617946 
 4550      72657148 
 4550      7A00
 4551              	.LASF60:
 4552 03c7 4379496E 		.ascii	"CyIntSetPriority\000"
 4552      74536574 
 4552      5072696F 
 4552      72697479 
 4552      00
 4553              	.LASF12:
 4554 03d8 666C6F61 		.ascii	"float\000"
 4554      7400
 4555              	.LASF42:
 4556 03de 43795379 		.ascii	"CySysLvdEnable\000"
 4556      734C7664 
 4556      456E6162 
 4556      6C6500
 4557              	.LASF20:
 4558 03ed 63795379 		.ascii	"cySysTickCallback\000"
 4558      73546963 
 4558      6B43616C 
 4558      6C626163 
 4558      6B00
 4559              	.LASF59:
 4560 03ff 4379496E 		.ascii	"CyIntGetVector\000"
 4560      74476574 
 4560      56656374 
 4560      6F7200
 4561              	.LASF73:
 4562 040e 6D696C6C 		.ascii	"milliseconds\000"
 4562      69736563 
 4562      6F6E6473 
 4562      00
 4563              	.LASF16:
 4564 041b 72656738 		.ascii	"reg8\000"
 4564      00
 4565              	.LASF43:
 4566 0420 74687265 		.ascii	"threshold\000"
 4566      73686F6C 
 4566      6400
 4567              	.LASF70:
 4568 042a 43794861 		.ascii	"CyHalt\000"
 4568      6C7400
 4569              	.LASF1:
 4570 0431 756E7369 		.ascii	"unsigned char\000"
 4570      676E6564 
 4570      20636861 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 135


 4570      7200
 4571              	.LASF2:
 4572 043f 73686F72 		.ascii	"short int\000"
 4572      7420696E 
 4572      7400
 4573              	.LASF65:
 4574 0449 4379496E 		.ascii	"CyIntEnable\000"
 4574      74456E61 
 4574      626C6500 
 4575              	.LASF57:
 4576 0455 4379496E 		.ascii	"CyIntGetSysVector\000"
 4576      74476574 
 4576      53797356 
 4576      6563746F 
 4576      7200
 4577              	.LASF28:
 4578 0467 636C6B53 		.ascii	"clkSelect\000"
 4578      656C6563 
 4578      7400
 4579              	.LASF35:
 4580 0471 43795379 		.ascii	"CySysClkEcoStart\000"
 4580      73436C6B 
 4580      45636F53 
 4580      74617274 
 4580      00
 4581              	.LASF47:
 4582 0482 72656173 		.ascii	"reason\000"
 4582      6F6E00
 4583              	.LASF14:
 4584 0489 63686172 		.ascii	"char\000"
 4584      00
 4585              	.LASF18:
 4586 048e 63796973 		.ascii	"cyisraddress\000"
 4586      72616464 
 4586      72657373 
 4586      00
 4587              	.LASF79:
 4588 049b 43795379 		.ascii	"CySysTickEnable\000"
 4588      73546963 
 4588      6B456E61 
 4588      626C6500 
 4589              	.LASF27:
 4590 04ab 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4590      73436C6B 
 4590      57726974 
 4590      65537973 
 4590      636C6B44 
 4591              	.LASF91:
 4592 04c2 43795379 		.ascii	"CySysTickSetCallback\000"
 4592      73546963 
 4592      6B536574 
 4592      43616C6C 
 4592      6261636B 
 4593              	.LASF97:
 4594 04d7 43795379 		.ascii	"CySysTickCallbacks\000"
 4594      73546963 
 4594      6B43616C 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 136


 4594      6C626163 
 4594      6B7300
 4595              	.LASF96:
 4596 04ea 756E6971 		.ascii	"uniqueId\000"
 4596      75654964 
 4596      00
 4597              	.LASF72:
 4598 04f3 43794465 		.ascii	"CyDelay\000"
 4598      6C617900 
 4599              	.LASF82:
 4600 04fb 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4600      73546963 
 4600      6B446973 
 4600      61626C65 
 4600      496E7465 
 4601              	.LASF44:
 4602 0515 43795379 		.ascii	"CySysLvdDisable\000"
 4602      734C7664 
 4602      44697361 
 4602      626C6500 
 4603              	.LASF100:
 4604 0525 63796465 		.ascii	"cydelayFreqMhz\000"
 4604      6C617946 
 4604      7265714D 
 4604      687A00
 4605              	.LASF38:
 4606 0534 43795379 		.ascii	"CySysClkEcoStop\000"
 4606      73436C6B 
 4606      45636F53 
 4606      746F7000 
 4607              	.LASF80:
 4608 0544 43795379 		.ascii	"CySysTickStop\000"
 4608      73546963 
 4608      6B53746F 
 4608      7000
 4609              	.LASF106:
 4610 0552 433A5C55 		.ascii	"C:\\Users\\humon\\Desktop\\CypressMinimal\\MinimalF"
 4610      73657273 
 4610      5C68756D 
 4610      6F6E5C44 
 4610      65736B74 
 4611 0580 69726D77 		.ascii	"irmwareWorkspace\\MinimalFirmware.cydsn\000"
 4611      61726557 
 4611      6F726B73 
 4611      70616365 
 4611      5C4D696E 
 4612              	.LASF36:
 4613 05a7 74696D65 		.ascii	"timeoutUs\000"
 4613      6F757455 
 4613      7300
 4614              	.LASF29:
 4615 05b1 64697669 		.ascii	"divider\000"
 4615      64657200 
 4616              	.LASF41:
 4617 05b9 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 4617      73436C6B 
 4617      57726974 
ARM GAS  C:\Users\humon\AppData\Local\Temp\ccU8NPeV.s 			page 137


 4617      6545636F 
 4617      44697600 
 4618              	.LASF15:
 4619 05cd 63797374 		.ascii	"cystatus\000"
 4619      61747573 
 4619      00
 4620              	.LASF104:
 4621 05d6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4621      4320342E 
 4621      392E3320 
 4621      32303135 
 4621      30333033 
 4622 0609 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4622      20726576 
 4622      6973696F 
 4622      6E203232 
 4622      31323230 
 4623 063c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4623      66756E63 
 4623      74696F6E 
 4623      2D736563 
 4623      74696F6E 
 4624              	.LASF21:
 4625 0664 43795379 		.ascii	"CySysClkImoStart\000"
 4625      73436C6B 
 4625      496D6F53 
 4625      74617274 
 4625      00
 4626              	.LASF75:
 4627 0675 6D696372 		.ascii	"microseconds\000"
 4627      6F736563 
 4627      6F6E6473 
 4627      00
 4628              	.LASF24:
 4629 0682 746D7052 		.ascii	"tmpReg\000"
 4629      656700
 4630              	.LASF83:
 4631 0689 43795379 		.ascii	"CySysTickSetReload\000"
 4631      73546963 
 4631      6B536574 
 4631      52656C6F 
 4631      616400
 4632              	.LASF107:
 4633 069c 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4633      73546963 
 4633      6B536572 
 4633      76696365 
 4633      43616C6C 
 4634              	.LASF40:
 4635 06b6 72657475 		.ascii	"returnValue\000"
 4635      726E5661 
 4635      6C756500 
 4636              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
